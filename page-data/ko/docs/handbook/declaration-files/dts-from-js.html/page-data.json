{"componentChunkName":"component---src-templates-documentation-tsx","path":"/ko/docs/handbook/declaration-files/dts-from-js.html","result":{"data":{"markdownRemark":{"id":"a7a97e0c-e6b8-52a4-b72a-e0c4a0f2554a","excerpt":"TypeScript 3.7에서,\nTypeScript는 JSDoc 구문을 사용한 JavaScript에서 .d.ts 파일을 생성할 수 있게 되었습니다. 즉 프로젝트를 TypeScript에 이식하거나(porting) 코드베이스에 .d.ts 파일을 유지하지 않고도 TypeScript…","html":"<p><a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#--declaration-and---allowjs\">TypeScript 3.7에서</a>,\nTypeScript는 JSDoc 구문을 사용한 JavaScript에서 .d.ts 파일을 생성할 수 있게 되었습니다.</p>\n<p>즉 프로젝트를 TypeScript에 이식하거나(porting) 코드베이스에 .d.ts 파일을 유지하지 않고도 TypeScript 기반 편집기의 환경을 유지할 수 있습니다.\nTypeScript는 대부분의 JSDoc 태그를 지원하며, <a href=\"https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html#supported-jsdoc\">참조</a>에서 찾을 수 있습니다.</p>\n<h2 id=\"dts-파일-생성을-위한-프로젝트-설정-setting-up-your-project-to-emit-dts-files\" style=\"position:relative;\"><a href=\"#dts-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%A0%95-setting-up-your-project-to-emit-dts-files\" aria-label=\"dts 파일 생성을 위한 프로젝트 설정 setting up your project to emit dts files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.d.ts 파일 생성을 위한 프로젝트 설정 (Setting up your Project to emit .d.ts files)</h2>\n<p>.d.ts 파일을 프로젝트에서 생성하려면, 다음과 같은 4단계를 거쳐야합니다:</p>\n<ul>\n<li>개발 의존성에 TypeScript 추가</li>\n<li>TypeScript 설정을 위해 <code>tsconfig.json</code> 추가</li>\n<li>JS 파일에 해당하는 d.ts 파일을 생성하기 위해 TypeScript 컴파일 실행</li>\n<li>(선택적으로) 타입을 참조하기 위한 package.json 수정</li>\n</ul>\n<h3 id=\"typescript-추가-adding-typescript\" style=\"position:relative;\"><a href=\"#typescript-%EC%B6%94%EA%B0%80-adding-typescript\" aria-label=\"typescript 추가 adding typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript 추가 (Adding TypeScript)</h3>\n<p><a href=\"https://www.typescriptlang.org/download\">설치 페이지</a>에서 방법을 확인할 수 있습니다.</p>\n<h3 id=\"tsconfig\" style=\"position:relative;\"><a href=\"#tsconfig\" aria-label=\"tsconfig permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TSConfig</h3>\n<p>TSConfig는 컴파일러 플래그를 구성하고 파일을 찾을 위치를 선언하는 json5 파일입니다.\n위와 같은 경우, 다음과 같은 파일이 필요합니다:</p>\n<pre class=\"shiki light-plus tsconfig lsp\" style=\"background-color: #FFFFFF; color: #000000\" tsconfig=\"true\"><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #008000\">// 프로젝트에 알맞게 수정하세요.</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#include'><data-lsp lsp=\"Specify a list of glob patterns that match files to be included in compilation.\">include</data-lsp></a>\"</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"src/**/*\"</span><span style=\"color: #000000\">],</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#compilerOptions'><data-lsp lsp=\"The set of compiler options for your project\">compilerOptions</data-lsp></a>\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// 일반적으로 소스 파일로 무시되기 때문에,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// TypeScript가 JS 파일\b을 읽도록 지시합니다.</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#allowJs'><data-lsp lsp=\"Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files.\">allowJs</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// d.ts 파일을 생성시킵니다.</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#declaration'><data-lsp lsp=\"Generate .d.ts files from TypeScript and JavaScript files in your project.\">declaration</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// 컴파일러 실행이 오직</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// d.ts 파일만 출력하게 합니다.</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#emitDeclarationOnly'><data-lsp lsp=\"Only output d.ts files and not JavaScript files.\">emitDeclarationOnly</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// 타입은 이 디렉터리 안에 존재해야 합니다.</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// 해당 설정을 제거하면,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// .d.ts 파일이 .js 파일 옆에 생성됩니다.</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#outDir'><data-lsp lsp=\"Specify an output folder for all emitted files.\">outDir</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"dist\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">  },</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p><a href=\"/reference\">tsconfig 참조</a>에서 더 많은 옵션을 찾을 수 있습니다.\nTSConfig 파일을 사용하는 대신 CLI를 사용할 수 있습니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npx typescript src/**/*.js --declaration --allowJs --emitDeclarationOnly --outDir types</span></div></code></div></pre>\n<h2 id=\"컴파일러-실행-run-the-compiler\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC-%EC%8B%A4%ED%96%89-run-the-compiler\" aria-label=\"컴파일러 실행 run the compiler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴파일러 실행 (Run the compiler)</h2>\n<p><a href=\"https://www.typescriptlang.org/download\">설치 페이지</a>에서 방법을 확인할 수 있습니다.\n프로젝트의 <code>.gitignore</code>에 파일이 있을 때, 이러한 파일들이 패키지에 포함되어 있는지 확인합니다.</p>\n<h2 id=\"packagejson-수정-editing-the-packagejson\" style=\"position:relative;\"><a href=\"#packagejson-%EC%88%98%EC%A0%95-editing-the-packagejson\" aria-label=\"packagejson 수정 editing the packagejson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json 수정 (Editing the package.json)</h2>\n<p>TypeScript는 .d.ts 파일을 찾기 위한 추가 단계와 함께 <code>package.json</code>의 모듈에 대한 노드 관계(node resolution)를 복제합니다.\n대략적으로 먼저 선택적인 <code>\"types\"</code> 필드를 확인 후, 다음은 <code>\"main\"</code>, 마지막으로 루트에서 <code>index.d.ts</code>를 확인합니다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Package.json</th>\n<th align=\"left\">기본 .d.ts의 위치</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">“types” 필드 없음</td>\n<td align=\"left\">“main” 확인 후, index.d.ts 확인</td>\n</tr>\n<tr>\n<td align=\"left\">“types”: “main.d.ts”</td>\n<td align=\"left\">main.d.ts</td>\n</tr>\n<tr>\n<td align=\"left\">“types”: “./dist/main.js”</td>\n<td align=\"left\">./dist/main.d.ts</td>\n</tr>\n</tbody>\n</table>\n<p>type 필드가 없다면, “main”으로 넘어갑니다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Package.json</th>\n<th align=\"left\">기본 .d.ts의 위치</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">“main” 필드 없음</td>\n<td align=\"left\">index.d.ts</td>\n</tr>\n<tr>\n<td align=\"left\">“main”:“index.js”</td>\n<td align=\"left\">index.d.ts</td>\n</tr>\n<tr>\n<td align=\"left\">“main”:“./dist/index.js”</td>\n<td align=\"left\">./dist/index.d.ts</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"팁-tips\" style=\"position:relative;\"><a href=\"#%ED%8C%81-tips\" aria-label=\"팁 tips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>팁 (Tips)</h2>\n<p>.d.ts의 테스트를 작성하고 싶다면, <a href=\"https://github.com/SamVerschueren/tsd\">tsd</a>를 사용해보세요.</p>","headings":[{"value":".d.ts 파일 생성을 위한 프로젝트 설정 (Setting up your Project to emit .d.ts files)","depth":2},{"value":"TypeScript 추가 (Adding TypeScript)","depth":3},{"value":"TSConfig","depth":3},{"value":"컴파일러 실행 (Run the compiler)","depth":2},{"value":"package.json 수정 (Editing the package.json)","depth":2},{"value":"팁 (Tips)","depth":2}],"frontmatter":{"permalink":"/ko/docs/handbook/declaration-files/dts-from-js.html","title":"Creating .d.ts Files from .js files","disable_toc":null,"handbook":null,"oneline":"How to add d.ts generation to JavaScript projects","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":{"childMarkdownRemark":{"frontmatter":{"title":"JSDoc Reference","oneline":"What JSDoc does TypeScript-powered JavaScript support?","permalink":"/ko/docs/handbook/jsdoc-supported-types.html"}}},"next":null},"pageContext":{"id":"7-creating-.d.ts-files-from-.js-files","slug":"/ko/docs/handbook/declaration-files/dts-from-js.html","repoPath":"/packages/documentation/copy/ko/javascript/Creating DTS files From JS.md","previousID":"14789c82-cd47-508c-aac3-f304f0feef66","lang":"ko","modifiedTime":"2024-10-21T12:35:09.557Z"}},"staticQueryHashes":[]}