{"componentChunkName":"component---src-templates-documentation-tsx","path":"/ko/docs/handbook/declaration-files/templates/module-function-d-ts.html","result":{"data":{"markdownRemark":{"id":"62ee4616-14ff-5bd7-937a-1e6edb0f5704","excerpt":"예를 들어 다음과 같은 자바스크립트 코드를 다루는 경우를 가정합시다. UMD 또는 일반 모듈을 임포팅하는 두 가지 경우 모두에 대해 대응하려면 다음을 참고합니다.","html":"<p>예를 들어 다음과 같은 자바스크립트 코드를 다루는 경우를 가정합시다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">greeter</span><span style=\"color: #000000\"> </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"super-greeter\"</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #795E26\">greeter</span><span style=\"color: #000000\">(</span><span style=\"color: #098658\">2</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #795E26\">greeter</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"Hello world\"</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p>UMD 또는 일반 모듈을 임포팅하는 두 가지 경우 모두에 대해 대응하려면 다음을 참고합니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">// Type definitions for [~라이브러리 이름~] [~선택적 버전 숫자~]</span></div><div class='line'><span style=\"color: #008000\">// Project: [~프로젝트 이름~]</span></div><div class='line'><span style=\"color: #008000\">// Definitions by: [~내 이름~] &lt;[~내 URL~]&gt;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ 함수 모듈을 위한 모듈 템플릿 입니다.</span></div><div class='line'><span style=\"color: #008000\"> *~ 이름을 index.d.ts로 변경하고, 모듈과 같은 이름의 폴더 안에 배치해야 합니다.</span></div><div class='line'><span style=\"color: #008000\"> *~ 예를 들어, \"super-greeter\" 파일을 작성하는 경우</span></div><div class='line'><span style=\"color: #008000\"> *~ 이 파일은 'super-greeter/index.d.ts'가 되어야 합니다.</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// ES6 모듈은 클래스 객체를 직접 export할 수 없습니다.</span></div><div class='line'><span style=\"color: #008000\">// 이 파일은 CommonJS-스타일을 사용해서 import 해야 합니다:</span></div><div class='line'><span style=\"color: #008000\">//   import x = require('[~THE MODULE~]');</span></div><div class='line'><span style=\"color: #008000\">//</span></div><div class='line'><span style=\"color: #008000\">// 또한, --allowSyntheticDefaultImports 나</span></div><div class='line'><span style=\"color: #008000\">// --esModuleInterop 옵션을 활성화한다면,</span></div><div class='line'><span style=\"color: #008000\">// default import로 import할 수 있습니다:</span></div><div class='line'><span style=\"color: #008000\">//   import x from '[~THE MODULE~]';</span></div><div class='line'><span style=\"color: #008000\">//</span></div><div class='line'><span style=\"color: #008000\">// ES6 모듈의 제한에 대한 일반적인 해결방법을 이해하려면</span></div><div class='line'><span style=\"color: #008000\">// https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require</span></div><div class='line'><span style=\"color: #008000\">// 에서 TypeScript 문서를 참고하세요.</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ 전역 변수 'myFuncLib'을 노출하는 UMD 모듈을</span></div><div class='line'><span style=\"color: #008000\"> *~ 모듈 로더 환경 외부에서 로드하려면, 여기에서 전역으로 선언하세요.</span></div><div class='line'><span style=\"color: #008000\"> *~ 그렇지 않으면, 이 선언을 제거하세요.</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #AF00DB\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">myFuncLib</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ 이 선언은 함수를</span></div><div class='line'><span style=\"color: #008000\"> *~ 파일에서 export된 객체로 지정합니다.</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">Greeter</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ 이 예제는 함수에 대한 여러 오버로드하는 방법을 보여줍니다 */</span></div><div class='line'><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">Greeter</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">name</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">): </span><span style=\"color: #1C6277\">Greeter</span><span style=\"color: #000000\">.</span><span style=\"color: #1C6277\">NamedReturnType</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">Greeter</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">length</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">): </span><span style=\"color: #1C6277\">Greeter</span><span style=\"color: #000000\">.</span><span style=\"color: #1C6277\">LengthReturnType</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ 모듈에서 타입을 노출하고 싶다면,</span></div><div class='line'><span style=\"color: #008000\"> *~ 이 블록 안에 위치시키세요. 종종 함수 반환 타입의 형태를</span></div><div class='line'><span style=\"color: #008000\"> *~ 기술하고 싶을 수 있습니다; 그 타입은</span></div><div class='line'><span style=\"color: #008000\"> *~ 이 예제처럼 여기에 선언하세요.</span></div><div class='line'><span style=\"color: #008000\"> *~</span></div><div class='line'><span style=\"color: #008000\"> *~ 네임스페이스를 포함할 경우,</span></div><div class='line'><span style=\"color: #008000\"> *~ 모듈을 네임스페이스 객체로 잘못 import 할 수 있습니다.</span></div><div class='line'><span style=\"color: #008000\"> *~ --esModuleInterop 옵션을 활성화하세요:</span></div><div class='line'><span style=\"color: #008000\"> *~   import * as x from '[~THE MODULE~]'; // 오류! 이렇게 하지 마세요!</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Greeter</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">LengthReturnType</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">width</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">height</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">  }</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">NamedReturnType</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">firstName</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">lastName</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">  }</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #008000\">/*~ 모듈이 프로퍼티를 갖고 있다면, 여기에 선언하세요. 예를 들어</span></div><div class='line'><span style=\"color: #008000\">   *~ 이 선언은 이 코드가 합법적임을 의미합니다:</span></div><div class='line'><span style=\"color: #008000\">   *~   import f = require('super-greeter');</span></div><div class='line'><span style=\"color: #008000\">   *~   console.log(f.defaultName);</span></div><div class='line'><span style=\"color: #008000\">   */</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">defaultName</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">defaultLength</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>","headings":[],"frontmatter":{"permalink":"/ko/docs/handbook/declaration-files/templates/module-function-d-ts.html","title":"Module: Function","disable_toc":null,"handbook":null,"oneline":null,"preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"id":"6-module:-function","slug":"/ko/docs/handbook/declaration-files/templates/module-function-d-ts.html","repoPath":"/packages/documentation/copy/ko/declaration-files/templates/module-function.d.ts.md","lang":"ko","modifiedTime":"2024-10-21T12:35:09.553Z"}},"staticQueryHashes":[]}