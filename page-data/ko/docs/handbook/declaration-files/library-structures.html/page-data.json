{"componentChunkName":"component---src-templates-documentation-tsx","path":"/ko/docs/handbook/declaration-files/library-structures.html","result":{"data":{"markdownRemark":{"id":"4ad4d18e-3b1c-5a65-968d-448e3ce7a36e","excerpt":"개요 (Overview) 일반적으로, 선언 파일을 구조화하는 방법은 라이브러리를 사용하는 방법에 따라 다릅니다.\nJavaScript…","html":"<h1 id=\"개요-overview\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94-overview\" aria-label=\"개요 overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요 (Overview)</h1>\n<p>일반적으로, 선언 파일을 <em>구조화</em>하는 방법은 라이브러리를 사용하는 방법에 따라 다릅니다.\nJavaScript에서 사용할 라이브러리를 제공하는 방법은 여러 가지가 있고, 이에 맞추어 선언 파일을 작성해야 합니다.\n이 가이드는 일반적인 라이브러리 패턴을 식별하는 방법과, 그 패턴에 상응하는 선언 파일을 작성하는 방법에 대해 다룹니다.</p>\n<p>주요 라이브러리 각각의 구조화 패턴 유형은 <a href=\"/docs/handbook/declaration-files/templates.html\">템플릿</a> 섹션에 있습니다.\n이 템플릿으로 시작하면 더 빠르게 진행할 수 있습니다.</p>\n<h1 id=\"라이브러리-종류-식별하기-identifying-kinds-of-libraries\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%A2%85%EB%A5%98-%EC%8B%9D%EB%B3%84%ED%95%98%EA%B8%B0-identifying-kinds-of-libraries\" aria-label=\"라이브러리 종류 식별하기 identifying kinds of libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브러리 종류 식별하기 (Identifying Kinds of Libraries)</h1>\n<p>첫 번째로, TypeScript 선언 파일이 나타낼 수 있는 라이브러리 종류를 다뤄보겠습니다.\n각 종류의 라이브러리를 <em>사용하는</em> 방법과, <em>작성하는</em> 방법, 그리고 실제 라이브러리들의 예제를 볼 것입니다.</p>\n<p>라이브러리의 구조를 식별하는 것은 선언 파일을 작성하는 첫 단계입니다.\n<em>사용법</em>과 <em>코드</em>를 기반으로 구조를 식별하는 방법에 대한 힌트를 제공합니다.\n라이브러리의 문서와 구성에 따라서, 어떤 건 다른 것보다 훨씬 쉬울 수 있습니다.\n본인에게 더 편한 것을 사용할 것을 추천합니다.</p>\n<h2 id=\"어떤-사항을-고려해야-하는가-what-should-you-look-for\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%96%A4-%EC%82%AC%ED%95%AD%EC%9D%84-%EA%B3%A0%EB%A0%A4%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94%EA%B0%80-what-should-you-look-for\" aria-label=\"어떤 사항을 고려해야 하는가 what should you look for permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어떤 사항을 고려해야 하는가? (What should you look for?)</h2>\n<p>라이브러리를 사용하기 전에, 다음 사항을 고려해 볼 수 있습니다.</p>\n<ol>\n<li>\n<p>라이브러리를 다운로드하는 방식이 무엇인가?</p>\n<p>예를 들어, npm으로만 다운로드 할 수 있는가? 아니면 CDN 에서만 다운로드 할 수 있는가?</p>\n</li>\n<li>\n<p>라이브러리를 임포트하는 방식이 무엇인가?</p>\n<p>전역 객체를 추가하는 방식인가? 아니면 <code>require</code> 또는 <code>import</code>/<code>export</code> 구문을 사용하는 방식인가?</p>\n</li>\n</ol>\n<h2 id=\"여러-종류의-라이브러리에-대한-간단한-샘플\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EB%9F%AC-%EC%A2%85%EB%A5%98%EC%9D%98-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%83%98%ED%94%8C\" aria-label=\"여러 종류의 라이브러리에 대한 간단한 샘플 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여러 종류의 라이브러리에 대한 간단한 샘플</h2>\n<h2 id=\"모듈형-라이브러리-modular-libraries\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88%ED%98%95-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-modular-libraries\" aria-label=\"모듈형 라이브러리 modular libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈형 라이브러리 (Modular Libraries)</h2>\n<p>어떤 라이브러리는 모듈 로더 환경에서만 동작합니다.\n예를 들어, <code>express</code>는 Node.js에서만 동작하고 반드시 CommonJS의 <code>require</code> 함수로 로드되어야 합니다.</p>\n<p>ECMAScript 2015 (ES2015, ECMAScript 6, ES6로도 잘 알려진), CommonJS와 RequireJS는 <em>모듈</em>을 <em>importing</em>하는 비슷한 개념을 가지고 있습니다.\nJavaScript의 CommonJS (Node.js)를 예를 들면, 다음과 같이 작성합니다</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">fs</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"fs\"</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p>TypeScript나 ES6에서는, <code>import</code> 키워드가 같은 목적을 제공합니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">fs</span><span style=\"color: #000000\"> = </span><span style=\"color: #AF00DB\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"fs\"</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p>일반적으로 모듈형 라이브러리의 문서에서 다음 코드들 중 하나를 볼 수 있습니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">someLib</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'someLib'</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p>혹은</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #795E26\">define</span><span style=\"color: #000000\">(..., [</span><span style=\"color: #A31515\">'someLib'</span><span style=\"color: #000000\">], </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">someLib</span><span style=\"color: #000000\">) {</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">});</span></div></code></div></pre>\n<p>전역 모듈과 마찬가지로 UMD 모듈의 문서에서도 이 예제들을 볼 수 있으므로, 코드나 문서를 반드시 확인하세요.</p>\n<h3 id=\"코드에서-모듈-라이브러리-식별하기-identifying-a-module-library-from-code\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EB%AA%A8%EB%93%88-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%8B%9D%EB%B3%84%ED%95%98%EA%B8%B0-identifying-a-module-library-from-code\" aria-label=\"코드에서 모듈 라이브러리 식별하기 identifying a module library from code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드에서 모듈 라이브러리 식별하기 (Identifying a Module Library from Code)</h3>\n<p>모듈형 라이브러리는 일반적으로 다음 중 몇 가지를 반드시 가지고 있습니다:</p>\n<ul>\n<li><code>require</code> 혹은 <code>define</code>에 대한 무조건적인 호출</li>\n<li><code>import * as a from 'b';</code> 혹은 <code>export c;</code> 같은 선언문</li>\n<li><code>exports</code> 혹은 <code>module.exports</code>에 대한 할당</li>\n</ul>\n<p>다음은 거의 갖지 않습니다:</p>\n<ul>\n<li><code>window</code> 혹은 <code>global</code> 프로퍼티 할당</li>\n</ul>\n<h3 id=\"모듈을-위한-템플릿-templates-for-modules\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%85%9C%ED%94%8C%EB%A6%BF-templates-for-modules\" aria-label=\"모듈을 위한 템플릿 templates for modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈을 위한 템플릿 (Templates For Modules)</h3>\n<p>모듈을 위한 네 가지 템플릿이 있습니다.</p>\n<ul>\n<li><a href=\"/docs/handbook/declaration-files/templates/module-d-ts.html\"><code>module.d.ts</code></a></li>\n<li><a href=\"/docs/handbook/declaration-files/templates/module-class-d-ts.html\"><code>module-class.d.ts</code></a></li>\n<li><a href=\"/docs/handbook/declaration-files/templates/module-function-d-ts.html\"><code>module-function.d.ts</code></a></li>\n<li><a href=\"/docs/handbook/declaration-files/templates/module-plugin-d-ts.html\"><code>module-plugin.d.ts</code></a></li>\n</ul>\n<p>각각이 어떻게 동작하는지에 대한 개요는 <a href=\"/docs/handbook/declaration-files/templates/module-d-ts.html\"><code>module.d.ts</code></a>를 참조하세요.</p>\n<p>만약 모듈을 함수처럼 <em>호출</em>할 수 있으면 <a href=\"/docs/handbook/declaration-files/templates/module-function-d-ts.html\"><code>module-function.d.ts</code></a>을 사용하세요:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">x</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"foo\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #008000\">// 참고: 함수로 'x'를 호출</span></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">y</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">x</span><span style=\"color: #000000\">(</span><span style=\"color: #098658\">42</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p>만약 모듈이 <code>new</code>를 사용하여 <em>생성</em>될 수 있다면  <a href=\"/docs/handbook/declaration-files/templates/module-class-d-ts.html\"><code>module-class.d.ts</code></a>를 사용하세요:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">x</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"bar\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #008000\">// 참고: 'new' 연산자를 import된 변수에 사용</span></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">y</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">x</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"hello\"</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p>임포트 되었을 때 다른 모듈에 수정사항을 만드는 모듈을 사용한다면, <a href=\"/docs/handbook/declaration-files/templates/module-plugin-d-ts.html\"><code>module-plugin.d.ts</code></a> 템플릿을 사용하세요:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">jest</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"jest\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"jest-matchers-files\"</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<h2 id=\"전역-라이브러리-global-libraries\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-global-libraries\" aria-label=\"전역 라이브러리 global libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 라이브러리 (Global Libraries)</h2>\n<p><em>전역</em> 라이브러리는 전역 스코프 (즉, <code>import</code> 형식을 사용하지 않음)에서 접근 가능한 라이브러리입니다.\n많은 라이브러리는 사용을 위해 간단히 하나 이상의 전역 변수를 노출합니다.\n예를 들어, <a href=\"https://jquery.com/\">jQuery</a>를 사용한다면, <code>$</code> 변수를 참조해서 사용할 수 있습니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #795E26\">$</span><span style=\"color: #000000\">(() </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'hello!'</span><span style=\"color: #000000\">); } );</span></div></code></div></pre>\n<p>HTML 스크립트 태그로 라이브러리를 사용하는 방법은 라이브러리 문서에서 지침을 볼 수 있습니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">html</div><div class='code-container'><code><div class='line'><span style=\"color: #800000\">&lt;script</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">src</span><span style=\"color: #000000FF\">=</span><span style=\"color: #0000FF\">\"http://a.great.cdn.for/someLib.js\"</span><span style=\"color: #800000\">&gt;&lt;/script&gt;</span></div></code></div></pre>\n<p>오늘날, 대부분의 전역에서 접근 가능한 유명 라이브러리들은 실제로 UMD 라이브러리로 작성되어 있습니다 (아래를 참조).\nUMD 라이브러리 문서는 전역 라이브러리 문서와 구별하기 어렵습니다.\n전역 선언 파일을 작성하기 전에, 실제로는 UMD가 아닌지 확인하십시오.</p>\n<h3 id=\"코드에서-전역-라이브러리-식별하기-identifying-a-global-library-from-code\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EC%A0%84%EC%97%AD-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%8B%9D%EB%B3%84%ED%95%98%EA%B8%B0-identifying-a-global-library-from-code\" aria-label=\"코드에서 전역 라이브러리 식별하기 identifying a global library from code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드에서 전역 라이브러리 식별하기 (Identifying a Global Library from Code)</h3>\n<p>전역 라이브러리 코드는 대게 엄청 간단합니다.\n전역 “Hello, world” 라이브러리는 다음과 같습니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">createGreeting</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Hello, \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>혹은 다음과 같습니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">// Web</span></div><div class='line'><span style=\"color: #001080\">window</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">createGreeting</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Hello, \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// Node</span></div><div class='line'><span style=\"color: #001080\">global</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">createGreeting</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Hello, \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// Potentially any runtime</span></div><div class='line'><span style=\"color: #001080\">globalThis</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">createGreeting</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Hello, \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">};</span></div></code></div></pre>\n<p>전역 라이브러리의 코드를 보면, 보통 다음을 볼 수 있습니다:</p>\n<ul>\n<li>최상위 레벨 <code>var</code>문 이나 <code>function</code>선언</li>\n<li>하나 이상의 <code>window.someName</code> 할당</li>\n<li>DOM 인터페이스 <code>document</code> 혹은 <code>window</code>가 존재한다고 가정</li>\n</ul>\n<p>다음은 볼 수 <em>없습니다</em>:</p>\n<ul>\n<li><code>require</code> 이나 <code>define</code> 같은 모듈 로더 검사 혹은 사용</li>\n<li><code>var fs = require(\"fs\");</code> 형태의 CommonJS/Node.js-스타일 import</li>\n<li><code>define(...)</code> 호출</li>\n<li>라이브러리를 <code>require</code> 혹은 import하는 방법에 대해 설명하는 문서</li>\n</ul>\n<h3 id=\"전역-라이브러리-예제-examples-of-global-libraries\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%98%88%EC%A0%9C-examples-of-global-libraries\" aria-label=\"전역 라이브러리 예제 examples of global libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 라이브러리 예제 (Examples of Global Libraries)</h3>\n<p>전역 라이브러리를 UMD 라이브러리로 바꾸는게 쉽기 때문에, 전역 스타일로 작성한 인기 라이브러리는 거의 없습니다.\n하지만, 크기가 작고 DOM이 필요한 (혹은 의존성이 <em>없는</em>) 라이브러리는 여전히 전역입니다.</p>\n<h3 id=\"전역-라이브러리-템플릿-global-library-template\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%ED%85%9C%ED%94%8C%EB%A6%BF-global-library-template\" aria-label=\"전역 라이브러리 템플릿 global library template permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 라이브러리 템플릿 (Global Library Template)</h3>\n<p>템플릿 파일 <a href=\"./templates/global.d.ts.md\"><code>global.d.ts</code></a>은 예제 라이브러리 <code>myLib</code>를 정의합니다.\n<a href=\"#preventing-name-conflicts\">“이름 충돌 방지” 각주</a>를 반드시 읽어보세요.</p>\n<h2 id=\"umd\" style=\"position:relative;\"><a href=\"#umd\" aria-label=\"umd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>UMD</em></h2>\n<p><em>UMD</em> 모듈은 모듈로 (import를 통해) 사용할 수 있고 혹은 전역으로도 (모듈 로더 없는 환경에서 실행될 때) 사용할 수 있습니다.\n<a href=\"http://momentjs.com/\">Moment.js</a> 같은 많은 유명한 라이브러리들은 이 방법으로 작성되었습니다.\n예를 들어, Node.js나 RequireJS를 사용하면, 다음과 같이 작성합니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">moment</span><span style=\"color: #000000\"> = </span><span style=\"color: #AF00DB\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"moment\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">moment</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">format</span><span style=\"color: #000000\">());</span></div></code></div></pre>\n<p>반면 바닐라 브라우저 환경에서는 다음과 같이 쓸 수 있습니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">moment</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">format</span><span style=\"color: #000000\">());</span></div></code></div></pre>\n<h3 id=\"umd-라이브러리-식별하기-identifying-a-umd-library\" style=\"position:relative;\"><a href=\"#umd-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%8B%9D%EB%B3%84%ED%95%98%EA%B8%B0-identifying-a-umd-library\" aria-label=\"umd 라이브러리 식별하기 identifying a umd library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UMD 라이브러리 식별하기 (Identifying a UMD library)</h3>\n<p><a href=\"https://github.com/umdjs/umd\">UMD modules</a>은 모듈 로더 환경 유무를 검사합니다.\n이는 다음과 같이 보이는 찾기 쉬운 패턴입니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">(</span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">root</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">factory</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">define</span><span style=\"color: #000000\"> === </span><span style=\"color: #A31515\">\"function\"</span><span style=\"color: #000000\"> && </span><span style=\"color: #001080\">define</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">amd</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #795E26\">define</span><span style=\"color: #000000\">([</span><span style=\"color: #A31515\">\"libName\"</span><span style=\"color: #000000\">], </span><span style=\"color: #001080\">factory</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">    } </span><span style=\"color: #AF00DB\">else</span><span style=\"color: #000000\"> </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">module</span><span style=\"color: #000000\"> === </span><span style=\"color: #A31515\">\"object\"</span><span style=\"color: #000000\"> && </span><span style=\"color: #1C6277\">module</span><span style=\"color: #000000\">.</span><span style=\"color: #1C6277\">exports</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #1C6277\">module</span><span style=\"color: #000000\">.</span><span style=\"color: #1C6277\">exports</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">factory</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"libName\"</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">    } </span><span style=\"color: #AF00DB\">else</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">root</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">returnExports</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">factory</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">root</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">libName</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}(</span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">b</span><span style=\"color: #000000\">) {</span></div></code></div></pre>\n<p>만약 라이브러리 코드, 특히 파일 상단에서 <code>typeof define</code>, <code>typeof window</code> 혹은 <code>typeof module</code>에 대한 테스트를 보았다면, 거의 대부분 UMD 라이브러리입니다.</p>\n<p>UMD 라이브러리 문서에서는 <code>require</code>를 보여주는 “Node.js에서 사용하기” 예제를 종종 설명하고\n“브라우저에서 사용하기” 예제에서는 <code>&#x3C;script></code> 태그를 사용해서 스크립트를 로드하는 방법을 보여줍니다.</p>\n<h3 id=\"umd-라이브러리-예제-examples-of-umd-libraries\" style=\"position:relative;\"><a href=\"#umd-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%98%88%EC%A0%9C-examples-of-umd-libraries\" aria-label=\"umd 라이브러리 예제 examples of umd libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UMD 라이브러리 예제 (Examples of UMD libraries)</h3>\n<p>유명한 라이브러리 대부분은 UMD 패키지로 사용할 수 있습니다.\n예로는 <a href=\"https://jquery.com/\">jQuery</a>, <a href=\"http://momentjs.com/\">Moment.js</a>, <a href=\"https://loadash.com/\">loadash</a> 등 더 많이 있습니다.</p>\n<h3 id=\"템플릿-template\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-template\" aria-label=\"템플릿 template permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿 (Template)</h3>\n<p><a href=\"/docs/handbook/declaration-files/templates/module-plugin-d-ts.html\"><code>module-plugin.d.ts</code></a> 템플릿을 사용하세요.</p>\n<h1 id=\"span-idconsuming-dependencies--의존성-사용하기-consuming-dependencies\" style=\"position:relative;\"><a href=\"#span-idconsuming-dependencies--%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-consuming-dependencies\" aria-label=\"span idconsuming dependencies  의존성 사용하기 consuming dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><span id=\"consuming-dependencies\" /> 의존성 사용하기 (Consuming Dependencies)</h1>\n<p>라이브러리가 몇 가지 의존성을 가지고 있을 수 있습니다.\n이번 섹션에서는 선언 파일 안에 의존성을 import 하는 방법을 설명합니다.</p>\n<h2 id=\"전역-라이브러리-의존성-dependencies-on-global-libraries\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%9D%98%EC%A1%B4%EC%84%B1-dependencies-on-global-libraries\" aria-label=\"전역 라이브러리 의존성 dependencies on global libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 라이브러리 의존성 (Dependencies on Global Libraries)</h2>\n<p>만약 라이브러리가 전역 라이브러리에 의존성이 있다면, <code>/// &#x3C;reference types=\"...\" /></code> 디렉티브를 사용하세요:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">/// </span><span style=\"color: #800000\">&lt;reference</span><span style=\"color: #008000\"> </span><span style=\"color: #EE0000\">types</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"someLib\"</span><span style=\"color: #008000\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">getThing</span><span style=\"color: #000000\">(): </span><span style=\"color: #1C6277\">someLib</span><span style=\"color: #000000\">.</span><span style=\"color: #1C6277\">thing</span><span style=\"color: #000000\">;</span></div></code></div></pre>\n<h2 id=\"모듈-의존성-dependencies-on-modules\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EC%9D%98%EC%A1%B4%EC%84%B1-dependencies-on-modules\" aria-label=\"모듈 의존성 dependencies on modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 의존성 (Dependencies on Modules)</h2>\n<p>만약 라이브러리가 모듈에 의존성이 있다면, <code>import</code>문을 사용하세요:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #AF00DB\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">moment</span><span style=\"color: #000000\"> </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"moment\"</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">getThing</span><span style=\"color: #000000\">(): </span><span style=\"color: #1C6277\">moment</span><span style=\"color: #000000\">;</span></div></code></div></pre>\n<h2 id=\"umd-라이브러리-의존성-dependencies-on-umd-libraries\" style=\"position:relative;\"><a href=\"#umd-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%9D%98%EC%A1%B4%EC%84%B1-dependencies-on-umd-libraries\" aria-label=\"umd 라이브러리 의존성 dependencies on umd libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UMD 라이브러리 의존성 (Dependencies on UMD libraries)</h2>\n<h3 id=\"전역-라이브러리에서-from-a-global-library\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EC%97%90%EC%84%9C-from-a-global-library\" aria-label=\"전역 라이브러리에서 from a global library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 라이브러리에서 (From a Global Library)</h3>\n<p>만약 전역 라이브러리가 UMD 모듈에 의존성이 있다면, <code>/// &#x3C;reference types</code> 디렉티브를 사용하세요:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">/// </span><span style=\"color: #800000\">&lt;reference</span><span style=\"color: #008000\"> </span><span style=\"color: #EE0000\">types</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"moment\"</span><span style=\"color: #008000\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">getThing</span><span style=\"color: #000000\">(): </span><span style=\"color: #1C6277\">moment</span><span style=\"color: #000000\">;</span></div></code></div></pre>\n<h3 id=\"모듈이나-umd-라이브러리에서-from-a-module-or-umd-library\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88%EC%9D%B4%EB%82%98-umd-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EC%97%90%EC%84%9C-from-a-module-or-umd-library\" aria-label=\"모듈이나 umd 라이브러리에서 from a module or umd library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈이나 UMD 라이브러리에서 (From a Module or UMD Library)</h3>\n<p>만약 모듈이나 UMD 라이브러리가 UMD 라이브러리에 의존성이 있다면, <code>import</code>문을 사용하세요:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #AF00DB\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">someLib</span><span style=\"color: #000000\"> </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">'someLib'</span><span style=\"color: #000000\">;</span></div></code></div></pre>\n<p>UMD 라이브러리에 대한 의존성 선언에 <code>/// &#x3C;reference</code> 디렉티브를 사용하지 <em>마세요</em>!</p>\n<h1 id=\"각주-footnotes\" style=\"position:relative;\"><a href=\"#%EA%B0%81%EC%A3%BC-footnotes\" aria-label=\"각주 footnotes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>각주 (Footnotes)</h1>\n<h2 id=\"span-idpreventing-name-conflicts--이름-충돌-방지하기-preventing-name-conflicts\" style=\"position:relative;\"><a href=\"#span-idpreventing-name-conflicts--%EC%9D%B4%EB%A6%84-%EC%B6%A9%EB%8F%8C-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-preventing-name-conflicts\" aria-label=\"span idpreventing name conflicts  이름 충돌 방지하기 preventing name conflicts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><span id=\"preventing-name-conflicts\" /> 이름 충돌 방지하기 (Preventing Name Conflicts)</h2>\n<p>전역 선언 파일을 작성할 때, 전역 스코프에 많은 타입을 정의할 수 있다는 점을 유의하세요.\n많은 선언 파일이 프로젝트 내에 있을 때, 해결할 수 없는 이름 충돌이 발생할 수 있으므로 이를 사용하지 않는 것이 좋습니다.</p>\n<p>따라야 하는 간단한 규칙은 라이브러리가 정의한 전역 변수가 무엇이든 타입을 <em>네임스페이스</em>로 정의하는 것입니다.\n예를 들어, 만약 라이브러리가 전역 값 ‘cats’를 정의하면, 다음과 같이 작성하고</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">cats</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">KittySettings</span><span style=\"color: #000000\"> { }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>이렇게 하지는 <em>마세요</em></p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">// 최상위-레벨에서</span></div><div class='line'><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">CatsKittySettings</span><span style=\"color: #000000\"> { }</span></div></code></div></pre>\n<p>이 가이드는 선언 파일 사용자가 중단하지 않고 라이브러리를 UMD로 전환할 수 있도록 합니다.</p>\n<h2 id=\"span-idthe-impact-of-es6-on-module-plugins--es6가-모듈-플러그인에-미치는-영향-the-impact-of-es6-on-module-plugins\" style=\"position:relative;\"><a href=\"#span-idthe-impact-of-es6-on-module-plugins--es6%EA%B0%80-%EB%AA%A8%EB%93%88-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%EC%97%90-%EB%AF%B8%EC%B9%98%EB%8A%94-%EC%98%81%ED%96%A5-the-impact-of-es6-on-module-plugins\" aria-label=\"span idthe impact of es6 on module plugins  es6가 모듈 플러그인에 미치는 영향 the impact of es6 on module plugins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><span id=\"the-impact-of-es6-on-module-plugins\" /> ES6가 모듈 플러그인에 미치는 영향 (The Impact of ES6 on Module Plugins)</h2>\n<p>어떤 플러그인은 기존 모듈에 최상위 export를 추가하거나 수정합니다.\nCommonJS와 다른 로더에서는 허용되지만, ES6 모듈은 불변하다고 간주되기에 이 패턴은 불가능합니다.\n왜냐하면 TypeScript는 로더에 구애받지 않기에, 이 정책이 컴파일-시간에 적용되지 않지만, ES6 모듈 로더로 전환하려는 개발자는 알고 있어야 합니다.</p>\n<h2 id=\"모듈-호출-시그니처에-es6가-미치는-영향-the-impact-of-es6-on-module-call-signatures\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%ED%98%B8%EC%B6%9C-%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98%EC%97%90-es6%EA%B0%80-%EB%AF%B8%EC%B9%98%EB%8A%94-%EC%98%81%ED%96%A5-the-impact-of-es6-on-module-call-signatures\" aria-label=\"모듈 호출 시그니처에 es6가 미치는 영향 the impact of es6 on module call signatures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 호출 시그니처에 ES6가 미치는 영향 (The Impact of ES6 on Module Call Signatures)</h2>\n<p>Express와 같은 많은 유명한 라이브러리들은 import 될 때 호출 가능한 함수를 노출합니다.\n예를 들어, 일반적인 Express 사용법은 다음과 같습니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">exp</span><span style=\"color: #000000\"> = </span><span style=\"color: #AF00DB\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"express\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">app</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">exp</span><span style=\"color: #000000\">();</span></div></code></div></pre>\n<p>ES6 모듈 로더에서, 최상위-레벨 객체(여기에서는 <code>exp</code>로 import)는 프로퍼티만 가질 수 있습니다;\n최상위-레벨 모듈 객체는 <em>절대</em> 호출할 수 없습니다.\n가장 일반적인 해결책은 호출 가능/생성 가능 객체를 <code>default</code> export로 정의하는 것입니다;\n어떤 모듈 로더 shims은 자동으로 이 상황을 감지하고 최상위-레벨 객체를 <code>default</code> export로 바꿉니다.\n만약 <code>tsconfig.json</code> 파일에 <a href=\"/tsconfig/#esModuleInterop\"><code>\"esModuleInterop\": true</code></a> 라고 되어 있으면, Typescript가 위의 사항을 자동으로 처리합니다.</p>","headings":[{"value":"개요 (Overview)","depth":1},{"value":"라이브러리 종류 식별하기 (Identifying Kinds of Libraries)","depth":1},{"value":"어떤 사항을 고려해야 하는가? (What should you look for?)","depth":2},{"value":"여러 종류의 라이브러리에 대한 간단한 샘플","depth":2},{"value":"모듈형 라이브러리 (Modular Libraries)","depth":2},{"value":"코드에서 모듈 라이브러리 식별하기 (Identifying a Module Library from Code)","depth":3},{"value":"모듈을 위한 템플릿 (Templates For Modules)","depth":3},{"value":"전역 라이브러리 (Global Libraries)","depth":2},{"value":"코드에서 전역 라이브러리 식별하기 (Identifying a Global Library from Code)","depth":3},{"value":"전역 라이브러리 예제 (Examples of Global Libraries)","depth":3},{"value":"전역 라이브러리 템플릿 (Global Library Template)","depth":3},{"value":"UMD","depth":2},{"value":"UMD 라이브러리 식별하기 (Identifying a UMD library)","depth":3},{"value":"UMD 라이브러리 예제 (Examples of UMD libraries)","depth":3},{"value":"템플릿 (Template)","depth":3},{"value":"<span id=\"consuming-dependencies\" /> 의존성 사용하기 (Consuming Dependencies)","depth":1},{"value":"전역 라이브러리 의존성 (Dependencies on Global Libraries)","depth":2},{"value":"모듈 의존성 (Dependencies on Modules)","depth":2},{"value":"UMD 라이브러리 의존성 (Dependencies on UMD libraries)","depth":2},{"value":"전역 라이브러리에서 (From a Global Library)","depth":3},{"value":"모듈이나 UMD 라이브러리에서 (From a Module or UMD Library)","depth":3},{"value":"각주 (Footnotes)","depth":1},{"value":"<span id=\"preventing-name-conflicts\" /> 이름 충돌 방지하기 (Preventing Name Conflicts)","depth":2},{"value":"<span id=\"the-impact-of-es6-on-module-plugins\" /> ES6가 모듈 플러그인에 미치는 영향 (The Impact of ES6 on Module Plugins)","depth":2},{"value":"모듈 호출 시그니처에 ES6가 미치는 영향 (The Impact of ES6 on Module Call Signatures)","depth":2}],"frontmatter":{"permalink":"/ko/docs/handbook/declaration-files/library-structures.html","title":"Library Structures","disable_toc":null,"handbook":null,"oneline":"How to structure your d.ts files","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":{"childMarkdownRemark":{"frontmatter":{"title":"Declaration Reference","oneline":"How to create a d.ts file for a module","permalink":"/ko/docs/handbook/declaration-files/by-example.html"}}},"next":{"childMarkdownRemark":{"frontmatter":{"title":"Modules .d.ts","oneline":null,"permalink":"/docs/handbook/declaration-files/templates/module-d-ts.html"}}}},"pageContext":{"id":"6-library-structures","slug":"/ko/docs/handbook/declaration-files/library-structures.html","repoPath":"/packages/documentation/copy/ko/declaration-files/Library Structures.md","previousID":"97e18568-e52c-502f-8072-c9ccb668f0dc","nextID":"d244c64c-c31c-5e21-8b74-570d6d67ad45","lang":"ko","modifiedTime":"2024-10-21T12:35:09.553Z"}},"staticQueryHashes":[]}