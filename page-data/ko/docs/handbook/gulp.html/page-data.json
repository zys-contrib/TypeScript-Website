{"componentChunkName":"component---src-templates-documentation-tsx","path":"/ko/docs/handbook/gulp.html","result":{"data":{"markdownRemark":{"id":"8ab81739-44ee-5118-a81e-d27d0f4510bc","excerpt":"이 퀵 스타트 가이드는 gulp로 TypeScript를 빌드한 다음 Browserify, uglify 또는 Watchify를 gulp 파이프 라인에 추가하는 방법을 알려줍니다.\n또한 Babelify를 사용하여 Babel 기능을 추가하는 방법을 알려줍니다. npm과 Node.js…","html":"<p>이 퀵 스타트 가이드는 <a href=\"http://gulpjs.com\">gulp</a>로 TypeScript를 빌드한 다음 <a href=\"http://browserify.org\">Browserify</a>, <a href=\"http://lisperator.net/uglifyjs\">uglify</a> 또는 <a href=\"https://github.com/substack/watchify\">Watchify</a>를 gulp 파이프 라인에 추가하는 방법을 알려줍니다.\n또한 <a href=\"https://github.com/babel/babelify\">Babelify</a>를 사용하여 <a href=\"https://babeljs.io\">Babel</a> 기능을 추가하는 방법을 알려줍니다.</p>\n<p><a href=\"https://www.npmjs.com\">npm</a>과 <a href=\"https://nodejs.org\">Node.js</a>는 이미 사용하고 있다고 가정합니다.</p>\n<h1 id=\"작은-프로젝트-minimal-project\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%9D%80-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-minimal-project\" aria-label=\"작은 프로젝트 minimal project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작은 프로젝트 (Minimal project)</h1>\n<p>새로운 디렉터리로 시작합시다.\n당장은 <code>proj</code>라고 이름을 붙이겠지만 원하는 대로 변경할 수 있습니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">mkdir proj</span></div><div class='line'><span style=\"color: #795E26\">cd</span><span style=\"color: #000000\"> proj</span></div></code></div></pre>\n<p>시작하기 위해, 다음과 같이 프로젝트를 구조화해야 합니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">text</div><div class='code-container'><code><div class='line'><span style=\"color: undefined\">proj/\n   ├─ src/\n   └─ dist/</span></div></code></div></pre>\n<p>TypeScript 파일은 <code>src</code> 폴더에서 시작하여 TypeScript 컴파일러를 통해 실행되고 <code>dist</code>에서 끝납니다.</p>\n<p>이것을 골격으로 합니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">mkdir src</span></div><div class='line'><span style=\"color: #000000\">mkdir dist</span></div></code></div></pre>\n<h2 id=\"프로젝트-초기화-initialize-the-project\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%B4%88%EA%B8%B0%ED%99%94-initialize-the-project\" aria-label=\"프로젝트 초기화 initialize the project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 초기화 (Initialize the project)</h2>\n<p>이제 이 폴더를 npm 패키지로 바꿀 것입니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm init</span></div></code></div></pre>\n<p>일련의 알림을 받게 될 것입니다.<br>\nentry point를 제외하고는 기본값을 사용할 수 있습니다.\nentry point로 <code>./dist/main.js</code>를 사용합니다.\n<code>package.json</code> 파일로 돌아가서 언제든 변경할 수 있습니다.</p>\n<h2 id=\"의존성-설치-install-our-dependencies\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%84%A4%EC%B9%98-install-our-dependencies\" aria-label=\"의존성 설치 install our dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의존성 설치 (Install our dependencies)</h2>\n<p>이제는 <code>npm install</code>을 사용하여 패키지를 설치할 수 있습니다.<br>\n먼저 <code>gulp-cli</code>를 전역으로 설치하십시오 (Unix 시스템을 사용하는 경우 <code>npm install</code> 명령 앞에 <code>sudo</code>를 붙여야 할 수도 있습니다).</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm install -g gulp-cli</span></div></code></div></pre>\n<p>그런 다음 프로젝트의 개발 의존성에 <code>typescript</code>, <code>gulp</code> 및 <code>gulp-typescript</code>를 설치하십시오.<br>\n<a href=\"https://www.npmjs.com/package/gulp-typescript\">Gulp-typescript</a>는 TypeScript의 gulp 플러그인입니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm install --save-dev typescript gulp gulp-typescript</span></div></code></div></pre>\n<h2 id=\"간단한-예제-작성-write-a-simple-example\" style=\"position:relative;\"><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%98%88%EC%A0%9C-%EC%9E%91%EC%84%B1-write-a-simple-example\" aria-label=\"간단한 예제 작성 write a simple example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>간단한 예제 작성 (Write a simple example)</h2>\n<p>Hello World 프로그램을 작성해 보겠습니다.\n<code>src</code>에 <code>main.ts</code> 파일을 만듭니다 :</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">hello</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">compiler</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">`Hello from </span><span style=\"color: #0000FF\">${</span><span style=\"color: #001080\">compiler</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">`</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'><span style=\"color: #795E26\">hello</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"TypeScript\"</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p><code>proj</code>이라는 프로젝트 루트에 <code>tsconfig.json</code> 파일을 생성합니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">json</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"files\"</span><span style=\"color: #000000\">: [</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #A31515\">\"src/main.ts\"</span></div><div class='line'><span style=\"color: #000000\">    ],</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"compilerOptions\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"noImplicitAny\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"target\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"es5\"</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<h2 id=\"gulpfilejs-생성-create-a-gulpfilejs\" style=\"position:relative;\"><a href=\"#gulpfilejs-%EC%83%9D%EC%84%B1-create-a-gulpfilejs\" aria-label=\"gulpfilejs 생성 create a gulpfilejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>gulpfile.js</code> 생성 (Create a <code>gulpfile.js</code>)</h2>\n<p>프로젝트 루트에 <code>gulpfile.js</code> 파일을 만듭니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"gulp\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">ts</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"gulp-typescript\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">tsProject</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">ts</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">createProject</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"tsconfig.json\"</span><span style=\"color: #000000\">);</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">task</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"default\"</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">tsProject</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">src</span><span style=\"color: #000000\">()</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">tsProject</span><span style=\"color: #000000\">())</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #001080\">js</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">dest</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"dist\"</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">});</span></div></code></div></pre>\n<h2 id=\"결과-앱-테스트-test-the-resulting-app\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC-%EC%95%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8-test-the-resulting-app\" aria-label=\"결과 앱 테스트 test the resulting app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과 앱 테스트 (Test the resulting app)</h2>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">gulp</span></div><div class='line'><span style=\"color: #000000\">node dist/main.js</span></div></code></div></pre>\n<p>프로그램은 “Hello from TypeScript!”를 출력해야 합니다.</p>\n<h1 id=\"코드에-모듈-추가-add-modules-to-the-code\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%97%90-%EB%AA%A8%EB%93%88-%EC%B6%94%EA%B0%80-add-modules-to-the-code\" aria-label=\"코드에 모듈 추가 add modules to the code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드에 모듈 추가 (Add modules to the code)</h1>\n<p>Browserify를 시작하기 전에 코드를 만들고 믹스에 모듈을 추가해 보겠습니다.<br>\n이것은 실제 앱에서 사용하기 쉬운 구조입니다.</p>\n<p><code>src/greet.ts</code> 파일을 만듭니다 :</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">sayHello</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">name</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">`Hello from </span><span style=\"color: #0000FF\">${</span><span style=\"color: #001080\">name</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">`</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>이제 <code>src/main.ts</code>의 <code>sayHello</code>를 <code>greet.ts</code>에서 import 하도록 변경합니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">sayHello</span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./greet\"</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">sayHello</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"TypeScript\"</span><span style=\"color: #000000\">));</span></div></code></div></pre>\n<p>마지막으로 <code>src/greet.ts</code>를 <code>tsconfig.json</code>에 추가하십시오:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">json</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"files\"</span><span style=\"color: #000000\">: [</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #A31515\">\"src/main.ts\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #A31515\">\"src/greet.ts\"</span></div><div class='line'><span style=\"color: #000000\">    ],</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"compilerOptions\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"noImplicitAny\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"target\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"es5\"</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p><code>gulp</code>을 실행하고 Node에서 테스트하여 모듈이 작동하는지 확인하십시오:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">gulp</span></div><div class='line'><span style=\"color: #000000\">node dist/main.js</span></div></code></div></pre>\n<p>ES2015 모듈 구문을 사용했지만 TypeScript는 Node가 사용하는 CommonJS 모듈을 방출했습니다.<br>\n이 튜토리얼에서는 CommonJS를 계속 사용하겠지만 options 객체에 <code>module</code>을 설정하여 이를 변경할 수 있습니다.</p>\n<h1 id=\"browserify\" style=\"position:relative;\"><a href=\"#browserify\" aria-label=\"browserify permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Browserify</h1>\n<p>이제 이 프로젝트를 Node에서 브라우저로 이동하겠습니다.<br>\n이를 위해 모든 모듈을 하나의 JavaScript 파일로 번들링 하고자 합니다.<br>\n다행히도 정확히 Browserify가 하는 일입니다.<br>\n더 좋은 것은 노드에서 사용하는 CommonJS 모듈 시스템을 TypeScript에서 사용할 수 있다는 것입니다.<br>\n즉 TypeScript와 Node 설정이 기본적으로 변경되지 않은 브라우저로 전송되는 것을 의미합니다.</p>\n<p>먼저 browserify, <a href=\"https://www.npmjs.com/package/tsify\">tsify</a> 및 vinyl-source-stream을 설치하십시오.<br>\ntsify는 gulp-typescript처럼 TypeScript 컴파일러에 접근할 수 있는 Browserify 플러그인입니다.<br>\nvinyl-source-stream을 사용하면 Browserify의 파일 출력을 gulp에서 <a href=\"https://github.com/gulpjs/vinyl\">vinyl</a>으로 인식하는 형식으로 다시 변환할 수 있습니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm install --save-dev browserify tsify vinyl-source-stream</span></div></code></div></pre>\n<h2 id=\"페이지-만들기-create-a-page\" style=\"position:relative;\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0-create-a-page\" aria-label=\"페이지 만들기 create a page permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>페이지 만들기 (Create a page)</h2>\n<p><code>src</code>에 <code>index.html</code> 파일을 생성합니다 :</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">html</div><div class='code-container'><code><div class='line'><span style=\"color: #800000\">&lt;!DOCTYPE</span><span style=\"color: #000000\"> </span><span style=\"color: #EE0000\">html</span><span style=\"color: #800000\">&gt;</span></div><div class='line'><span style=\"color: #800000\">&lt;html&gt;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #800000\">&lt;head&gt;</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #800000\">&lt;meta</span><span style=\"color: #000000\"> </span><span style=\"color: #EE0000\">charset</span><span style=\"color: #000000\">=</span><span style=\"color: #0000FF\">\"UTF-8\"</span><span style=\"color: #000000\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #800000\">&lt;title&gt;</span><span style=\"color: #000000\">Hello World!</span><span style=\"color: #800000\">&lt;/title&gt;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #800000\">&lt;/head&gt;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #800000\">&lt;body&gt;</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #800000\">&lt;p</span><span style=\"color: #000000\"> </span><span style=\"color: #EE0000\">id</span><span style=\"color: #000000\">=</span><span style=\"color: #0000FF\">\"greeting\"</span><span style=\"color: #800000\">&gt;</span><span style=\"color: #000000\">Loading ...</span><span style=\"color: #800000\">&lt;/p&gt;</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #800000\">&lt;script</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">src</span><span style=\"color: #000000FF\">=</span><span style=\"color: #0000FF\">\"bundle.js\"</span><span style=\"color: #800000\">&gt;&lt;/script&gt;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #800000\">&lt;/body&gt;</span></div><div class='line'><span style=\"color: #800000\">&lt;/html&gt;</span></div></code></div></pre>\n<p>이제 페이지를 업데이트하기 위해 <code>main.ts</code>를 변경합니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">sayHello</span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./greet\"</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">showHello</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">divName</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">name</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">elt</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">document</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">getElementById</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">divName</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">elt</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">innerText</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">sayHello</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">name</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #795E26\">showHello</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"greeting\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"TypeScript\"</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p><code>showHello</code> 호출은 <code>sayHello</code>를 호출하여 paragraph 텍스트를 변경합니다.<br>\n이제 gulpfile을 다음과 같이 변경하십시오 :</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'gulp'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">browserify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'browserify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">source</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'vinyl-source-stream'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">tsify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'tsify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">paths</span><span style=\"color: #000000\"> = {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">pages:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'src/*.html'</span><span style=\"color: #000000\">]</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">task</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">src</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">paths</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">pages</span><span style=\"color: #000000\">)</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">dest</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'dist'</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">});</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">task</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'default'</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">series</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">parallel</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\">), </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">browserify</span><span style=\"color: #000000\">({</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">basedir:</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">'.'</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">debug:</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">entries:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'src/main.ts'</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">cache:</span><span style=\"color: #000000\"> {},</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">packageCache:</span><span style=\"color: #000000\"> {}</span></div><div class='line'><span style=\"color: #000000\">    })</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">plugin</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">tsify</span><span style=\"color: #000000\">)</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">bundle</span><span style=\"color: #000000\">()</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">source</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'bundle.js'</span><span style=\"color: #000000\">))</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">dest</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'dist'</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">}));</span></div></code></div></pre>\n<p><code>copy-html</code> 태스크를 추가하고 <code>default</code>의 의존성으로 추가합니다.<br>\n<code>default</code>가 실행될 때마다 <code>copy-html</code>이 먼저 실행되어야 한다는 것을 의미합니다.<br>\n또한 <code>default</code>를 gulp-typescript 대신 tsify 플러그인으로 Browserify를 호출하도록 변경했습니다.<br>\n편리하게도 둘 모두 TypeScript 컴파일러에 동일한 options 객체를 전달할 수 있습니다.</p>\n<p><code>bundle</code>을 호출한 후 <code>source</code>(vinil-source-stream에 대한 별칭)를 사용하여 출력 번들 <code>bundle.js</code>의 이름을 지정합니다.</p>\n<p>gulp를 실행하고 브라우저에서 <code>dist/index.html</code>을 열어 페이지를 확인하세요.<br>\n페이지에 “Hello from TypeScript”가 표시되어야 합니다.</p>\n<p>Browserify에 <code>debug : true</code>를 지정한 것에 주목하십시오.<br>\n이로 인해 tsify는 번들된 JavaScript 파일 안에 소스 맵을 내보냅니다.<br>\n소스 맵을 사용하면 번들로 제공된 JavaScript 대신 브라우저에서 원본 TypeScript 코드를 디버깅할 수 있습니다.<br>\n브라우저의 디버거를 열고 <code>main.ts</code> 안에 브레이크 포인트을 넣으면 소스 맵이 작동하는지 테스트할 수 있습니다.<br>\n페이지를 새로 고침 하면 브레이크 포인트가 페이지를 일시 중지하고 <code>greet.ts</code>를 디버깅 할 수 있어야 합니다.</p>\n<h1 id=\"watchify-babel-and-uglify\" style=\"position:relative;\"><a href=\"#watchify-babel-and-uglify\" aria-label=\"watchify babel and uglify permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Watchify, Babel, and Uglify</h1>\n<p>이제 코드를 Browserify에 묶어서 tsify 했으므로 browserify 플러그인을 사용하여 빌드에 다양한 기능을 추가할 수 있습니다.</p>\n<ul>\n<li>\n<p>Watchify가 gulp를 계속 실행하며 파일을 저장할 때마다 점차적으로 컴파일합니다.<br>\n이를 통해 브라우저에서 편집-저장-새로고침 사이클을 계속 진행할 수 있습니다.</p>\n</li>\n<li>\n<p>Babel은 ES2015 이상을 ES5 및 ES3으로 변환하는 매우 유연한 컴파일러입니다.<br>\n따라서 TypeScript에서 지원하지 않는 광범위한 맞춤형 변환을 추가할 수 있습니다.</p>\n</li>\n<li>\n<p>Uglify는 다운로드 시간을 줄이도록 코드를 압축합니다.</p>\n</li>\n</ul>\n<h2 id=\"watchify\" style=\"position:relative;\"><a href=\"#watchify\" aria-label=\"watchify permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Watchify</h2>\n<p>Watchify로 백그라운드 컴파일을 시작하겠습니다 :</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm install --save-dev watchify fancy-log</span></div></code></div></pre>\n<p>이제 gulpfile을 다음과 같이 변경하십시오 :</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'gulp'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">browserify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'browserify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">source</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'vinyl-source-stream'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">watchify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'watchify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">tsify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'tsify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">fancy_log</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'fancy-log'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">paths</span><span style=\"color: #000000\"> = {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">pages:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'src/*.html'</span><span style=\"color: #000000\">]</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">watchedBrowserify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">watchify</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">browserify</span><span style=\"color: #000000\">({</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">basedir:</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">'.'</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">debug:</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">entries:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'src/main.ts'</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">cache:</span><span style=\"color: #000000\"> {},</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">packageCache:</span><span style=\"color: #000000\"> {}</span></div><div class='line'><span style=\"color: #000000\">}).</span><span style=\"color: #795E26\">plugin</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">tsify</span><span style=\"color: #000000\">));</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">task</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">src</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">paths</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">pages</span><span style=\"color: #000000\">)</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">dest</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'dist'</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">});</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">bundle</span><span style=\"color: #000000\">() {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">watchedBrowserify</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #795E26\">bundle</span><span style=\"color: #000000\">()</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #795E26\">on</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'error'</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">fancy_log</span><span style=\"color: #000000\">)</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">source</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'bundle.js'</span><span style=\"color: #000000\">))</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">dest</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'dist'</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">task</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'default'</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">series</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">parallel</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\">), </span><span style=\"color: #001080\">bundle</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #001080\">watchedBrowserify</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">on</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'update'</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">bundle</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #001080\">watchedBrowserify</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">on</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'log'</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">fancy_log</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p>여기에는 기본적으로 세 가지 변경 사항이 있지만 코드를 약간 리팩토링해야합니다.</p>\n<ol>\n<li><code>watchify</code>에 대한 호출에서 <code>browserify</code> 인스턴스를 감싸고 그 결과를 유지했습니다.</li>\n<li><code>watchedBrowserify.on('update', bundle);</code>을 호출하여 Browserify 가 TypeScript 파일 중 하나가 변경될 때마다 <code>bundle</code> 함수를 실행하도록 했습니다.</li>\n<li><code>watchedBrowserify.on('log', fancy_log);</code>을 호출하여 콘솔에 기록했습니다.</li>\n</ol>\n<p>(1)과 (2)는 <code>default</code> 작업에서 <code>browserify</code>를 호출해야 한다는 것을 의미합니다.<br>\nWatchify와 Gulp 모두 호출해야 하기 때문에 <code>default</code> 함수에 이름을 주어야 합니다.<br>\n(3)을 사용한 로깅을 추가하는 것은 선택 사항이지만 설정을 디버깅하는 데 매우 유용합니다.</p>\n<p>이제 Gulp를 실행하면 시작해야 하고 계속 실행됩니다.<br>\n<code>main.ts</code>에서 <code>showHello</code>에 대한 코드를 변경하고 저장하십시오.<br>\n다음과 같은 출력이 표시되어야 합니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">proj$ gulp</span></div><div class='line'><span style=\"color: #000000\">[10:34:20] Using gulpfile ~/src/proj/gulpfile.js</span></div><div class='line'><span style=\"color: #000000\">[10:34:20] Starting </span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\">...</span></div><div class='line'><span style=\"color: #000000\">[10:34:20] Finished </span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\"> after 26 ms</span></div><div class='line'><span style=\"color: #000000\">[10:34:20] Starting </span><span style=\"color: #A31515\">'default'</span><span style=\"color: #000000\">...</span></div><div class='line'><span style=\"color: #000000\">[10:34:21] 2824 bytes written (0.13 seconds)</span></div><div class='line'><span style=\"color: #000000\">[10:34:21] Finished </span><span style=\"color: #A31515\">'default'</span><span style=\"color: #000000\"> after 1.36 s</span></div><div class='line'><span style=\"color: #000000\">[10:35:22] 2261 bytes written (0.02 seconds)</span></div><div class='line'><span style=\"color: #000000\">[10:35:24] 2808 bytes written (0.05 seconds)</span></div></code></div></pre>\n<h2 id=\"uglify\" style=\"position:relative;\"><a href=\"#uglify\" aria-label=\"uglify permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uglify</h2>\n<p>먼저 Uglify를 설치하십시오.<br>\nUglify의 요점은 코드를 압축하기 위한 것이므로 소스 맵을 유지하려면 vinyl-buffer와 gulp-sourcemaps도 설치해야 합니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm install --save-dev gulp-uglify vinyl-buffer gulp-sourcemaps</span></div></code></div></pre>\n<p>이제 gulpfile을 다음과 같이 변경하십시오 :</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'gulp'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">browserify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'browserify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">source</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'vinyl-source-stream'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">tsify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'tsify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">uglify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'gulp-uglify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">sourcemaps</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'gulp-sourcemaps'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">buffer</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'vinyl-buffer'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">paths</span><span style=\"color: #000000\"> = {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">pages:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'src/*.html'</span><span style=\"color: #000000\">]</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">task</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">src</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">paths</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">pages</span><span style=\"color: #000000\">)</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">dest</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'dist'</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">});</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">task</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'default'</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">series</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">parallel</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\">), </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">browserify</span><span style=\"color: #000000\">({</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">basedir:</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">'.'</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">debug:</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">entries:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'src/main.ts'</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">cache:</span><span style=\"color: #000000\"> {},</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">packageCache:</span><span style=\"color: #000000\"> {}</span></div><div class='line'><span style=\"color: #000000\">    })</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">plugin</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">tsify</span><span style=\"color: #000000\">)</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">bundle</span><span style=\"color: #000000\">()</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">source</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'bundle.js'</span><span style=\"color: #000000\">))</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">buffer</span><span style=\"color: #000000\">())</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">sourcemaps</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">init</span><span style=\"color: #000000\">({</span><span style=\"color: #001080\">loadMaps:</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">}))</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">uglify</span><span style=\"color: #000000\">())</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">sourcemaps</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">write</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'./'</span><span style=\"color: #000000\">))</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">dest</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'dist'</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">}));</span></div></code></div></pre>\n<p><code>uglify</code> 자체에는 하나의 호출만 있습니다 — <code>buffer</code>와 <code>sourcemaps</code>에 대한 호출은 sourcemaps이 계속 작동하는지 확인하기 위해 존재합니다.<br>\n이러한 호출을 통해 이전과 같이 인라인 소스 맵을 사용하는 대신 별도의 소스 맵 파일을 사용할 수 있습니다.<br>\n이제 Gulp를 실행하고 <code>bundle.js</code>가 난독화로 압축되는지 확인하십시오 :</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">gulp</span></div><div class='line'><span style=\"color: #000000\">cat dist/bundle.js</span></div></code></div></pre>\n<h2 id=\"babel\" style=\"position:relative;\"><a href=\"#babel\" aria-label=\"babel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Babel</h2>\n<p>먼저 ES2015 전용 Babelify 및 Babel preset을 설치하십시오.<br>\nUglify처럼 Babelify도 코드를 엉망으로 만들기 때문에 vinyl-buffer와 gulp-sourcemaps이 필요합니다.<br>\n기본적으로 Babelify는 확장자가 <code>.js</code>, <code>.es</code>, <code>.es6</code> 및 <code>.jsx</code> 인 파일만 처리하므로 Babelify에 옵션으로 <code>.ts</code> 확장자를 추가해야 합니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">shell</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm install --save-dev babelify@8 babel-core babel-preset-es2015 vinyl-buffer gulp-sourcemaps</span></div></code></div></pre>\n<p>이제 gulpfile을 다음과 같이 변경하십시오 :</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'gulp'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">browserify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'browserify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">source</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'vinyl-source-stream'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">tsify</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'tsify'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">sourcemaps</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'gulp-sourcemaps'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">buffer</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'vinyl-buffer'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">paths</span><span style=\"color: #000000\"> = {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">pages:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'src/*.html'</span><span style=\"color: #000000\">]</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">task</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">src</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">paths</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">pages</span><span style=\"color: #000000\">)</span></div><div class='line'><span style=\"color: #000000\">        .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">dest</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'dist'</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">});</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">task</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'default'</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">series</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">parallel</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'copy-html'</span><span style=\"color: #000000\">), </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">browserify</span><span style=\"color: #000000\">({</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">basedir:</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">'.'</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">debug:</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">entries:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'src/main.ts'</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">cache:</span><span style=\"color: #000000\"> {},</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">packageCache:</span><span style=\"color: #000000\"> {}</span></div><div class='line'><span style=\"color: #000000\">    })</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">plugin</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">tsify</span><span style=\"color: #000000\">)</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">transform</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'babelify'</span><span style=\"color: #000000\">, {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">presets:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'es2015'</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">extensions:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">'.ts'</span><span style=\"color: #000000\">]</span></div><div class='line'><span style=\"color: #000000\">    })</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">bundle</span><span style=\"color: #000000\">()</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">source</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'bundle.js'</span><span style=\"color: #000000\">))</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #795E26\">buffer</span><span style=\"color: #000000\">())</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">sourcemaps</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">init</span><span style=\"color: #000000\">({</span><span style=\"color: #001080\">loadMaps:</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">}))</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">sourcemaps</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">write</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'./'</span><span style=\"color: #000000\">))</span></div><div class='line'><span style=\"color: #000000\">    .</span><span style=\"color: #795E26\">pipe</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">gulp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">dest</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'dist'</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">}));</span></div></code></div></pre>\n<p>TypeScript 대상 ES2015도 필요합니다.<br>\nBabel은 TypeScript에서 내보내는 ES2015 코드에서 ES5를 생성합니다.\n<code>tsconfig.json</code>을 수정합시다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">json</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"files\"</span><span style=\"color: #000000\">: [</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #A31515\">\"src/main.ts\"</span></div><div class='line'><span style=\"color: #000000\">    ],</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"compilerOptions\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"noImplicitAny\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"target\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"es2015\"</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>간단한 스크립트의 경우 Babel의 ES5 결과물은 TypeScript의 결과물과 거의 같아야 합니다.</p>","headings":[{"value":"작은 프로젝트 (Minimal project)","depth":1},{"value":"프로젝트 초기화 (Initialize the project)","depth":2},{"value":"의존성 설치 (Install our dependencies)","depth":2},{"value":"간단한 예제 작성 (Write a simple example)","depth":2},{"value":"gulpfile.js 생성 (Create a gulpfile.js)","depth":2},{"value":"결과 앱 테스트 (Test the resulting app)","depth":2},{"value":"코드에 모듈 추가 (Add modules to the code)","depth":1},{"value":"Browserify","depth":1},{"value":"페이지 만들기 (Create a page)","depth":2},{"value":"Watchify, Babel, and Uglify","depth":1},{"value":"Watchify","depth":2},{"value":"Uglify","depth":2},{"value":"Babel","depth":2}],"frontmatter":{"permalink":"/ko/docs/handbook/gulp.html","title":"Gulp","disable_toc":null,"handbook":null,"oneline":"Using TypeScript with Gulp","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"id":"4-gulp","slug":"/ko/docs/handbook/gulp.html","repoPath":"/packages/documentation/copy/ko/tutorials/Gulp.md","lang":"ko","modifiedTime":"2024-10-21T12:35:09.565Z"}},"staticQueryHashes":[]}