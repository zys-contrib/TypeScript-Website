{"componentChunkName":"component---src-templates-documentation-tsx","path":"/ko/docs/handbook/symbols.html","result":{"data":{"markdownRemark":{"id":"400e4536-a798-5615-90b5-f4062324e903","excerpt":"ECMAScript 2015부터, symbol 은  number 와  string 과 같은 기본 데이터 타입입니다. symbol 값은  Symbol…","html":"<p>ECMAScript 2015부터, <code>symbol</code> 은  <code>number</code> 와  <code>string</code> 과 같은 기본 데이터 타입입니다.</p>\n<p><code>symbol</code> 값은  <code>Symbol</code> 생성자를 호출함으로써 생성됩니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">sym1</span><span style=\"color: #000000\"> = </span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\">();</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">sym2</span><span style=\"color: #000000\"> = </span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"key\"</span><span style=\"color: #000000\">); </span><span style=\"color: #008000\">// 선택적 문자열 키</span></div></code></div></pre>\n<p>심벌은 불변하고 유일합니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">sym2</span><span style=\"color: #000000\"> = </span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"key\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">sym3</span><span style=\"color: #000000\"> = </span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"key\"</span><span style=\"color: #000000\">);</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">sym2</span><span style=\"color: #000000\"> === </span><span style=\"color: #001080\">sym3</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// false, 심벌은 유일하다.</span></div></code></div></pre>\n<p>문자열처럼, 심벌은 객체 프로퍼티의 키로써 사용될 수 있습니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">sym</span><span style=\"color: #000000\"> = </span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\">();</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">obj</span><span style=\"color: #000000\"> = {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #001080\">[sym]:</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"value\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">obj</span><span style=\"color: #000000\">[</span><span style=\"color: #001080\">sym</span><span style=\"color: #000000\">]); </span><span style=\"color: #008000\">// \"value\"</span></div></code></div></pre>\n<p>또한 심벌은 초기화된 프로퍼티 선언과 결합되어 객체 프로퍼티와 클래스 멤버를 선언할 수 있습니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">getClassNameSymbol</span><span style=\"color: #000000\"> = </span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\">();</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">C</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  [</span><span style=\"color: #001080\">getClassNameSymbol</span><span style=\"color: #000000\">]() {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"C\"</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">  }</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">c</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">C</span><span style=\"color: #000000\">();</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">className</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">c</span><span style=\"color: #000000\">[</span><span style=\"color: #001080\">getClassNameSymbol</span><span style=\"color: #000000\">](); </span><span style=\"color: #008000\">// \"C\"</span></div></code></div></pre>\n<h2 id=\"잘-알려진-심벌-well-known-symbols\" style=\"position:relative;\"><a href=\"#%EC%9E%98-%EC%95%8C%EB%A0%A4%EC%A7%84-%EC%8B%AC%EB%B2%8C-well-known-symbols\" aria-label=\"잘 알려진 심벌 well known symbols permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>잘 알려진 심벌 (Well-known Symbols)</h2>\n<p>사용자 정의 심벌 외에, 잘 알려진 내장 심벌이 있습니다.\n내장 심벌은 언어 내부의 동작을 나타내는데 사용됩니다.</p>\n<p>아래는 잘 알려진 심벌의 목록입니다:</p>\n<h2 id=\"symbolhasinstance\" style=\"position:relative;\"><a href=\"#symbolhasinstance\" aria-label=\"symbolhasinstance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.hasInstance</code></h2>\n<p>생성자가 객체를 생성자의 인스턴스 중 하나로 인식하는지 확인하는 메서드. instanceof 연산자로 호출됩니다.</p>\n<h2 id=\"symbolisconcatspreadable\" style=\"position:relative;\"><a href=\"#symbolisconcatspreadable\" aria-label=\"symbolisconcatspreadable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.isConcatSpreadable</code></h2>\n<p>객체가 자신의 배열 요소를 Array.prototype.concat를 사용하여 직렬화할 수 있는지 나타내는 Boolean 값.</p>\n<h2 id=\"symboliterator\" style=\"position:relative;\"><a href=\"#symboliterator\" aria-label=\"symboliterator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.iterator</code></h2>\n<p>객체의 기본 반복자를 반환하는 메서드. for-of 문으로 호출됩니다.</p>\n<h2 id=\"symbolmatch\" style=\"position:relative;\"><a href=\"#symbolmatch\" aria-label=\"symbolmatch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.match</code></h2>\n<p>정규 표현식과 문자열을 비교하는 정규 표현식 메서드.  <code>String.prototype.match</code> 메서드로 호출됩니다.</p>\n<h2 id=\"symbolreplace\" style=\"position:relative;\"><a href=\"#symbolreplace\" aria-label=\"symbolreplace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.replace</code></h2>\n<p>문자열에서 일치하는 부분 문자열을 치환하는 정규 표현식 메서드.  <code>String.prototype.replace</code> 메서드로 호출됩니다.</p>\n<h2 id=\"symbolsearch\" style=\"position:relative;\"><a href=\"#symbolsearch\" aria-label=\"symbolsearch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.search</code></h2>\n<p>정규 표현식과 매치되는 문자열의 인덱스를 반환하는 정규 표현식 메서드. <code>String.prototype.search</code> 메서드로 호출됩니다.</p>\n<h2 id=\"symbolspecies\" style=\"position:relative;\"><a href=\"#symbolspecies\" aria-label=\"symbolspecies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.species</code></h2>\n<p>파생된 객체를 생성하는데 사용하는 생성자 함수의 중요한 속성.</p>\n<h2 id=\"symbolsplit\" style=\"position:relative;\"><a href=\"#symbolsplit\" aria-label=\"symbolsplit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.split</code></h2>\n<p>정규 표현식과 매치되는 인덱스들에 위치한 문자열을 나누는 정규 표현식 메서드.\n<code>String.prototype.split</code> 메서드로 호출됩니다.</p>\n<h2 id=\"symboltoprimitive\" style=\"position:relative;\"><a href=\"#symboltoprimitive\" aria-label=\"symboltoprimitive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.toPrimitive</code></h2>\n<p>객체를 대응되는 기본 값으로 변환하는 메서드.<br>\n<code>ToPrimitive</code> 추상 연산으로 호출됩니다.</p>\n<h2 id=\"symboltostringtag\" style=\"position:relative;\"><a href=\"#symboltostringtag\" aria-label=\"symboltostringtag permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.toStringTag</code></h2>\n<p>객체의 기본 문자열 형식을 만드는데 사용되는 문자열 값.\n내장 메서드인  <code>Object.prototype.toString</code> 로 호출됩니다.</p>\n<h2 id=\"symbolunscopables\" style=\"position:relative;\"><a href=\"#symbolunscopables\" aria-label=\"symbolunscopables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.unscopables</code></h2>\n<p>자신의 프로퍼티 이름이 연결된 개체의 ‘with’ 환경 바인딩에서 제외되는 프로퍼티 이름인 객체.</p>","headings":[{"value":"잘 알려진 심벌 (Well-known Symbols)","depth":2},{"value":"Symbol.hasInstance","depth":2},{"value":"Symbol.isConcatSpreadable","depth":2},{"value":"Symbol.iterator","depth":2},{"value":"Symbol.match","depth":2},{"value":"Symbol.replace","depth":2},{"value":"Symbol.search","depth":2},{"value":"Symbol.species","depth":2},{"value":"Symbol.split","depth":2},{"value":"Symbol.toPrimitive","depth":2},{"value":"Symbol.toStringTag","depth":2},{"value":"Symbol.unscopables","depth":2}],"frontmatter":{"permalink":"/ko/docs/handbook/symbols.html","title":"Symbols","disable_toc":null,"handbook":null,"oneline":"Using the JavaScript Symbol primitive in TypeScript","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"id":"2-symbols","slug":"/ko/docs/handbook/symbols.html","repoPath":"/packages/documentation/copy/ko/reference/Symbols.md","lang":"ko","modifiedTime":"2024-10-21T12:35:09.561Z"}},"staticQueryHashes":[]}