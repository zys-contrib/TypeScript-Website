{"componentChunkName":"component---src-templates-documentation-tsx","path":"/ko/docs/handbook/configuring-watch.html","result":{"data":{"markdownRemark":{"id":"7b7be8b5-1938-5aaf-9a8c-b046d171dbd6","excerpt":"컴파일러가 어떻게 파일과 디렉터리를 감시할지에 대해 TypeScript 3.8+: 컴파일러 플래그 그보다 이전 버전: 환경 변수 를 사용하여 설정합니다. 배경 (Background) 컴파일러의 --watch 구현은 node에서 제공하는 fs.watch와 fs.watchFile…","html":"<p>컴파일러가 어떻게 파일과 디렉터리를 감시할지에 대해</p>\n<ul>\n<li>TypeScript 3.8+: 컴파일러 플래그</li>\n<li>그보다 이전 버전: 환경 변수</li>\n</ul>\n<p>를 사용하여 설정합니다.</p>\n<h2 id=\"배경-background\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EA%B2%BD-background\" aria-label=\"배경 background permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배경 (Background)</h2>\n<p>컴파일러의 <code>--watch</code> 구현은 node에서 제공하는 <code>fs.watch</code>와 <code>fs.watchFile</code>에 의존하며, 이 두 방법 모두 장단점이 있습니다.</p>\n<p><code>fs.watch</code>는 파일 시스템 이벤트를 사용하여 파일/디렉터리의 변경 사항을 알립니다. 하지만 OS에 따라 다르며, 알림은 완전히 믿을 수가 없고, 많은 OS에서 예상대로 동작하지 않습니다. 또한, 생성할 수 있는 watcher의 수에 제한이 있을 수 있으며(예: linux), 파일 수가 많은 프로그램을 사용하면 매우 빠르게 소진할 수 있습니다. 그러나 이 작업은 파일 시스템 이벤트를 사용하기 때문에 CPU cycle에 많이 관여하진 않습니다. 컴파일러는 일반적으로 <code>fs.watch</code>를 사용하여 디렉터리를 감시합니다. (예: 설정 파일에 포함된 소스 디렉터리, 모듈 확인을 실패한 디렉터리 … 등) 변경 사항에 대한 알림에서 누락된 정밀도를 처리할 수 있습니다. 그러나 재귀 감시 기능은 Windows와 OSX에서만 지원됩니다. 즉, 다른 OS들은 재귀적 특성을 대체할 무언가가 필요합니다.</p>\n<p><code>fs.watchFile</code>은 폴링을 사용하므로 CPU 주기를 포함합니다. 하지만 이는 파일/디렉터리 상태에 대한 업데이트를 받을 수 있는 가장 신뢰할 수 있는 메커니즘입니다. 컴파일러는 일반적으로 <code>fs.watchFile</code>을 사용하여 소스 파일, 구성 파일 및 누락된 파일(누락된 파일 참조)을 감시하는데 이는 CPU 사용량이 프로그램의 파일 수에 따라 달라진다는 것을 의미합니다.</p>\n<h2 id=\"configuring-file-watching-using-a-tsconfigjson\" style=\"position:relative;\"><a href=\"#configuring-file-watching-using-a-tsconfigjson\" aria-label=\"configuring file watching using a tsconfigjson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuring file watching using a <code>tsconfig.json</code></h2>\n<pre class=\"shiki light-plus tsconfig lsp\" style=\"background-color: #FFFFFF; color: #000000\" tsconfig=\"true\"><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #008000\">// Some typical compiler options</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#compilerOptions'><data-lsp lsp=\"The set of compiler options for your project\">compilerOptions</data-lsp></a>\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#target'><data-lsp lsp=\"Set the JavaScript language version for emitted JavaScript and include compatible library declarations.\">target</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"es2020\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#moduleResolution'><data-lsp lsp=\"Specify how TypeScript looks up a file from a given module specifier.\">moduleResolution</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"node\"</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// ...</span></div><div class='line'><span style=\"color: #000000\">  },</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #008000\">// NEW: Options for file/directory watching</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"watchOptions\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// Use native file system events for files and directories</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#watchFile'><data-lsp lsp=\"Specify how the TypeScript watch mode works.\">watchFile</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"useFsEvents\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#watchDirectory'><data-lsp lsp=\"Specify how directories are watched on systems that lack recursive file-watching functionality.\">watchDirectory</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"useFsEvents\"</span><span style=\"color: #000000\">,</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// Poll files for updates more frequently</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// when they're updated a lot.</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#fallbackPolling'><data-lsp lsp=\"Specify what approach the watcher should use if the system runs out of native file watchers.\">fallbackPolling</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"dynamicPriority\"</span></div><div class='line'><span style=\"color: #000000\">  }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>You can read more about this in <a href=\"/docs/handbook/release-notes/typescript-3-8.html#better-directory-watching-on-linux-and-watchoptions\">the release notes</a>.</p>\n<h2 id=\"환경-변수-tscwatchfile을-사용하여-파일-감시-설정-configuring-file-watching-using-environment-variable-tscwatchfile\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98-tscwatchfile%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%ED%8C%8C%EC%9D%BC-%EA%B0%90%EC%8B%9C-%EC%84%A4%EC%A0%95-configuring-file-watching-using-environment-variable-tscwatchfile\" aria-label=\"환경 변수 tscwatchfile을 사용하여 파일 감시 설정 configuring file watching using environment variable tscwatchfile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경 변수 <code>TSC*WATCHFILE</code>을 사용하여 파일 감시 설정 (Configuring file watching using environment variable <code>TSC*WATCHFILE</code>)</h2>\n<!-- prettier-ignore -->\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>PriorityPollingInterval</code></td>\n<td><code>fs.watchFile</code>을 사용하지만 소스 파일, 설정 파일 및 누락된 파일에 대해 다른 폴링 주기(polling intervals)를 사용합니다.</td>\n</tr>\n<tr>\n<td><code>DynamicPriorityPolling</code></td>\n<td>자주 수정되는 파일을 자주 폴링하고 변경되지 않은 파일을 덜 자주 폴링 하는 동적 큐를 사용합니다.</td>\n</tr>\n<tr>\n<td><code>UseFsEvents</code></td>\n<td>파일 시스템 이벤트를 사용하는 <code>fs.watch</code>를 사용하여 파일 변경/생성/삭제에 대한 알림을 받습니다. (<code>fs.watch</code>는 OS마다 다르게 작동할 수 있습니다.) 예를 들어. 리눅스는 watcher 수에 제한이 있으며 <code>fs.watch</code>를 사용하여 watcher를 만들지 못하면, <code>fs.watchFile</code>를 대신 사용하여 watcher를 만들게 됩니다.</td>\n</tr>\n<tr>\n<td><code>UseFsEventsWithFallbackDynamicPolling</code></td>\n<td>이 옵션은 <code>fs.watch</code>를 사용하여 감시자를 만들지 못한 경우 폴링이 동적 큐를 통해 수행된다는 것을 제외하고는 <code>UseFsEvents</code> 옵션과 비슷합니다.(동적 큐에 대한 것은 <code>DynamicPriorityPolling</code>옵션에서 설명하였습니다.).</td>\n</tr>\n<tr>\n<td><code>UseFsEventsOnParentDirectory</code></td>\n<td>이 옵션은 <code>fs.watch</code>(파일 시스템 이벤트 사용하는)로 파일의 상위 디렉터리를 감시합니다. 다만, CPU 사용량이 늘어나고 정확도는 떨어질 수 있습니다.</td>\n</tr>\n<tr>\n<td>default (no value specified)</td>\n<td>환경 변수<code>TSC*NONPOLLING*WATCHER</code>가 true로 설정되면 파일의 상위 디렉터리를 감시합니다. (<code>UseFsEventsOnParentDirectory</code>와 동일).false 일 때는 <code>fs.watchFile</code>을 사용하여 <code>250ms</code> 시간 제한과 함께 모든 파일들을 감시합니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"환경-변수tscwatchdirectory를-사용하여-디렉터리-감시-설정-configuring-directory-watching-using-environment-variable-tscwatchdirectory\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98tscwatchdirectory%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC-%EA%B0%90%EC%8B%9C-%EC%84%A4%EC%A0%95-configuring-directory-watching-using-environment-variable-tscwatchdirectory\" aria-label=\"환경 변수tscwatchdirectory를 사용하여 디렉터리 감시 설정 configuring directory watching using environment variable tscwatchdirectory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경 변수<code>TSC*WATCHDIRECTORY</code>를 사용하여 디렉터리 감시 설정 (Configuring directory watching using environment variable <code>TSC*WATCHDIRECTORY</code>)</h2>\n<p>기본적으로 node에서 디렉터리의 재귀적인 감시를 지원하지 않는 플랫폼에서, 디렉터리 감시 기능은 <code>TSC*WATCHDIRECTORY</code>에서 선택한 다양한 옵션을 사용하여 하위 디렉터리에 대한 디렉터리 watcher를 재귀적으로 생성함으로써 지원됩니다. 기본적으로 재귀 디렉터리 감시(예: windows)를 지원하는 플랫폼에서는 이 환경 변수의 값이 무시됩니다.</p>\n<!-- prettier-ignore -->\n<table>\n<thead>\n<tr>\n<th>옵션</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>RecursiveDirectoryUsingFsWatchFile</code></td>\n<td><code>fs.watchFile</code>을 사용하여 폴링 감시(CPU cycles 사용)인 디렉터리 및 하위 디렉터리를 감시합니다.</td>\n</tr>\n<tr>\n<td><code>RecursiveDirectoryUsingDynamicPriorityPolling</code></td>\n<td>동적 폴링 큐를 사용하여 디렉터리 및 하위 디렉터리에 대한 변경사항을 폴링 합니다.</td>\n</tr>\n<tr>\n<td>default (no value specified)</td>\n<td><code>fs.watch</code>를 사용하여 디렉터리 및 하위 디렉터리를 감시합니다.</td>\n</tr>\n</tbody>\n</table>","headings":[{"value":"배경 (Background)","depth":2},{"value":"Configuring file watching using a tsconfig.json","depth":2},{"value":"환경 변수 TSC*WATCHFILE을 사용하여 파일 감시 설정 (Configuring file watching using environment variable TSC*WATCHFILE)","depth":2},{"value":"환경 변수TSC*WATCHDIRECTORY를 사용하여 디렉터리 감시 설정 (Configuring directory watching using environment variable TSC*WATCHDIRECTORY)","depth":2}],"frontmatter":{"permalink":"/ko/docs/handbook/configuring-watch.html","title":"Configuring Watch","disable_toc":null,"handbook":null,"oneline":"How to configure the watch mode of TypeScript","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"id":"8-configuring-watch","slug":"/ko/docs/handbook/configuring-watch.html","repoPath":"/packages/documentation/copy/ko/project-config/Configuring Watch.md","lang":"ko","modifiedTime":"2024-10-21T12:35:09.561Z"}},"staticQueryHashes":[]}