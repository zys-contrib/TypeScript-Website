{"componentChunkName":"component---src-templates-documentation-tsx","path":"/ko/docs/handbook/namespaces.html","result":{"data":{"markdownRemark":{"id":"6c156bd1-6724-504e-9c5f-d983e940d38d","excerpt":"용어에 대한 설명:\nTypeScript 1.5 버전부터 용어가 변경되었습니다.\n“Internal modules” 은 “네임스페이스” 로 변경되었습니다.\n“External modules” 은 “모듈” 로 변경되었습니다. 이는 ECMAScript 201…","html":"<blockquote>\n<p><strong>용어에 대한 설명:</strong>\nTypeScript 1.5 버전부터 용어가 변경되었습니다.\n“Internal modules” 은 “네임스페이스” 로 변경되었습니다.\n“External modules” 은 “모듈” 로 변경되었습니다. 이는 <a href=\"http://www.ecma-international.org/ecma-262/6.0/\">ECMAScript 2015</a>의 용어와 통일시키기 위함입니다.\n(<code>module X {</code> 는 현재 선호되는 <code>namespace X {</code> 와 동일합니다.)</p>\n</blockquote>\n<p>이 게시물에서는 TypeScript에서 네임스페이스(구 “internal modules”)를 사용하여 코드를 구성하는 다양한 방법을 간략하게 설명합니다.\n위에서 설명했듯이, “internal modules” 은 “네임스페이스” 로 변경되었습니다.\n이에 따라, 인터널 모듈을 선언하기 위해 쓰였던 <code>module</code> 키워드는 <code>namespace</code> 키워드로 대체되어야 합니다.\n이를 통해 신규 사용자의 혼란을 방지할 수 있습니다.</p>\n<h1 id=\"첫-번째-단계-first-steps\" style=\"position:relative;\"><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EB%8B%A8%EA%B3%84-first-steps\" aria-label=\"첫 번째 단계 first steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫 번째 단계 (First steps)</h1>\n<p><b><a href=\"#table-of-contents\">↥ 위로</a></b></p>\n<p>이 페이지 전체에서 예제로 사용할 프로그램을 시작하겠습니다.\n웹 페이지의 양식에 대한 사용자 입력을 확인하거나 외부로부터 받은 데이터 파일의 형식을 확인하기 위해 간단한 문자열 검사기 세트를 작성했습니다.</p>\n<h2 id=\"단일-파일-검사기-validators-in-a-single-file\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9D%BC-%ED%8C%8C%EC%9D%BC-%EA%B2%80%EC%82%AC%EA%B8%B0-validators-in-a-single-file\" aria-label=\"단일 파일 검사기 validators in a single file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단일 파일 검사기 (Validators in a single file)</h2>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">): </span><span style=\"color: #1C6277\">boolean</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">lettersRegexp</span><span style=\"color: #000000\"> =</span><span style=\"color: #811F3F\"> /</span><span style=\"color: #EE0000\">^</span><span style=\"color: #D16969\">[</span><span style=\"color: #811F3F\">A-Za-z</span><span style=\"color: #D16969\">]</span><span style=\"color: #000000\">+</span><span style=\"color: #EE0000\">$</span><span style=\"color: #811F3F\">/</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">numberRegexp</span><span style=\"color: #000000\"> =</span><span style=\"color: #811F3F\"> /</span><span style=\"color: #EE0000\">^</span><span style=\"color: #D16969\">[</span><span style=\"color: #811F3F\">0-9</span><span style=\"color: #D16969\">]</span><span style=\"color: #000000\">+</span><span style=\"color: #EE0000\">$</span><span style=\"color: #811F3F\">/</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">LettersOnlyValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">lettersRegexp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">test</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">ZipCodeValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">length</span><span style=\"color: #000000\"> === </span><span style=\"color: #098658\">5</span><span style=\"color: #000000\"> && </span><span style=\"color: #001080\">numberRegexp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">test</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// 시도해 볼 샘플</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">strings</span><span style=\"color: #000000\"> = [</span><span style=\"color: #A31515\">\"Hello\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"98052\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"101\"</span><span style=\"color: #000000\">];</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// 사용할 검사기</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">: { [</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">]: </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\">; } = {};</span></div><div class='line'><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"ZIP code\"</span><span style=\"color: #000000\">] = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">ZipCodeValidator</span><span style=\"color: #000000\">();</span></div><div class='line'><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"Letters only\"</span><span style=\"color: #000000\">] = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">LettersOnlyValidator</span><span style=\"color: #000000\">();</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// 각 문자열이 각 검사기를 통과했는지 표시</span></div><div class='line'><span style=\"color: #AF00DB\">for</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">of</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">strings</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">for</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">name</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">in</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">isMatch</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">[</span><span style=\"color: #001080\">name</span><span style=\"color: #000000\">].</span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">`'</span><span style=\"color: #0000FF\">${</span><span style=\"color: #000000FF\"> </span><span style=\"color: #001080\">s</span><span style=\"color: #000000FF\"> </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">' </span><span style=\"color: #0000FF\">${</span><span style=\"color: #000000FF\"> </span><span style=\"color: #001080\">isMatch</span><span style=\"color: #000000FF\"> </span><span style=\"color: #000000\">?</span><span style=\"color: #000000FF\"> </span><span style=\"color: #A31515\">\"matches\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #000000\">:</span><span style=\"color: #000000FF\"> </span><span style=\"color: #A31515\">\"does not match\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\"> '</span><span style=\"color: #0000FF\">${</span><span style=\"color: #000000FF\"> </span><span style=\"color: #001080\">name</span><span style=\"color: #000000FF\"> </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">'.`</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<h1 id=\"네임스페이스-적용하기-namespacing\" style=\"position:relative;\"><a href=\"#%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0-namespacing\" aria-label=\"네임스페이스 적용하기 namespacing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네임스페이스 적용하기 (Namespacing)</h1>\n<p>더 많은 검사기를 추가하게 되면, 타입을 추적하고 다른 객체와 이름 충돌을 방지하기 위해 일종의 구조 체계가 필요합니다.\n전역 네임스페이스에 다른 이름을 많이 넣는 대신, 객체들을 하나의 네임스페이스로 감싸겠습니다.</p>\n<p>이 예에서는 모든 검사기 관련 개체를 <code>Validation</code>이라는 하나의 네임스페이스로 옮기겠습니다.<br>\n여기서 인터페이스 및 클래스가 네임스페이스 외부에서도 접근 가능하도록 선언부에 <code>export</code>를 붙입니다.<br>\n반면, 변수 <code>letterRegexp</code>와 <code>numberRegexp</code>는 구현 세부 사항이므로 외부로 내보내지 않아 네임스페이스 외부 코드에서 접근할 수 없습니다.\n파일 하단의 테스트 코드에서, 네임스페이스 외부에서 사용될 때 타입의 이름을 검증해야 합니다 (예: <code>Validation.LetterOnlyValidator</code>).</p>\n<h2 id=\"네임스페이스화된-검사기-namespaced-validators\" style=\"position:relative;\"><a href=\"#%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4%ED%99%94%EB%90%9C-%EA%B2%80%EC%82%AC%EA%B8%B0-namespaced-validators\" aria-label=\"네임스페이스화된 검사기 namespaced validators permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네임스페이스화된 검사기 (Namespaced Validators)</h2>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Validation</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">): </span><span style=\"color: #1C6277\">boolean</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">lettersRegexp</span><span style=\"color: #000000\"> =</span><span style=\"color: #811F3F\"> /</span><span style=\"color: #EE0000\">^</span><span style=\"color: #D16969\">[</span><span style=\"color: #811F3F\">A-Za-z</span><span style=\"color: #D16969\">]</span><span style=\"color: #000000\">+</span><span style=\"color: #EE0000\">$</span><span style=\"color: #811F3F\">/</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">numberRegexp</span><span style=\"color: #000000\"> =</span><span style=\"color: #811F3F\"> /</span><span style=\"color: #EE0000\">^</span><span style=\"color: #D16969\">[</span><span style=\"color: #811F3F\">0-9</span><span style=\"color: #D16969\">]</span><span style=\"color: #000000\">+</span><span style=\"color: #EE0000\">$</span><span style=\"color: #811F3F\">/</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">LettersOnlyValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">lettersRegexp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">test</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">        }</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">ZipCodeValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">length</span><span style=\"color: #000000\"> === </span><span style=\"color: #098658\">5</span><span style=\"color: #000000\"> && </span><span style=\"color: #001080\">numberRegexp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">test</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">        }</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// 시도해 볼 샘플</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">strings</span><span style=\"color: #000000\"> = [</span><span style=\"color: #A31515\">\"Hello\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"98052\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"101\"</span><span style=\"color: #000000\">];</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// 사용할 검사기</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">: { [</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">]: </span><span style=\"color: #1C6277\">Validation</span><span style=\"color: #000000\">.</span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\">; } = {};</span></div><div class='line'><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"ZIP code\"</span><span style=\"color: #000000\">] = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">Validation</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">ZipCodeValidator</span><span style=\"color: #000000\">();</span></div><div class='line'><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"Letters only\"</span><span style=\"color: #000000\">] = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">Validation</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">LettersOnlyValidator</span><span style=\"color: #000000\">();</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// 각 문자열이 각 검사기를 통과했는지 표시</span></div><div class='line'><span style=\"color: #AF00DB\">for</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">of</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">strings</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">for</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">name</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">in</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">`\"</span><span style=\"color: #0000FF\">${</span><span style=\"color: #000000FF\"> </span><span style=\"color: #001080\">s</span><span style=\"color: #000000FF\"> </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">\" - </span><span style=\"color: #0000FF\">${</span><span style=\"color: #000000FF\"> </span><span style=\"color: #001080\">validators</span><span style=\"color: #000000FF\">[</span><span style=\"color: #001080\">name</span><span style=\"color: #000000FF\">].</span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000FF\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000FF\">) </span><span style=\"color: #000000\">?</span><span style=\"color: #000000FF\"> </span><span style=\"color: #A31515\">\"matches\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #000000\">:</span><span style=\"color: #000000FF\"> </span><span style=\"color: #A31515\">\"does not match\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\"> </span><span style=\"color: #0000FF\">${</span><span style=\"color: #000000FF\"> </span><span style=\"color: #001080\">name</span><span style=\"color: #000000FF\"> </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">`</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<h1 id=\"파일-간-분할-splitting-across-files\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC-%EA%B0%84-%EB%B6%84%ED%95%A0-splitting-across-files\" aria-label=\"파일 간 분할 splitting across files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일 간 분할 (Splitting Across Files)</h1>\n<p><b><a href=\"#table-of-contents\">↥ 위로</a></b></p>\n<p>애플리케이션 규모가 커지면, 코드를 여러 파일로 분할해야 유지 보수가 용이합니다.</p>\n<h2 id=\"다중-파일-네임스페이스-multi-file-namespaces\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%A4%91-%ED%8C%8C%EC%9D%BC-%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-multi-file-namespaces\" aria-label=\"다중 파일 네임스페이스 multi file namespaces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다중 파일 네임스페이스 (Multi-file namespaces)</h2>\n<p><b><a href=\"#table-of-contents\">↥ 위로</a></b></p>\n<p>여기서 <code>Validation</code> 네임스페이스를 여러 파일로 분할합니다.\n파일이 분리되어 있어도 같은 네임스페이스에 기여할 수 있고 마치 한 곳에서 정의된 것처럼 사용할 수 있습니다.\n파일 간 의존성이 존재하므로, 참조 태그를 추가하여 컴파일러에게 파일 간의 관계를 알립니다.\n그 외에 테스트 코드는 변경되지 않았습니다.</p>\n<h5 id=\"validationts\" style=\"position:relative;\"><a href=\"#validationts\" aria-label=\"validationts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Validation.ts</h5>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Validation</span><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">): </span><span style=\"color: #1C6277\">boolean</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<h5 id=\"lettersonlyvalidatorsts\" style=\"position:relative;\"><a href=\"#lettersonlyvalidatorsts\" aria-label=\"lettersonlyvalidatorsts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LettersOnlyValidators.ts</h5>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">/// </span><span style=\"color: #800000\">&lt;reference</span><span style=\"color: #008000\"> </span><span style=\"color: #EE0000\">path</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"Validation.ts\"</span><span style=\"color: #008000\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Validation</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">lettersRegexp</span><span style=\"color: #000000\"> =</span><span style=\"color: #811F3F\"> /</span><span style=\"color: #EE0000\">^</span><span style=\"color: #D16969\">[</span><span style=\"color: #811F3F\">A-Za-z</span><span style=\"color: #D16969\">]</span><span style=\"color: #000000\">+</span><span style=\"color: #EE0000\">$</span><span style=\"color: #811F3F\">/</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">LettersOnlyValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">lettersRegexp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">test</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">        }</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<h5 id=\"zipcodevalidatorsts\" style=\"position:relative;\"><a href=\"#zipcodevalidatorsts\" aria-label=\"zipcodevalidatorsts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZipCodeValidators.ts</h5>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">/// </span><span style=\"color: #800000\">&lt;reference</span><span style=\"color: #008000\"> </span><span style=\"color: #EE0000\">path</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"Validation.ts\"</span><span style=\"color: #008000\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Validation</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">numberRegexp</span><span style=\"color: #000000\"> =</span><span style=\"color: #811F3F\"> /</span><span style=\"color: #EE0000\">^</span><span style=\"color: #D16969\">[</span><span style=\"color: #811F3F\">0-9</span><span style=\"color: #D16969\">]</span><span style=\"color: #000000\">+</span><span style=\"color: #EE0000\">$</span><span style=\"color: #811F3F\">/</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">ZipCodeValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">length</span><span style=\"color: #000000\"> === </span><span style=\"color: #098658\">5</span><span style=\"color: #000000\"> && </span><span style=\"color: #001080\">numberRegexp</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">test</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">        }</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<h5 id=\"testts\" style=\"position:relative;\"><a href=\"#testts\" aria-label=\"testts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test.ts</h5>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">/// </span><span style=\"color: #800000\">&lt;reference</span><span style=\"color: #008000\"> </span><span style=\"color: #EE0000\">path</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"Validation.ts\"</span><span style=\"color: #008000\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'><span style=\"color: #008000\">/// </span><span style=\"color: #800000\">&lt;reference</span><span style=\"color: #008000\"> </span><span style=\"color: #EE0000\">path</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"LettersOnlyValidator.ts\"</span><span style=\"color: #008000\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'><span style=\"color: #008000\">/// </span><span style=\"color: #800000\">&lt;reference</span><span style=\"color: #008000\"> </span><span style=\"color: #EE0000\">path</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"ZipCodeValidator.ts\"</span><span style=\"color: #008000\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// Some samples to try</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">strings</span><span style=\"color: #000000\"> = [</span><span style=\"color: #A31515\">\"Hello\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"98052\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"101\"</span><span style=\"color: #000000\">];</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// Validators to use</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">: { [</span><span style=\"color: #001080\">s</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">]: </span><span style=\"color: #1C6277\">Validation</span><span style=\"color: #000000\">.</span><span style=\"color: #1C6277\">StringValidator</span><span style=\"color: #000000\">; } = {};</span></div><div class='line'><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"ZIP code\"</span><span style=\"color: #000000\">] = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">Validation</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">ZipCodeValidator</span><span style=\"color: #000000\">();</span></div><div class='line'><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"Letters only\"</span><span style=\"color: #000000\">] = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">Validation</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">LettersOnlyValidator</span><span style=\"color: #000000\">();</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// Show whether each string passed each validator</span></div><div class='line'><span style=\"color: #AF00DB\">for</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">s</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">of</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">strings</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">for</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">name</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">in</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">validators</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">`\"</span><span style=\"color: #0000FF\">${</span><span style=\"color: #000000FF\"> </span><span style=\"color: #001080\">s</span><span style=\"color: #000000FF\"> </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">\" - </span><span style=\"color: #0000FF\">${</span><span style=\"color: #000000FF\"> </span><span style=\"color: #001080\">validators</span><span style=\"color: #000000FF\">[</span><span style=\"color: #001080\">name</span><span style=\"color: #000000FF\">].</span><span style=\"color: #795E26\">isAcceptable</span><span style=\"color: #000000FF\">(</span><span style=\"color: #001080\">s</span><span style=\"color: #000000FF\">) </span><span style=\"color: #000000\">?</span><span style=\"color: #000000FF\"> </span><span style=\"color: #A31515\">\"matches\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #000000\">:</span><span style=\"color: #000000FF\"> </span><span style=\"color: #A31515\">\"does not match\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\"> </span><span style=\"color: #0000FF\">${</span><span style=\"color: #000000FF\"> </span><span style=\"color: #001080\">name</span><span style=\"color: #000000FF\"> </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">`</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>파일이 여러 개 있으면 컴파일된 코드가 모두 로드되는지 확인해야 합니다.\n이를 수행하는 두 가지 방법이 있습니다.</p>\n<p>먼저, 모든 입력 파일을 하나의 JavaScript 출력 파일로 컴파일하기 위해 <code>--outFile</code> 플래그를 사용하여 연결 출력(concatenated output)을 사용할 수 있습니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">tsc --outFile sample.js Test.ts</span></div></code></div></pre>\n<p>컴파일러는 파일에 있는 참조 태그를 기반으로 출력 파일을 자동으로 정렬합니다. 각 파일을 개별적으로 지정할 수도 있습니다:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">tsc --outFile sample.js Validation.ts LettersOnlyValidator.ts ZipCodeValidator.ts Test.ts</span></div></code></div></pre>\n<p>또는 파일별 컴파일 (기본값)을 사용하여 각 입력 파일을 하나의 JavaScript 파일로 생성할 수 있습니다.\n여러 JS 파일이 생성되는 경우, 웹 페이지에서 생성된 개별 파일을 적절한 순서로 로드하기 위해 <code>&#x3C;script></code> 태그를 사용해야 합니다. 예를 들어:</p>\n<h5 id=\"mytestpagehtml-인용\" style=\"position:relative;\"><a href=\"#mytestpagehtml-%EC%9D%B8%EC%9A%A9\" aria-label=\"mytestpagehtml 인용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyTestPage.html (인용)</h5>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">html</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #800000\">&lt;script</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">src</span><span style=\"color: #000000FF\">=</span><span style=\"color: #0000FF\">\"Validation.js\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">type</span><span style=\"color: #000000FF\">=</span><span style=\"color: #0000FF\">\"text/javascript\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #CD3131\">/</span><span style=\"color: #800000\">&gt;</span></div><div class='line'><span style=\"color: #000000FF\">    </span><span style=\"color: #800000\">&lt;script</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">src</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"LettersOnlyValidator.js\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">type</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"text/javascript\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'><span style=\"color: #000000FF\">    </span><span style=\"color: #800000\">&lt;script</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">src</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"ZipCodeValidator.js\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">type</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"text/javascript\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #800000\">/&gt;</span></div><div class='line'><span style=\"color: #000000FF\">    </span><span style=\"color: #800000\">&lt;script</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">src</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"Test.js\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #EE0000\">type</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"text/javascript\"</span><span style=\"color: #000000FF\"> </span><span style=\"color: #800000\">/&gt;</span></div></code></div></pre>\n<h1 id=\"별칭-aliases\" style=\"position:relative;\"><a href=\"#%EB%B3%84%EC%B9%AD-aliases\" aria-label=\"별칭 aliases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>별칭 (Aliases)</h1>\n<p><b><a href=\"#table-of-contents\">↥ 위로</a></b></p>\n<p>네임스페이스 작업을 단순화할 수 있는 또 다른 방법은 일반적으로 사용되는 객체의 이름을 더 짧게 만들기 위해 <code>import q = x.y.z</code>를 사용하는 것입니다.\n모듈을 로드하는 데 사용되는 <code>import x = require (\"name\")</code> 구문과 혼동하지 않기 위해, 이 구문은 단순히 특정 심벌에 별칭을 생성합니다.\n이러한 종류의 가져오기(일반적으로 별칭이라고 함)는 모듈 가져오기에서 생성된 객체를 포함하여 모든 종류의 식별자에 대해 사용할 수 있습니다.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Shapes</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Polygons</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Triangle</span><span style=\"color: #000000\"> { }</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Square</span><span style=\"color: #000000\"> { }</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">polygons</span><span style=\"color: #000000\"> = </span><span style=\"color: #1C6277\">Shapes</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">Polygons</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">sq</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">polygons</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">Square</span><span style=\"color: #000000\">(); </span><span style=\"color: #008000\">// 'new Shapes.Polygons.Square()'와 동일</span></div></code></div></pre>\n<p><code>require</code> 키워드를 사용하지 않는다는 것을 명심하세요; 대신 가져오는 심벌은 정해진 이름으로 직접 할당합니다.\n<code>var</code>를 사용하는 것과 비슷하지만, 가져온 심벌의 타입 및 네임스페이스 의미에 대해서도 동작합니다.\n특히, 값의 경우 <code>import</code>는 원래 심벌와 별개의 참조이므로 별칭 <code>var</code>에 대한 변경 내용은 원래 변수에 반영되지 않습니다.</p>\n<h1 id=\"다른-javascript-라이브러리로-작업하기-working-with-other-javascript-libraries\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-javascript-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%98%EA%B8%B0-working-with-other-javascript-libraries\" aria-label=\"다른 javascript 라이브러리로 작업하기 working with other javascript libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 JavaScript 라이브러리로 작업하기 (Working with Other JavaScript Libraries)</h1>\n<p><b><a href=\"#table-of-contents\">↥ 위로</a></b></p>\n<p>TypeScript로 작성되지 않은 라이브러리의 형태를 설명하려면, 라이브러리가 외부에 제공하는 API를 선언해야 합니다.\n대부분의 JavaScript 라이브러리는 소수의 최상위 객체만 노출하므로 네임스페이스를 사용하는 것이 좋습니다.</p>\n<p>구현을 정의하지 않은 선언을 “ambient”라고 부릅니다.\n일반적으로 이것은 <code>.d.ts</code> 파일에 정의되어 있습니다.\nC/C++에 익숙하다면 이를 <code>.h</code> 파일로 생각할 수 있습니다.\n몇 가지 예를 살펴보겠습니다.</p>\n<h2 id=\"ambient-네임스페이스-ambient-namespaces\" style=\"position:relative;\"><a href=\"#ambient-%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-ambient-namespaces\" aria-label=\"ambient 네임스페이스 ambient namespaces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ambient 네임스페이스 (Ambient Namespaces)</h2>\n<p><b><a href=\"#table-of-contents\">↥ 위로</a></b></p>\n<p>널리 사용되는 D3 라이브러리는 <code>d3</code>이라는 전역 객체에서 기능을 정의합니다.\n이 라이브러리는 <code>&#x3C;script></code> 태그를 통해 로드되므로(모듈 로더 대신) 형태를 정의하기 위해 선언할 때 네임스페이스를 사용합니다.\nTypeScript 컴파일러는 이 형태를 보기 위해, ambient 네임스페이스 선언을 사용합니다.\n예를 들어 다음과 같이 작성할 수 있습니다:</p>\n<h5 id=\"d3dts-간단한-인용\" style=\"position:relative;\"><a href=\"#d3dts-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%9D%B8%EC%9A%A9\" aria-label=\"d3dts 간단한 인용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>D3.d.ts (간단한 인용)</h5>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">D3</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Selectors</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">select</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">            (</span><span style=\"color: #001080\">selector</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">): </span><span style=\"color: #1C6277\">Selection</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">            (</span><span style=\"color: #001080\">element</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">EventTarget</span><span style=\"color: #000000\">): </span><span style=\"color: #1C6277\">Selection</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">        };</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Event</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">x</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Base</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">extends</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Selectors</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #001080\">event</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">Event</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">d3</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">D3</span><span style=\"color: #000000\">.</span><span style=\"color: #1C6277\">Base</span><span style=\"color: #000000\">;</span></div></code></div></pre>","headings":[{"value":"첫 번째 단계 (First steps)","depth":1},{"value":"단일 파일 검사기 (Validators in a single file)","depth":2},{"value":"네임스페이스 적용하기 (Namespacing)","depth":1},{"value":"네임스페이스화된 검사기 (Namespaced Validators)","depth":2},{"value":"파일 간 분할 (Splitting Across Files)","depth":1},{"value":"다중 파일 네임스페이스 (Multi-file namespaces)","depth":2},{"value":"Validation.ts","depth":5},{"value":"LettersOnlyValidators.ts","depth":5},{"value":"ZipCodeValidators.ts","depth":5},{"value":"Test.ts","depth":5},{"value":"MyTestPage.html (인용)","depth":5},{"value":"별칭 (Aliases)","depth":1},{"value":"다른 JavaScript 라이브러리로 작업하기 (Working with Other JavaScript Libraries)","depth":1},{"value":"Ambient 네임스페이스 (Ambient Namespaces)","depth":2},{"value":"D3.d.ts (간단한 인용)","depth":5}],"frontmatter":{"permalink":"/ko/docs/handbook/namespaces.html","title":"Namespaces","disable_toc":null,"handbook":null,"oneline":"How TypeScript namespaces work","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"id":"2-namespaces","slug":"/ko/docs/handbook/namespaces.html","repoPath":"/packages/documentation/copy/ko/reference/Namespaces.md","lang":"ko","modifiedTime":"2024-10-21T12:35:09.561Z"}},"staticQueryHashes":[]}