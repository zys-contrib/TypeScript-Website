{"componentChunkName":"component---src-templates-documentation-tsx","path":"/ko/docs/handbook/2/understanding-errors.html","result":{"data":{"markdownRemark":{"id":"808b5ea6-b556-5adc-8a75-6df159932781","excerpt":"오류를 이해하기 (Understanding Errors) TypeScript는 오류를 찾으면, 무엇이 잘못됐는지 가능한 자세하게 설명하려고 합니다.\nTypeScript…","html":"<h1 id=\"오류를-이해하기-understanding-errors\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98%EB%A5%BC-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-understanding-errors\" aria-label=\"오류를 이해하기 understanding errors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류를 이해하기 (Understanding Errors)</h1>\n<p>TypeScript는 오류를 찾으면, 무엇이 잘못됐는지 가능한 자세하게 설명하려고 합니다.\nTypeScript의 타입 시스템은 구조적이기 때문에, 문제를 발견한 위치에 대해 자세한 설명을 제공할 수 있습니다.</p>\n<h2 id=\"용어-terminology\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4-terminology\" aria-label=\"용어 terminology permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어 (Terminology)</h2>\n<p>오류 메시지에서 자주 등장하는 용어를 알면 이해하는 데 도움이 됩니다.</p>\n<h4 id=\"할당할-수-있는-assignable-to\" style=\"position:relative;\"><a href=\"#%ED%95%A0%EB%8B%B9%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-assignable-to\" aria-label=\"할당할 수 있는 assignable to permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>할당할 수 있는</em> (<em>assignable to</em>)</h4>\n<p>TypeScript는 타입이 다른 타입으로 대체할 수 있을 때 타입을 다른 타입에 <em>할당할 수</em> 있다 라고 표현합니다.\n다시 말해 <code>고양이</code>는 <code>동물</code>을 대체할 수 있기 때문에 <code>동물</code>에게 <em>할당할 수</em> 있습니다.</p>\n<p>이름에서 보이듯, 이런 관계는 <code>t</code>와 <code>s</code>의 타입을 검사하여 <code>t = s;</code>의 할당 타당성을 확인하는 데 사용됩니다.\n또한 두 가지 타입이 상호 작용하는 대부분의 위치에서 확인할 때에도 사용됩니다.\n예를 들어, 함수를 호출할 때 각 인수의 타입은 매개 변수로 선언된 유형에 <em>할당할 수</em> 있어야 합니다.</p>\n<p>비공식적으로 <code>T is not assignable to S</code>라고 하면 TypeScript는 ”<em><code>T</code>와 <code>S</code>는 호환되지 않는다”</em>.고 말한다고 생각하면됩니다.\n그러나, 이것은 <em>방향성이 있는</em> 관계라는 점에 유의하세요: <code>S</code>가 <code>T</code>에 할당될 수 있다고 해서 <code>T</code>가 <code>S</code>에 할당될 수 있는 것은 아닙니다.</p>\n<h2 id=\"예시들-examples\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C%EB%93%A4-examples\" aria-label=\"예시들 examples permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시들 (Examples)</h2>\n<p>오류 메시지의 몇 가지 예제를 살펴보고 어떤 일이 일어나고 있는지 알아보겠습니다.</p>\n<h3 id=\"오류-정교화-error-elaborations\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98-%EC%A0%95%EA%B5%90%ED%99%94-error-elaborations\" aria-label=\"오류 정교화 error elaborations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류 정교화 (Error Elaborations)</h3>\n<p>각 오류는 선행 메시지로 시작하고 때로는 더 많은 하위 메시지로 이어집니다.\n각 하위 메시지는 위의 메시지에 대한 “왜?” 질문에 대답하는 것으로 생각할 수 있습니다.\n몇 가지 예를 통해 실제로 어떻게 작동하는지 살펴보겠습니다.</p>\n<p>다음은 예제 자체보다 긴 오류 메시지를 생성하는 예입니다:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\"><data-lsp lsp='let a: {&#10;    m: number[];&#10;}' >a</data-lsp></span><span style=\"color: #000000\">: { </span><span style=\"color: #001080\"><data-lsp lsp='(property) m: number[]' >m</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">[] }</span></div><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\"><data-lsp lsp='let b: {&#10;    m: string[];&#10;}' >b</data-lsp></span><span style=\"color: #000000\"> = { </span><span style=\"color: #001080\"><data-lsp lsp='(property) m: string[]' >m</data-lsp>:</span><span style=\"color: #000000\"> [</span><span style=\"color: #A31515\">\"\"</span><span style=\"color: #000000\">] }</span></div><div class='line'><span style=\"color: #001080\"><data-err><data-lsp lsp='let a: {&#10;    m: number[];&#10;}' >a</data-lsp></data-err></span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\"><data-lsp lsp='let b: {&#10;    m: string[];&#10;}' >b</data-lsp></span></div><span class=\"error\"><span>Type '{ m: string[]; }' is not assignable to type '{ m: number[]; }'.\n  Types of property 'm' are incompatible.\n    Type 'string[]' is not assignable to type 'number[]'.\n      Type 'string' is not assignable to type 'number'.</span><span class=\"code\">2322</span></span><span class=\"error-behind\">Type '{ m: string[]; }' is not assignable to type '{ m: number[]; }'.\n  Types of property 'm' are incompatible.\n    Type 'string[]' is not assignable to type 'number[]'.\n      Type 'string' is not assignable to type 'number'.</span></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGY1oFABtIAXUAQ1QG9QBbVAOwFcqAjGAbQF1QBffI0J0AF5QlGqFYAiCZx4kh-IA'>Try</a></div></pre>\n<p>마지막 줄에서 TypeScript는 오류를 발견했습니다.\n오류 발생에 대한 논리는 할당이 정상인지 확인하는 논리에서 비롯됩니다:</p>\n<ol>\n<li><code>b</code> 타입은 <code>a</code> 타입에 할당 가능한가요? 아뇨. 왜요?</li>\n<li>왜냐하면 <code>m</code> 속성의 타입이 호환되지 않기 때문입니다. 왜죠?</li>\n<li>왜냐하면 <code>b</code>의 <code>m</code> 속성(<code>string[]</code>)은 <code>a</code>의 <code>m</code> 속성(<code>number[]</code>)에 할당할 수 없기 때문입니다. 왜죠?</li>\n<li>한 배열의 요소 타입(<code>string</code>)을 다른 타입(<code>number</code>)에 할당할 수 없기 때문입니다.</li>\n</ol>\n<h3 id=\"추가-속성-extra-properties\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-%EC%86%8D%EC%84%B1-extra-properties\" aria-label=\"추가 속성 extra properties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가 속성 (Extra Properties)</h3>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">type</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\"><data-lsp lsp='type A = {&#10;    m: number;&#10;}' >A</data-lsp></span><span style=\"color: #000000\"> = { </span><span style=\"color: #001080\"><data-lsp lsp='(property) m: number' >m</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\"> }</span></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\"><data-lsp lsp='const a: A' >a</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\"><data-lsp lsp='type A = {&#10;    m: number;&#10;}' >A</data-lsp></span><span style=\"color: #000000\"> = { </span><span style=\"color: #001080\"><data-lsp lsp='(property) m: number' >m</data-lsp>:</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">10</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\"><data-lsp lsp='(property) n: string' >n</data-lsp>:</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"\"</span><span style=\"color: #000000\"> }</span></div><span class=\"error\"><span>Type '{ m: number; n: string; }' is not assignable to type 'A'.\n  Object literal may only specify known properties, and 'n' does not exist in type 'A'.</span><span class=\"code\">2322</span></span><span class=\"error-behind\">Type '{ m: number; n: string; }' is not assignable to type 'A'.\n  Object literal may only specify known properties, and 'n' does not exist in type 'A'.</span></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGY1oFABcBPAB0lAEFQBeUAb1AFtUA7AV3oCMZQBfHAYzhNEeUAENUFanUagAjAAYANKCaoARGp5A'>Try</a></div></pre>\n<h3 id=\"유니언-할당-union-assignments\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EB%8B%88%EC%96%B8-%ED%95%A0%EB%8B%B9-union-assignments\" aria-label=\"유니언 할당 union assignments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유니언 할당 (Union Assignments)</h3>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">type</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\"><data-lsp lsp='type Thing = {&#10;    name: string;&#10;} | \"none\"' >Thing</data-lsp></span><span style=\"color: #000000\"> = </span><span style=\"color: #A31515\">\"none\"</span><span style=\"color: #000000\"> | { </span><span style=\"color: #001080\"><data-lsp lsp='(property) name: string' >name</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\"> }</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\"><data-lsp lsp='const a: Thing' >a</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\"><data-lsp lsp='type Thing = {&#10;    name: string;&#10;} | \"none\"' >Thing</data-lsp></span><span style=\"color: #000000\"> = { </span><span style=\"color: #001080\"><data-err><data-lsp lsp='(property) name: string' >name</data-lsp></data-err>:</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\"> }</span></div><span class=\"error\"><span>Type 'number' is not assignable to type 'string'.</span><span class=\"code\">2322</span></span><span class=\"error-behind\">Type 'number' is not assignable to type 'string'.</span></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGY1oFABcBPAB0lABUALASwDsBzUAXlACIa4bIXQAfUAb1A0AhgFtIqRHmi0GAXxw4AxhymhhqSrKYChYiaAAMoOUA'>Try</a></div></pre>","headings":[{"value":"오류를 이해하기 (Understanding Errors)","depth":1},{"value":"용어 (Terminology)","depth":2},{"value":"할당할 수 있는 (assignable to)","depth":4},{"value":"예시들 (Examples)","depth":2},{"value":"오류 정교화 (Error Elaborations)","depth":3},{"value":"추가 속성 (Extra Properties)","depth":3},{"value":"유니언 할당 (Union Assignments)","depth":3}],"frontmatter":{"permalink":"/ko/docs/handbook/2/understanding-errors.html","title":"Understanding Errors","disable_toc":null,"handbook":null,"oneline":"TypeScript에서 오류를 보는 방법.","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"slug":"/ko/docs/handbook/2/understanding-errors.html","repoPath":"/packages/documentation/copy/ko/handbook-v2/Understanding Errors.md","lang":"ko","modifiedTime":"2024-10-21T12:35:09.557Z"}},"staticQueryHashes":[]}