{"componentChunkName":"component---src-templates-play-example-tsx","path":"/ko/play/javascript/working-with-classes/classes-101.ts.html","result":{"pageContext":{"name":"Classes 101","title":"Classes 101","lang":"ko","html":"\n 클래스는 생성자를 이용해서 생성되는\n JavaScript 오브젝트의 특별한 타입입니다.\n 클래스는 오브젝트와 아주 흡사하게 동작하며\n Java/C#/Swift 같은 언어와 비슷한 상속 구조를 가집니다.\n\n 클래스 예시:\n\n<code><pre>\nclass Vendor {\n  name: string;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  greet() {\n    return \"Hello, welcome to \" + this.name;\n  }\n}\n\n</pre></code>\n// 인스턴스는 new 키워드를 이용해서 생성할 수 있으며\n 메서드를 호출하고\n 오브젝트의 프로퍼티에 접근할 수 있습니다.\n\n<code><pre>\nconst shop = new Vendor(\"Ye Olde Shop\");\nconsole.log(shop.greet());\n\n</pre></code>\n// 오브젝트를 하위 클래스로 만들 수 있습니다.\n 이름뿐만 아니라 다양한 음식을 가진 카트:\n\n<code><pre>\nclass FoodTruck extends Vendor {\n  cuisine: string;\n\n  constructor(name: string, cuisine: string) {\n    super(name);\n    this.cuisine = cuisine;\n  }\n\n  greet() {\n    return \"Hi, welcome to food truck \" + this.name + \". We serve \" + this.cuisine + \" food.\";\n  }\n}\n\n</pre></code>\n// 새로운 FoodTruck을 생성하기 위하여\n 매개변수가 2개 필요하다고 작성했기 때문에\n TypeScript는 매개변수를 하나만 사용할 경우, 에러를 표시합니다:\n\n<code><pre>\nconst nameOnlyTruck = new FoodTruck(\"Salome's Adobo\");\n\n</pre></code>\n// 매개변수 2개를 정확하게 전달하면\n FoodTruck의 새로운 인스턴스를 생성할 수 있습니다:\n\n<code><pre>\nconst truck = new FoodTruck(\"Dave's Doritos\", \"junk\");\nconsole.log(truck.greet());\n","redirectHref":"ko/play/?#example/classes-101"}},"staticQueryHashes":[]}