{"componentChunkName":"component---src-templates-play-tsx","path":"/ko/play","result":{"pageContext":{"lang":"ko","examplesTOC":{"sections":[{"name":"JavaScript","id":"JavaScript","subtitle":"TypeScript가 최소한의 추가 구문으로 JavaScript 작업을 어떻게 개선하는지 확인해보세요."},{"name":"TypeScript","id":"TypeScript","subtitle":"TypeScript가 JavaScript를 확장하여 안전성과 도구를 추가하는 방법을 살펴보세요."},{"name":"3.7","id":"3.7","subtitle":"<a href='https://devblogs.microsoft.com/typescript/announcing-typescript-3-7/'>릴리즈 노트</a>를 확인해보세요."},{"name":"3.8","id":"3.8","subtitle":"<a href='https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/'>릴리즈 노트</a>를 확인해보세요."},{"name":"4.0","id":"4.0","subtitle":"<a href='https://devblogs.microsoft.com/typescript/announcing-typescript-4-0-beta/'>릴리즈 노트</a>를 확인해보세요."},{"name":"Playground V3","id":"Playground","subtitle":"이 웹사이트에서 변경된 사항을 확인해보세요."}],"sortedSubSections":["JavaScript Essentials","Functions with JavaScript","Working With Classes","Modern JavaScript","External APIs","Helping with JavaScript","Primitives","Type Primitives","Meta-Types","Language","Language Extensions","Syntax and Messaging","Types and Code Flow","Fixits","Config","Tooling","Breaking Changes","JSDoc Improvements","New JS Features","New TS Features","New Checks","Template Literals"],"examples":[{"path":["3-7","Fixits"],"title":"Big number literals","name":"Big number literals.ts","lang":"ko","id":"big-number-literals","sortIndex":1,"hash":"2c1deb39f5271bf1903b5b091d3c9f22","compilerSettings":{"target":99}},{"path":["3-7","Fixits"],"title":"Const to let","name":"Const to let.ts","lang":"ko","id":"const-to-let","sortIndex":1,"hash":"d37bdf40c27cb76516c6e1a38867e552","compilerSettings":{}},{"path":["3-7","Fixits"],"title":"Infer From Usage Changes","name":"Infer From Usage Changes.ts","lang":"ko","id":"infer-from-usage-changes","sortIndex":2,"hash":"f73152f008cc3e54f07514efaa2182f6","compilerSettings":{"noImplicitAny":false}},{"path":["3-7","Syntax and Messaging"],"title":"Flattened Error Reporting","name":"Flattened Error Reporting.ts","lang":"ko","id":"flattened-error-reporting","sortIndex":3,"hash":"15c4e009c52f9d9463687946fdc22230","compilerSettings":{}},{"path":["3-7","Syntax and Messaging"],"title":"Nullish Coalescing","name":"Nullish Coalescing.ts","lang":"en","id":"nullish-coalescing","sortIndex":2,"hash":"7baa4a458be040137e2934cf73908a98","compilerSettings":{}},{"path":["3-7","Syntax and Messaging"],"title":"Optional Chaining","name":"Optional Chaining.ts","lang":"ko","id":"optional-chaining","sortIndex":1,"hash":"c5229b37f265e3cca3d35d71db7b5c07","compilerSettings":{}},{"path":["3-7","Types and Code Flow"],"title":"Assertion Functions","name":"Assertion Functions.ts","lang":"ko","id":"assertion-functions","sortIndex":1,"hash":"e7f4e015ee176a9da9cb327ac9f9c5ea","compilerSettings":{}},{"path":["3-7","Types and Code Flow"],"title":"Recursive Type References","name":"Recursive Type References.ts","lang":"en","id":"recursive-type-references","sortIndex":2,"hash":"f0d64132c66dc3e0476b836a8b299357","compilerSettings":{}},{"path":["3-7","Types and Code Flow"],"title":"Uncalled Function Checks","name":"Uncalled Function Checks.ts","lang":"ko","id":"uncalled-function-checks","sortIndex":1,"hash":"09f6b6306ef4745112fbd997d498eb58","compilerSettings":{}},{"path":["3-8","Breaking Changes"],"title":"Checking Unions with Index Signatures","name":"Checking Unions with Index Signatures.ts","lang":"ko","id":"checking-unions-with-index-signatures","sortIndex":1,"hash":"0ea52f4ee777de77fe2d9b9ae38adc11","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","JSDoc Improvements"],"title":"Accessibility Modifiers","name":"Accessibility Modifiers.js","lang":"en","id":"accessibility-modifiers","sortIndex":1,"hash":"40ea235651f4c43b41af4795a0fce426","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","Syntax and Messaging"],"title":"Export Modules From","name":"Export Modules From.ts","lang":"ko","id":"export-modules-from","sortIndex":1,"hash":"653a082a2052646360ac062cd6fcf0ea","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","Syntax and Messaging"],"title":"Private Class Fields","name":"Private Class Fields.ts","lang":"ko","id":"private-class-fields","sortIndex":1,"hash":"fabd349007a5e032cd4b3db8ea0edca0","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","Syntax and Messaging"],"title":"Type Imports","name":"Type Imports.tsx","lang":"ko","id":"type-imports","sortIndex":1,"hash":"8991db84bcc5313c8a46715554f9dfb4","compilerSettings":{"ts":"3.8.3"}},{"path":["4-0","New Checks"],"title":"Class Constructor Code Flow","name":"Class Constructor Code Flow.ts","lang":"ko","id":"class-constructor-code-flow","sortIndex":1,"hash":"041f139cb94d373464dad853d25c66b8","compilerSettings":{"ts":"4.0.2"}},{"path":["4-0","New JS Features"],"title":"JSDoc Deprecated","name":"JSDoc Deprecated.ts","lang":"ko","id":"jsdoc-deprecated","sortIndex":1,"hash":"e555c343ae0dd12f32eae41b28b632b5","compilerSettings":{}},{"path":["4-0","New JS Features"],"title":"Logical Operators and Assignment","name":"Logical Operators and Assignment.ts","lang":"ko","id":"logical-operators-and-assignment","sortIndex":1,"hash":"42d4f54a52188d9a798cb35b729939c8","compilerSettings":{}},{"path":["4-0","New JS Features"],"title":"Nullish Coalescing","name":"Nullish Coalescing.ts","lang":"en","id":"nullish-coalescing","sortIndex":1,"hash":"25d21bca71dcdcef434b97f0a8b68689","compilerSettings":{}},{"path":["4-0","New TS Features"],"title":"Named Tuples","name":"Named Tuples.ts","lang":"en","id":"named-tuples","sortIndex":1,"hash":"9f5ff56c7665387a6bf8d43c31915a7c","compilerSettings":{"ts":"4.0.2"}},{"path":["4-0","New TS Features"],"title":"Unknown in Catch","name":"Unknown in Catch.ts","lang":"ko","id":"unknown-in-catch","sortIndex":1,"hash":"ff7cd461dc096c81f85a779f67f57028","compilerSettings":{"ts":"4.0.2"}},{"path":["4-0","New TS Features"],"title":"Variadic Tuples","name":"Variadic Tuples.ts","lang":"en","id":"variadic-tuples","sortIndex":1,"hash":"42ba555f65d8d64f8853e5b7ca5b53d7","compilerSettings":{"ts":"4.0.2"}},{"path":["4-1","New JS Features"],"title":"New JSX Support","name":"New JSX Support.tsx","lang":"en","id":"new-jsx-support","sortIndex":1,"hash":"1873593d52bf3b988576196ba34a67f9","compilerSettings":{"ts":"4.1.0-dev.20201028","jsx":4}},{"path":["4-1","New JS Features"],"title":"See in JSDoc","name":"See in JSDoc.ts","lang":"en","id":"see-in-jsdoc","sortIndex":1,"hash":"6fd3a8d713ba5c129c7c04243cd15548","compilerSettings":{"ts":"4.1.0-beta"}},{"path":["4-1","Template Literals"],"title":"Intro to Template Literals","name":"Intro to Template Literals.ts","lang":"en","id":"intro-to-template-literals","sortIndex":1,"hash":"a702cc4f34f842c937b6a5953961b009","compilerSettings":{"ts":"4.1.0-dev.20201028"}},{"path":["4-1","Template Literals"],"title":"Mapped Types with Template Literals","name":"Mapped Types with Template Literals.ts","lang":"en","id":"mapped-types-with-template-literals","sortIndex":1,"hash":"f2df1e6ff682803cda7d3133efdb7f58","compilerSettings":{"ts":"4.1.0-dev.20201028"}},{"path":["4-1","Template Literals"],"title":"String Manipulation with Template Literals","name":"String Manipulation with Template Literals.ts","lang":"en","id":"string-manipulation-with-template-literals","sortIndex":1,"hash":"5127bb5d7c14895caff3cc39f1fd4b85","compilerSettings":{"ts":"4.1.0-dev.20201028"}},{"path":["4-2","Fixits"],"title":"Create Function from Call","name":"Create Function from Call.ts","lang":"en","id":"create-function-from-call","sortIndex":1,"hash":"487a42e067cd980de0375e4000d8ecea","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Abstract Class Constructors","name":"Abstract Class Constructors.ts","lang":"en","id":"abstract-class-constructors","sortIndex":1,"hash":"cc2799185834d0027e8e6c6462956408","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Rest Elements in Tuple Types","name":"Rest Elements in Tuple Types.ts","lang":"en","id":"rest-elements-in-tuple-types","sortIndex":1,"hash":"f0d75cf9274d37d40b24c6c6935b067a","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Smarter Type Alias Preservation","name":"Smarter Type Alias Preservation.ts","lang":"en","id":"smarter-type-alias-preservation","sortIndex":1,"hash":"9dc869de5445f8fae8b4762126a539bf","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Use Index Accessors for Index Signatures","name":"Use Index Accessors for Index Signatures.ts","lang":"en","id":"use-index-accessors-for-index-signatures","sortIndex":1,"hash":"b17655a57ea03e05cc398249afe4dc4f","compilerSettings":{"ts":"4.2.0-beta","noPropertyAccessFromIndexSignature":true}},{"path":["4-3","New TS Features"],"title":"No Implicit Class Overrides","name":"No Implicit Class Overrides.ts","lang":"en","id":"no-implicit-class-overrides","sortIndex":1,"hash":"78f3f927135716b19f8eab5b78103724","compilerSettings":{"ts":"4.3.4"}},{"path":["4-3","New TS Features"],"title":"Separate Write vs Read on Properties","name":"Separate Write vs Read on Properties.ts","lang":"en","id":"separate-write-vs-read-on-properties","sortIndex":1,"hash":"2a0d83e3767babac56fa73db8c61d7eb","compilerSettings":{"ts":"4.3.4"}},{"path":["4-4","New JS Features"],"title":"Control Flow Improvements","name":"Control Flow Improvements.ts","lang":"en","id":"control-flow-improvements","sortIndex":1,"hash":"89e84eae89ff824720113b149ede2651","compilerSettings":{"ts":"4.4.2"}},{"path":["4-4","New JS Features"],"title":"Errors for High Confidence Errors","name":"Errors for High Confidence Errors.ts","lang":"en","id":"errors-for-high-confidence-errors","sortIndex":1,"hash":"5f43cace57d96a03e56cf4106a2b5401","compilerSettings":{"ts":"4.4.2","useJavaScript":true,"checkJS":false}},{"path":["4-4","New TS Features"],"title":"Exact Optional Properties","name":"Exact Optional Properties.ts","lang":"en","id":"exact-optional-properties","sortIndex":1,"hash":"30de307ca7a47ba3e17c79aed44bdfec","compilerSettings":{"ts":"4.4.2","exactOptionalPropertyTypes":true}},{"path":["4-4","New TS Features"],"title":"Use unknown for Catch Variables","name":"Use unknown for Catch Variables.ts","lang":"en","id":"use-unknown-for-catch-variables","sortIndex":1,"hash":"4dd1acc37f8381c89a65e3a73a8e599d","compilerSettings":{"ts":"4.4.2","useUnknownInCatchVariables":true}},{"path":["4-7","New JS Features"],"title":"Control Flow Improvements","name":"Control Flow Improvements.ts","lang":"en","id":"control-flow-improvements","sortIndex":1,"hash":"59e02fff9cab1ee8a96b1f089f430ba1","compilerSettings":{"ts":"4.7.3"}},{"path":["4-7","New JS Features"],"title":"Improved Function Inference","name":"Improved Function Inference.ts","lang":"en","id":"improved-function-inference","sortIndex":1,"hash":"1ce96554ee19d8e6fc300a108aa45967","compilerSettings":{"ts":"4.7.3"}},{"path":["4-7","New TS Features"],"title":"Extends Constraints","name":"Extends Constraints.ts","lang":"en","id":"extends-constraints","sortIndex":1,"hash":"7a48f3d72bcc90e338ebc3efdec1a247","compilerSettings":{"ts":"4.7.3"}},{"path":["4-7","New TS Features"],"title":"Instantiation Expressions","name":"Instantiation Expressions.ts","lang":"en","id":"instantiation-expressions","sortIndex":1,"hash":"c903f481ace67710247bb28266567ab8","compilerSettings":{"ts":"4.7.3"}},{"path":["JavaScript","External APIs"],"title":"TypeScript with Deno","name":"TypeScript with Deno.ts","lang":"en","id":"typescript-with-deno","sortIndex":3,"hash":"a96b99b656118ea0e5934b6d5928d684"},{"path":["JavaScript","External APIs"],"title":"TypeScript with Node","name":"TypeScript with Node.js","lang":"ko","id":"typescript-with-node","sortIndex":3,"hash":"f2478f4163d34df91b5779a0230fa7ee"},{"path":["JavaScript","External APIs"],"title":"TypeScript with React","name":"TypeScript with React.tsx","lang":"ko","id":"typescript-with-react","sortIndex":2,"hash":"da68c67aff4f9c0bcbebe6657965ecba","compilerSettings":{"jsx":2,"esModuleInterop":true}},{"path":["JavaScript","External APIs"],"title":"TypeScript with Web","name":"TypeScript with Web.js","lang":"ko","id":"typescript-with-web","sortIndex":1,"hash":"d1b8b71ad18e395dad1410648f69645a"},{"path":["JavaScript","External APIs"],"title":"TypeScript with WebGL","name":"TypeScript with WebGL.js","lang":"en","id":"typescript-with-webgl","sortIndex":5,"hash":"f7b964a6f0211592d843943a016b67aa"},{"path":["JavaScript","Functions with JavaScript"],"title":"Function Chaining","name":"Function Chaining.ts","lang":"ko","id":"function-chaining","sortIndex":2,"hash":"ede7f3f32e0265a47503410c1843f152","compilerSettings":{"esModuleInterop":true}},{"path":["JavaScript","Functions with JavaScript"],"title":"Generic Functions","name":"Generic Functions.ts","lang":"ko","id":"generic-functions","sortIndex":1,"hash":"d3ab59352e6e49592a17288a7e77385b","compilerSettings":{}},{"path":["JavaScript","Functions with JavaScript"],"title":"Typing Functions","name":"Typing Functions.ts","lang":"ko","id":"typing-functions","sortIndex":1,"hash":"ae1228471e11216d521ad6f72fe06fc8","compilerSettings":{}},{"path":["JavaScript","Helping with JavaScript"],"title":"Errors","name":"Errors.ts","lang":"ko","id":"errors","sortIndex":3,"hash":"2fd38536eb37cbbd0938356f7ec30dbb"},{"path":["JavaScript","Helping with JavaScript"],"title":"Quick Fixes","name":"Quick Fixes.ts","lang":"ko","id":"quick-fixes","sortIndex":1,"hash":"f0001ba6e565e7f62efee0fd06100056","compilerSettings":{}},{"path":["JavaScript","JavaScript Essentials"],"title":"Code Flow","name":"Code Flow.ts","lang":"ko","id":"code-flow","sortIndex":3,"hash":"ad1192a5ad9bc36b5059b7f92560032d","compilerSettings":{"strictNullChecks":true}},{"path":["JavaScript","JavaScript Essentials"],"title":"Functions","name":"Functions.ts","lang":"ko","id":"functions","sortIndex":2,"hash":"8dcca7d72b80b99c8c53fbdfe72b5e27","compilerSettings":{"noImplicitAny":false}},{"path":["JavaScript","JavaScript Essentials"],"title":"Hello World","name":"Hello World.ts","lang":"ko","id":"hello-world","sortIndex":1,"hash":"a84f5d234e35d71c6c3d0875137c59c2","compilerSettings":{"target":1}},{"path":["JavaScript","JavaScript Essentials"],"title":"Objects and Arrays","name":"Objects and Arrays.ts","lang":"ko","id":"objects-and-arrays","sortIndex":1,"hash":"4dfb2f9c6b7555807c22881f76c04123","compilerSettings":{"strict":false}},{"path":["JavaScript","Modern JavaScript"],"title":"Async Await","name":"Async Await.ts","lang":"ko","id":"async-await","sortIndex":1,"hash":"9f5caa9f54377629e8dca8b4702865ac"},{"path":["JavaScript","Modern JavaScript"],"title":"Immutability","name":"Immutability.ts","lang":"ko","id":"immutability","sortIndex":1,"hash":"14504f87d2d957d05adb4315a799b394","compilerSettings":{}},{"path":["JavaScript","Modern JavaScript"],"title":"Import Export","name":"Import Export.ts","lang":"ko","id":"import-export","sortIndex":1,"hash":"48dc02c3d72128b6d52a2c2ca4321154"},{"path":["JavaScript","Modern JavaScript"],"title":"JSDoc Support","name":"JSDoc Support.js","lang":"en","id":"jsdoc-support","sortIndex":3,"hash":"6d49c5c5529742c4e79cd356aa20da28"},{"path":["JavaScript","Working With Classes"],"title":"Classes 101","name":"Classes 101.ts","lang":"ko","id":"classes-101","sortIndex":1,"hash":"34093c261ea4de315bddd5f7a16f8e84"},{"path":["JavaScript","Working With Classes"],"title":"Generic Classes","name":"Generic Classes.ts","lang":"ko","id":"generic-classes","sortIndex":3,"hash":"1e33bf7abb874b0f4a128ddbbb443a72"},{"path":["JavaScript","Working With Classes"],"title":"Mixins","name":"Mixins.ts","lang":"ko","id":"mixins","sortIndex":4,"hash":"2b9bdc4c097a21033cd4840a9ee00cf3"},{"path":["JavaScript","Working With Classes"],"title":"This","name":"This.ts","lang":"en","id":"this","sortIndex":2,"hash":"591560f285cca99ba2fbabe023d39b1d"},{"path":["Playground","Config"],"title":"JavaScript Playgrounds","name":"JavaScript Playgrounds.js","lang":"ko","id":"javascript-playgrounds","sortIndex":3,"hash":"2e2d67222f3da5adbd5cec3c47c19d84"},{"path":["Playground","Config"],"title":"New Compiler Defaults","name":"New Compiler Defaults.ts","lang":"en","id":"new-compiler-defaults","sortIndex":1,"hash":"f3473b83d37581743fa71313d56624d7"},{"path":["Playground","Language"],"title":"Automatic Type Acquisition","name":"Automatic Type Acquisition.ts","lang":"en","id":"automatic-type-acquisition","sortIndex":1,"hash":"f1000ade89e47d459fc53029b59cb844","compilerSettings":{}},{"path":["Playground","Language"],"title":"Fixits","name":"Fixits.ts","lang":"ko","id":"fixits","sortIndex":1,"hash":"20dde8a6fbbe9753928d1eb13e14a152","compilerSettings":{}},{"path":["Playground","Tooling"],"title":"Mobile Support","name":"Mobile Support.ts","lang":"ko","id":"mobile-support","sortIndex":99,"hash":"40e95228ae685845eb5e48cb788ebe0d"},{"path":["Playground","Tooling"],"title":"Sharable URLs","name":"Sharable URLs.ts","lang":"en","id":"sharable-urls","sortIndex":1,"hash":"14ce23fb4c12857c8bdb0ef876400428"},{"path":["Playground","Tooling"],"title":"TypeScript Versions","name":"TypeScript Versions.ts","lang":"ko","id":"typescript-versions","sortIndex":1,"hash":"7be6fb72fee4362e62dffcded7861840","compilerSettings":{}},{"path":["TypeScript","Language"],"title":"Soundness","name":"Soundness.ts","lang":"en","id":"soundness","sortIndex":1,"hash":"a0d223482c2c720af6527143102483a1","compilerSettings":{"strictFunctionTypes":false}},{"path":["TypeScript","Language"],"title":"Structural Typing","name":"Structural Typing.ts","lang":"ko","id":"structural-typing","sortIndex":1,"hash":"413d5c139327200e98189254f35b9f23","compilerSettings":{}},{"path":["TypeScript","Language"],"title":"Type Guards","name":"Type Guards.ts","lang":"ko","id":"type-guards","sortIndex":1,"hash":"f2df86c100339af2f3892326bb76040d","compilerSettings":{}},{"path":["TypeScript","Language"],"title":"Type Widening and Narrowing","name":"Type Widening and Narrowing.ts","lang":"en","id":"type-widening-and-narrowing","sortIndex":1,"hash":"11d2f4b0e4029906aefc31649152bcc6","compilerSettings":{}},{"path":["TypeScript","Language Extensions"],"title":"Enums","name":"Enums.ts","lang":"ko","id":"enums","sortIndex":1,"hash":"08a325d7a256160d06bcea994823adc2","compilerSettings":{}},{"path":["TypeScript","Language Extensions"],"title":"Nominal Typing","name":"Nominal Typing.ts","lang":"ko","id":"nominal-typing","sortIndex":1,"hash":"d5c514d96a6e5ff2bd7e1be2246f4f43","compilerSettings":{}},{"path":["TypeScript","Language Extensions"],"title":"Types vs Interfaces","name":"Types vs Interfaces.ts","lang":"ko","id":"types-vs-interfaces","sortIndex":1,"hash":"72c7f45ab2d864fa37e357a03f1ae75d","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Conditional Types","name":"Conditional Types.ts","lang":"ko","id":"conditional-types","sortIndex":1,"hash":"631dd94a5eff2be46417439bb6ae2aa0","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Discriminate Types","name":"Discriminate Types.ts","lang":"ko","id":"discriminate-types","sortIndex":1,"hash":"3cfdcd851135f1786cc25e05b15ea347","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Indexed Types","name":"Indexed Types.ts","lang":"ko","id":"indexed-types","sortIndex":1,"hash":"684d8fc3da1818982fe5a848311c0344","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Mapped Types","name":"Mapped Types.ts","lang":"ko","id":"mapped-types","sortIndex":1,"hash":"fdab134ae5a24853ca5e77041e7c2418","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Any","name":"Any.ts","lang":"ko","id":"any","sortIndex":1,"hash":"ceaab19ff2105c3d2fcb2668a0080969","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Literals","name":"Literals.ts","lang":"ko","id":"literals","sortIndex":1,"hash":"8bb3412235d33f708ce8db0f4ee5c682","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Union and Intersection Types","name":"Union and Intersection Types.ts","lang":"ko","id":"union-and-intersection-types","sortIndex":1,"hash":"cf6fc031fa9bf348f6eac87ffe327365","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Unknown and Never","name":"Unknown and Never.ts","lang":"ko","id":"unknown-and-never","sortIndex":1,"hash":"2e2a7cad1b858502f6d957445a977aad","compilerSettings":{}},{"path":["TypeScript","Type Primitives"],"title":"Built-in Utility Types","name":"Built-in Utility Types.ts","lang":"ko","id":"built-in-utility-types","sortIndex":3,"hash":"6bf8cf13f8cc3a95f1d1aa443bb49109","compilerSettings":{"strictNullChecks":true}},{"path":["TypeScript","Type Primitives"],"title":"Nullable Types","name":"Nullable Types.ts","lang":"ko","id":"nullable-types","sortIndex":3,"hash":"798d6d47fdc1a632a8c5d43173beaec1","compilerSettings":{"strictNullChecks":false}},{"path":["TypeScript","Type Primitives"],"title":"Tuples","name":"Tuples.ts","lang":"ko","id":"tuples","sortIndex":1,"hash":"248259affd680dbe9d63454216d63647","compilerSettings":{}}]},"optionsSummary":[{"id":"files","display":"Files","oneliner":"<p>Include a set list of files, does not support globs</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"extends","display":"Extends","oneliner":"<p>Specify one or more path or node module references to base configuration files from which settings are inherited.</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"include","display":"Include","oneliner":"<p>Specifies a list of glob patterns that match files to be included in compilation</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"exclude","display":"Exclude","oneliner":"<p>Filters results from the <code>include</code> option.</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"references","display":"References","oneliner":"<p>Specify an array of objects that specify paths for projects. Used in project references.</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"allowUnreachableCode","display":"Allow Unreachable Code","oneliner":"<p>Disable error reporting for unreachable code.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"allowUnusedLabels","display":"Allow Unused Labels","oneliner":"<p>Disable error reporting for unused labels.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"alwaysStrict","display":"Always Strict","oneliner":"<p>Ensure 'use strict' is always emitted</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"exactOptionalPropertyTypes","display":"Exact Optional Property Types","oneliner":"<p>Interpret optional property types as written, rather than adding <code>undefined</code>.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noFallthroughCasesInSwitch","display":"No Fallthrough Cases In Switch","oneliner":"<p>Enable error reporting for fallthrough cases in switch statements.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitAny","display":"No Implicit Any","oneliner":"<p>Avoid introducing anys inside your codebase when a type could be specified</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitOverride","display":"No Implicit Override","oneliner":"<p>Ensure overriding members in derived classes are marked with an override modifier.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitReturns","display":"No Implicit Returns","oneliner":"<p>Enable error reporting for codepaths that do not explicitly return in a function.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitThis","display":"No Implicit This","oneliner":"<p>Enable error reporting when <code>this</code> is given the type <code>any</code>.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noPropertyAccessFromIndexSignature","display":"No Property Access From Index Signature","oneliner":"<p>Enforces using indexed accessors for keys declared using an indexed type.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noUncheckedIndexedAccess","display":"No Unchecked Indexed Access","oneliner":"<p>Add <code>undefined</code> to a type when accessed using an index.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noUnusedLocals","display":"No Unused Locals","oneliner":"<p>Enable error reporting when local variables aren't read.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noUnusedParameters","display":"No Unused Parameters","oneliner":"<p>Raise an error when a function parameter isn't read.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strict","display":"Strict","oneliner":"<p>Enable all strict type checking options.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictBindCallApply","display":"Strict Bind Call Apply","oneliner":"<p>Check that the arguments for <code>bind</code>, <code>call</code>, and <code>apply</code> methods match the original function.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictFunctionTypes","display":"Strict Function Types","oneliner":"<p>When assigning functions, check to ensure parameters and the return values are subtype-compatible.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictNullChecks","display":"Strict Null Checks","oneliner":"<p>When type checking, take into account <code>null</code> and <code>undefined</code>.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictPropertyInitialization","display":"Strict Property Initialization","oneliner":"<p>Check for class properties that are declared but not set in the constructor.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"useUnknownInCatchVariables","display":"Use Unknown In Catch Variables","oneliner":"<p>Default catch clause variables as <code>unknown</code> instead of <code>any</code>.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"allowArbitraryExtensions","display":"Allow Arbitrary Extensions","oneliner":"<p>Enable importing files with any extension, provided a declaration file is present.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"allowImportingTsExtensions","display":"Allow Importing TS Extensions","oneliner":"<p>Allow imports to include TypeScript file extensions.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"allowUmdGlobalAccess","display":"Allow Umd Global Access","oneliner":"<p>Allow accessing UMD globals from modules.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"baseUrl","display":"Base Url","oneliner":"<p>Set a baseurl for relative module names</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"customConditions","display":"Custom Conditions","oneliner":"<p>Conditions to set in addition to the resolver-specific defaults when resolving imports.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"module","display":"Module","oneliner":"<p>Specify what module code is generated.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"moduleResolution","display":"Module Resolution","oneliner":"<p>Specify how TypeScript looks up a file from a given module specifier.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"moduleSuffixes","display":"Module Suffixes","oneliner":"<p>List of file name suffixes to search when resolving a module.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"noResolve","display":"No Resolve","oneliner":"<p>Disallow <code>import</code>s, <code>require</code>s or <code>&#x3C;reference></code>s from expanding the number of files TypeScript should add to a project.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"paths","display":"Paths","oneliner":"<p>A set of locations to look for imports in</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"resolveJsonModule","display":"Resolve JSON Module","oneliner":"<p>Enable importing .json files.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"resolvePackageJsonExports","display":"Resolve package.json Exports","oneliner":"<p>Use the package.json 'exports' field when resolving package imports.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"resolvePackageJsonImports","display":"Resolve package.json Imports","oneliner":"<p>Use the package.json 'imports' field when resolving imports.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"rootDir","display":"Root Dir","oneliner":"<p>Specify the root folder within your source files.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"rootDirs","display":"Root Dirs","oneliner":"<p>Allow multiple folders to be treated as one when resolving modules.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"typeRoots","display":"Type Roots","oneliner":"<p>Specify multiple folders that act like <code>./node_modules/@types</code>.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"types","display":"Types","oneliner":"<p>Specify type package names to be included without being referenced in a source file.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"declaration","display":"Declaration","oneliner":"<p>Generates .d.ts files from TypeScript and JavaScript files in your project.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"declarationDir","display":"Declaration Dir","oneliner":"<p>Specify the output directory for generated declaration files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"declarationMap","display":"Declaration Map","oneliner":"<p>Create sourcemaps for d.ts files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"downlevelIteration","display":"Downlevel Iteration","oneliner":"<p>Emit more compliant, but verbose and less performant JavaScript for iteration.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"emitBOM","display":"Emit BOM","oneliner":"<p>Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"emitDeclarationOnly","display":"Emit Declaration Only","oneliner":"<p>Only output d.ts files and not JavaScript files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"importHelpers","display":"Import Helpers","oneliner":"<p>Allow importing helper functions from tslib once per project, instead of including them per-file.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"importsNotUsedAsValues","display":"Imports Not Used As Values","oneliner":"<p>Specify emit/checking behavior for imports that are only used for types.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"inlineSourceMap","display":"Inline Source Map","oneliner":"<p>Include sourcemap files inside the emitted JavaScript.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"inlineSources","display":"Inline Sources","oneliner":"<p>Include source code in the sourcemaps inside the emitted JavaScript.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"mapRoot","display":"Map Root","oneliner":"<p>Specify the location where debugger should locate map files instead of generated locations.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"newLine","display":"New Line","oneliner":"<p>Set the newline character</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"noEmit","display":"No Emit","oneliner":"<p>Disable emitting files from a compilation.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"noEmitHelpers","display":"No Emit Helpers","oneliner":"<p>Disable generating custom helper functions like <code>__extends</code> in compiled output.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"noEmitOnError","display":"No Emit On Error","oneliner":"<p>Disable emitting files if any type checking errors are reported.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"outDir","display":"Out Dir","oneliner":"<p>Specify an output folder for all emitted files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"outFile","display":"Out File","oneliner":"<p>Specify a file that bundles all outputs into one JavaScript file. If <code>declaration</code> is true, also designates a file that bundles all .d.ts output.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"preserveConstEnums","display":"Preserve Const Enums","oneliner":"<p>Disable erasing <code>const enum</code> declarations in generated code.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"preserveValueImports","display":"Preserve Value Imports","oneliner":"<p>Preserve unused imported values in the JavaScript output that would otherwise be removed.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"removeComments","display":"Remove Comments","oneliner":"<p>Disable emitting comments.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"sourceMap","display":"Source Map","oneliner":"<p>Create source map files for emitted JavaScript files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"sourceRoot","display":"Source Root","oneliner":"<p>Sets the root path for debuggers to find the reference source code</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"stripInternal","display":"Strip Internal","oneliner":"<p>Disable emitting declarations that have <code>@internal</code> in their JSDoc comments.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"allowJs","display":"Allow JS","oneliner":"<p>Allow JavaScript files to be a part of your program. Use the <code>checkJS</code> option to get errors from these files.</p>\n","categoryID":"JavaScript_Support_6247","categoryDisplay":"JavaScript Support"},{"id":"checkJs","display":"Check JS","oneliner":"<p>Enable error reporting in type-checked JavaScript files.</p>\n","categoryID":"JavaScript_Support_6247","categoryDisplay":"JavaScript Support"},{"id":"maxNodeModuleJsDepth","display":"Max Node Module JS Depth","oneliner":"<p>Specify the maximum folder depth used for checking JavaScript files from <code>node_modules</code>. Only applicable with <a href=\"#allowJs\"><code>allowJs</code></a>.</p>\n","categoryID":"JavaScript_Support_6247","categoryDisplay":"JavaScript Support"},{"id":"disableSizeLimit","display":"Disable Size Limit","oneliner":"<p>Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server.</p>\n","categoryID":"Editor_Support_6249","categoryDisplay":"Editor Support"},{"id":"plugins","display":"Plugins","oneliner":"<p>Specify a list of language service plugins to include.</p>\n","categoryID":"Editor_Support_6249","categoryDisplay":"Editor Support"},{"id":"allowSyntheticDefaultImports","display":"Allow Synthetic Default Imports","oneliner":"<p>Allow 'import x from y' when a module doesn't have a default export.</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"esModuleInterop","display":"ES Module Interop","oneliner":"<p>Emit additional JavaScript to ease support for importing CommonJS modules. This enables <a href=\"#allowSyntheticDefaultImports\"><code>allowSyntheticDefaultImports</code></a> for type compatibility.</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"forceConsistentCasingInFileNames","display":"Force Consistent Casing In File Names","oneliner":"<p>Ensure that casing is correct in imports.</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"isolatedModules","display":"Isolated Modules","oneliner":"<p>Ensure that each file can be safely transpiled without relying on other imports.</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"preserveSymlinks","display":"Preserve Symlinks","oneliner":"<p>Disable resolving symlinks to their realpath. This correlates to the same flag in node.</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"verbatimModuleSyntax","display":"Verbatim Module Syntax","oneliner":"<p>Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting.</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"charset","display":"Charset","oneliner":"<p>Manually set the text encoding for reading files</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"keyofStringsOnly","display":"Keyof Strings Only","oneliner":"<p>Make keyof only return strings instead of string, numbers or symbols. Legacy option.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"noImplicitUseStrict","display":"No Implicit Use Strict","oneliner":"<p>Disable adding 'use strict' directives in emitted JavaScript files.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"noStrictGenericChecks","display":"No Strict Generic Checks","oneliner":"<p>Disable strict checking of generic signatures in function types.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"out","display":"Out","oneliner":"<p>Deprecated setting. Use <code>outFile</code> instead.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"suppressExcessPropertyErrors","display":"Suppress Excess Property Errors","oneliner":"<p>Disable reporting of excess property errors during the creation of object literals.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"suppressImplicitAnyIndexErrors","display":"Suppress Implicit Any Index Errors","oneliner":"<p>Suppress <a href=\"#noImplicitAny\"><code>noImplicitAny</code></a> errors when indexing objects that lack index signatures.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"emitDecoratorMetadata","display":"Emit Decorator Metadata","oneliner":"<p>Emit design-type metadata for decorated declarations in source files.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"experimentalDecorators","display":"Experimental Decorators","oneliner":"<p>Enable experimental support for TC39 stage 2 draft decorators.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsx","display":"JSX","oneliner":"<p>Specify what JSX code is generated.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsxFactory","display":"JSX Factory","oneliner":"<p>Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsxFragmentFactory","display":"jsxFragmentFactory","oneliner":"<p>Specify the JSX Fragment reference to use for fragements when targeting React JSX emit, e.g. 'React.Fragment' or 'Fragment'.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsxImportSource","display":"jsxImportSource","oneliner":"<p>Specify module specifier used to import the JSX factory functions when using <code>jsx: react-jsx*</code>.`</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"lib","display":"Lib","oneliner":"<p>A list of bundled library declaration files which describe the target runtime environment.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"moduleDetection","display":"Module Detection","oneliner":"<p>Specify what method is used to detect whether a file is a script or a module.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"noLib","display":"No Lib","oneliner":"<p>Disable including any library files, including the default lib.d.ts.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"reactNamespace","display":"React Namespace","oneliner":"<p>Specify the object invoked for <code>createElement</code>. This only applies when targeting <code>react</code> JSX emit.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"target","display":"Target","oneliner":"<p>Set the JavaScript language version for emitted JavaScript and include compatible library declarations.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"useDefineForClassFields","display":"Use Define For Class Fields","oneliner":"<p>Emit ECMAScript-standard-compliant class fields.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"diagnostics","display":"Diagnostics","oneliner":"<p>Output compiler performance information after building.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"explainFiles","display":"Explain Files","oneliner":"<p>Print files read during the compilation including why it was included.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"extendedDiagnostics","display":"Extended Diagnostics","oneliner":"<p>Output more detailed compiler performance information after building.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"generateCpuProfile","display":"Generate CPU Profile","oneliner":"<p>Emit a v8 CPU profile of the compiler run for debugging.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"listEmittedFiles","display":"List Emitted Files","oneliner":"<p>Print the names of emitted files after a compilation.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"listFiles","display":"List Files","oneliner":"<p>Print all of the files read during the compilation.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"traceResolution","display":"Trace Resolution","oneliner":"<p>Log paths used during the <code>moduleResolution</code> process.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"composite","display":"Composite","oneliner":"<p>Enable constraints that allow a TypeScript project to be used with project references.</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"disableReferencedProjectLoad","display":"Disable Referenced Project Load","oneliner":"<p>Reduce the number of projects loaded automatically by TypeScript.</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"disableSolutionSearching","display":"Disable Solution Searching","oneliner":"<p>Opt a project out of multi-project reference checking when editing.</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"disableSourceOfProjectReferenceRedirect","display":"Disable Source Project Reference Redirect","oneliner":"<p>Disable preferring source files instead of declaration files when referencing composite projects.</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"incremental","display":"Incremental","oneliner":"<p>Save .tsbuildinfo files to allow for incremental compilation of projects.</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"tsBuildInfoFile","display":"TS Build Info File","oneliner":"<p>The file to store <code>.tsbuildinfo</code> incremental build information in.</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"noErrorTruncation","display":"No Error Truncation","oneliner":"<p>Disable truncating types in error messages.</p>\n","categoryID":"Output_Formatting_6256","categoryDisplay":"Output Formatting"},{"id":"preserveWatchOutput","display":"Preserve Watch Output","oneliner":"<p>Disable wiping the console in watch mode.</p>\n","categoryID":"Output_Formatting_6256","categoryDisplay":"Output Formatting"},{"id":"pretty","display":"Pretty","oneliner":"<p>Enable color and formatting in TypeScript's output to make compiler errors easier to read.</p>\n","categoryID":"Output_Formatting_6256","categoryDisplay":"Output Formatting"},{"id":"skipDefaultLibCheck","display":"Skip Default Lib Check","oneliner":"<p>Skip type checking .d.ts files that are included with TypeScript.</p>\n","categoryID":"Completeness_6257","categoryDisplay":"Completeness"},{"id":"skipLibCheck","display":"Skip Lib Check","oneliner":"<p>Skip type checking all .d.ts files.</p>\n","categoryID":"Completeness_6257","categoryDisplay":"Completeness"},{"id":"assumeChangesOnlyAffectDirectDependencies","display":"Assume Changes Only Affect Direct Dependencies","oneliner":"<p>Have recompiles in projects that use <a href=\"#incremental\"><code>incremental</code></a> and <code>watch</code> mode assume that changes within a file will only affect files directly depending on it.</p>\n","categoryID":"Watch_and_Build_Modes_6250","categoryDisplay":"Watch Options"},{"id":"watchFile","display":"Watch File","oneliner":"<p>Specify how the TypeScript watch mode works.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"watchDirectory","display":"Watch Directory","oneliner":"<p>Specify how directories are watched on systems that lack recursive file-watching functionality.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"fallbackPolling","display":"Fallback Polling","oneliner":"<p>Specify what approach the watcher should use if the system runs out of native file watchers.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"synchronousWatchDirectory","display":"Synchronous Watch Directory","oneliner":"<p>Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"excludeDirectories","display":"Exclude Directories","oneliner":"<p>Remove a list of directories from the watch process.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"excludeFiles","display":"Exclude Files","oneliner":"<p>Remove a list of files from the watch mode's processing.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"enable","display":"Enable","oneliner":"<p>Disable the type acquisition for JavaScript projects.</p>\n","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"},{"id":"include","display":"Include","oneliner":"<p>Specify a list of modules which to acquire types for.</p>\n","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"},{"id":"exclude","display":"Exclude","oneliner":"<p>Specify a list of modules which to exclude from type acquisition.</p>\n","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"},{"id":"disableFilenameBasedTypeAcquisition","display":"Disable Filename Based Type Acquisition","oneliner":"<p>Disables inference for type acquisition by looking at filenames in a project.</p>\n","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"}],"playgroundHandbookTOC":{"docs":[{"type":"href","title":"Compiler Settings","href":"/_playground-handbook/compiler-settings.html"},{"type":"href","title":"Examples","href":"/_playground-handbook/examples.html"},{"type":"href","title":"JS + DTS sidebars","href":"/_playground-handbook/js---dts-sidebars.html"},{"type":"href","title":"Running Code","href":"/_playground-handbook/running-code.html"},{"type":"href","title":"Type Acquisition","href":"/_playground-handbook/type-acquisition.html"},{"type":"href","title":"Settings Panel","href":"/_playground-handbook/settings-panel.html"},{"type":"href","title":"Writing JavaScript","href":"/_playground-handbook/writing-javascript.html"},{"type":"href","title":"Writing DTS Files","href":"/_playground-handbook/writing-dts-files.html"},{"type":"href","title":"TypeScript Versions","href":"/_playground-handbook/typescript-versions.html"},{"type":"href","title":"URL Structure","href":"/_playground-handbook/url-structure.html"},{"type":"href","title":"Exporting Your Code","href":"/_playground-handbook/exporting-your-code.html"},{"type":"href","title":"Twoslash Annotations","href":"/_playground-handbook/twoslash-annotations.html"}]}}},"staticQueryHashes":[]}