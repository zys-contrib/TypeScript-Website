{"componentChunkName":"component---src-templates-play-tsx","path":"/zh/play","result":{"pageContext":{"lang":"zh","examplesTOC":{"sections":[{"name":"JavaScript","id":"JavaScript","subtitle":"了解 TypeScript 如何使用最少的附加语法改善 JavaScript 的日常使用。"},{"name":"TypeScript","id":"TypeScript","subtitle":"探索 TypeScript 如何扩展 JavaScript，使其更安全，更便利。"},{"name":"3.7","id":"3.7","subtitle":"查看<a href='https://devblogs.microsoft.com/typescript/announcing-typescript-3-7/'>版本更新说明</a>。"},{"name":"3.8","id":"3.8","subtitle":"查看<a href='https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/'>版本更新说明</a>。"},{"name":"演练场 V3","id":"演练场","subtitle":"了解演练场有哪些变化。"}],"sortedSubSections":["JavaScript Essentials","Functions with JavaScript","Working With Classes","Modern JavaScript","External APIs","Helping with JavaScript","Primitives","Type Primitives","Meta-Types","Language","Language Extensions","Syntax and Messaging","Types and Code Flow","Fixits","Config","Tooling","Breaking Changes","JSDoc Improvements","New JS Features","New TS Features","New Checks","Template Literals"],"examples":[{"path":["3-7","Fixits"],"title":"Big number literals","name":"Big number literals.ts","lang":"en","id":"big-number-literals","sortIndex":1,"hash":"825910677db5ef34b5903dbbe9633e95","compilerSettings":{"target":99}},{"path":["3-7","Fixits"],"title":"Const to let","name":"Const to let.ts","lang":"en","id":"const-to-let","sortIndex":1,"hash":"6f3a80385d433628304c9fc65e7d3fe7","compilerSettings":{}},{"path":["3-7","Fixits"],"title":"Infer From Usage Changes","name":"Infer From Usage Changes.ts","lang":"en","id":"infer-from-usage-changes","sortIndex":2,"hash":"7c0ae1958119aadcef7cef9a9318d119","compilerSettings":{"noImplicitAny":false}},{"path":["3-7","Syntax and Messaging"],"title":"Flattened Error Reporting","name":"Flattened Error Reporting.ts","lang":"en","id":"flattened-error-reporting","sortIndex":3,"hash":"006c70a8a961fdfa4ac9d9982ac04448","compilerSettings":{}},{"path":["3-7","Syntax and Messaging"],"title":"Nullish Coalescing","name":"Nullish Coalescing.ts","lang":"en","id":"nullish-coalescing","sortIndex":2,"hash":"7baa4a458be040137e2934cf73908a98","compilerSettings":{}},{"path":["3-7","Syntax and Messaging"],"title":"Optional Chaining","name":"Optional Chaining.ts","lang":"en","id":"optional-chaining","sortIndex":1,"hash":"7c78973f566aa6991af927e05a81c805","compilerSettings":{}},{"path":["3-7","Types and Code Flow"],"title":"Assertion Functions","name":"Assertion Functions.ts","lang":"en","id":"assertion-functions","sortIndex":1,"hash":"9ceb6ca614f1b90260ca8f1d450d719e","compilerSettings":{}},{"path":["3-7","Types and Code Flow"],"title":"Recursive Type References","name":"Recursive Type References.ts","lang":"en","id":"recursive-type-references","sortIndex":2,"hash":"f0d64132c66dc3e0476b836a8b299357","compilerSettings":{}},{"path":["3-7","Types and Code Flow"],"title":"Uncalled Function Checks","name":"Uncalled Function Checks.ts","lang":"en","id":"uncalled-function-checks","sortIndex":1,"hash":"5648a1d14ed70f51ae8129647b8ef8a8","compilerSettings":{}},{"path":["3-8","Breaking Changes"],"title":"Checking Unions with Index Signatures","name":"Checking Unions with Index Signatures.ts","lang":"en","id":"checking-unions-with-index-signatures","sortIndex":1,"hash":"5e5faf5d8a38e450cdc1f8216f446dc6","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","JSDoc Improvements"],"title":"Accessibility Modifiers","name":"Accessibility Modifiers.js","lang":"en","id":"accessibility-modifiers","sortIndex":1,"hash":"40ea235651f4c43b41af4795a0fce426","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","Syntax and Messaging"],"title":"Export Modules From","name":"Export Modules From.ts","lang":"en","id":"export-modules-from","sortIndex":1,"hash":"0cec3d12aa959014ad7f2deab11aceba","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","Syntax and Messaging"],"title":"Private Class Fields","name":"Private Class Fields.ts","lang":"en","id":"private-class-fields","sortIndex":1,"hash":"007b7908b25582edf359840a8b65310f","compilerSettings":{"ts":"3.8.3"}},{"path":["3-8","Syntax and Messaging"],"title":"Type Imports","name":"Type Imports.tsx","lang":"en","id":"type-imports","sortIndex":1,"hash":"2b94c6b3fc93f07c385f87d69a6c4058","compilerSettings":{"ts":"3.8.3"}},{"path":["4-0","New Checks"],"title":"Class Constructor Code Flow","name":"Class Constructor Code Flow.ts","lang":"en","id":"class-constructor-code-flow","sortIndex":1,"hash":"1c0fac9b9493327356874293a6a56a45","compilerSettings":{"ts":"4.0.2"}},{"path":["4-0","New JS Features"],"title":"JSDoc Deprecated","name":"JSDoc Deprecated.ts","lang":"en","id":"jsdoc-deprecated","sortIndex":1,"hash":"882205414e2f4236e307a7e6b6af2780","compilerSettings":{}},{"path":["4-0","New JS Features"],"title":"Logical Operators and Assignment","name":"Logical Operators and Assignment.ts","lang":"en","id":"logical-operators-and-assignment","sortIndex":1,"hash":"0d7c067d12a3dc12a1935ef0cc7a2919","compilerSettings":{}},{"path":["4-0","New JS Features"],"title":"Nullish Coalescing","name":"Nullish Coalescing.ts","lang":"en","id":"nullish-coalescing","sortIndex":1,"hash":"25d21bca71dcdcef434b97f0a8b68689","compilerSettings":{}},{"path":["4-0","New TS Features"],"title":"Named Tuples","name":"Named Tuples.ts","lang":"en","id":"named-tuples","sortIndex":1,"hash":"9f5ff56c7665387a6bf8d43c31915a7c","compilerSettings":{"ts":"4.0.2"}},{"path":["4-0","New TS Features"],"title":"Unknown in Catch","name":"Unknown in Catch.ts","lang":"en","id":"unknown-in-catch","sortIndex":1,"hash":"471a3cebfb4ef0184df4a25025fa234e","compilerSettings":{"ts":"4.0.2"}},{"path":["4-0","New TS Features"],"title":"Variadic Tuples","name":"Variadic Tuples.ts","lang":"en","id":"variadic-tuples","sortIndex":1,"hash":"42ba555f65d8d64f8853e5b7ca5b53d7","compilerSettings":{"ts":"4.0.2"}},{"path":["4-1","New JS Features"],"title":"New JSX Support","name":"New JSX Support.tsx","lang":"en","id":"new-jsx-support","sortIndex":1,"hash":"1873593d52bf3b988576196ba34a67f9","compilerSettings":{"ts":"4.1.0-dev.20201028","jsx":4}},{"path":["4-1","New JS Features"],"title":"See in JSDoc","name":"See in JSDoc.ts","lang":"en","id":"see-in-jsdoc","sortIndex":1,"hash":"6fd3a8d713ba5c129c7c04243cd15548","compilerSettings":{"ts":"4.1.0-beta"}},{"path":["4-1","Template Literals"],"title":"Intro to Template Literals","name":"Intro to Template Literals.ts","lang":"en","id":"intro-to-template-literals","sortIndex":1,"hash":"a702cc4f34f842c937b6a5953961b009","compilerSettings":{"ts":"4.1.0-dev.20201028"}},{"path":["4-1","Template Literals"],"title":"Mapped Types with Template Literals","name":"Mapped Types with Template Literals.ts","lang":"en","id":"mapped-types-with-template-literals","sortIndex":1,"hash":"f2df1e6ff682803cda7d3133efdb7f58","compilerSettings":{"ts":"4.1.0-dev.20201028"}},{"path":["4-1","Template Literals"],"title":"String Manipulation with Template Literals","name":"String Manipulation with Template Literals.ts","lang":"en","id":"string-manipulation-with-template-literals","sortIndex":1,"hash":"5127bb5d7c14895caff3cc39f1fd4b85","compilerSettings":{"ts":"4.1.0-dev.20201028"}},{"path":["4-2","Fixits"],"title":"Create Function from Call","name":"Create Function from Call.ts","lang":"en","id":"create-function-from-call","sortIndex":1,"hash":"487a42e067cd980de0375e4000d8ecea","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Abstract Class Constructors","name":"Abstract Class Constructors.ts","lang":"en","id":"abstract-class-constructors","sortIndex":1,"hash":"cc2799185834d0027e8e6c6462956408","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Rest Elements in Tuple Types","name":"Rest Elements in Tuple Types.ts","lang":"en","id":"rest-elements-in-tuple-types","sortIndex":1,"hash":"f0d75cf9274d37d40b24c6c6935b067a","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Smarter Type Alias Preservation","name":"Smarter Type Alias Preservation.ts","lang":"en","id":"smarter-type-alias-preservation","sortIndex":1,"hash":"9dc869de5445f8fae8b4762126a539bf","compilerSettings":{"ts":"4.2.0-beta"}},{"path":["4-2","New TS Features"],"title":"Use Index Accessors for Index Signatures","name":"Use Index Accessors for Index Signatures.ts","lang":"en","id":"use-index-accessors-for-index-signatures","sortIndex":1,"hash":"b17655a57ea03e05cc398249afe4dc4f","compilerSettings":{"ts":"4.2.0-beta","noPropertyAccessFromIndexSignature":true}},{"path":["4-3","New TS Features"],"title":"No Implicit Class Overrides","name":"No Implicit Class Overrides.ts","lang":"en","id":"no-implicit-class-overrides","sortIndex":1,"hash":"78f3f927135716b19f8eab5b78103724","compilerSettings":{"ts":"4.3.4"}},{"path":["4-3","New TS Features"],"title":"Separate Write vs Read on Properties","name":"Separate Write vs Read on Properties.ts","lang":"en","id":"separate-write-vs-read-on-properties","sortIndex":1,"hash":"2a0d83e3767babac56fa73db8c61d7eb","compilerSettings":{"ts":"4.3.4"}},{"path":["4-4","New JS Features"],"title":"Control Flow Improvements","name":"Control Flow Improvements.ts","lang":"en","id":"control-flow-improvements","sortIndex":1,"hash":"89e84eae89ff824720113b149ede2651","compilerSettings":{"ts":"4.4.2"}},{"path":["4-4","New JS Features"],"title":"Errors for High Confidence Errors","name":"Errors for High Confidence Errors.ts","lang":"en","id":"errors-for-high-confidence-errors","sortIndex":1,"hash":"5f43cace57d96a03e56cf4106a2b5401","compilerSettings":{"ts":"4.4.2","useJavaScript":true,"checkJS":false}},{"path":["4-4","New TS Features"],"title":"Exact Optional Properties","name":"Exact Optional Properties.ts","lang":"en","id":"exact-optional-properties","sortIndex":1,"hash":"30de307ca7a47ba3e17c79aed44bdfec","compilerSettings":{"ts":"4.4.2","exactOptionalPropertyTypes":true}},{"path":["4-4","New TS Features"],"title":"Use unknown for Catch Variables","name":"Use unknown for Catch Variables.ts","lang":"en","id":"use-unknown-for-catch-variables","sortIndex":1,"hash":"4dd1acc37f8381c89a65e3a73a8e599d","compilerSettings":{"ts":"4.4.2","useUnknownInCatchVariables":true}},{"path":["4-7","New JS Features"],"title":"Control Flow Improvements","name":"Control Flow Improvements.ts","lang":"en","id":"control-flow-improvements","sortIndex":1,"hash":"59e02fff9cab1ee8a96b1f089f430ba1","compilerSettings":{"ts":"4.7.3"}},{"path":["4-7","New JS Features"],"title":"Improved Function Inference","name":"Improved Function Inference.ts","lang":"en","id":"improved-function-inference","sortIndex":1,"hash":"1ce96554ee19d8e6fc300a108aa45967","compilerSettings":{"ts":"4.7.3"}},{"path":["4-7","New TS Features"],"title":"Extends Constraints","name":"Extends Constraints.ts","lang":"en","id":"extends-constraints","sortIndex":1,"hash":"7a48f3d72bcc90e338ebc3efdec1a247","compilerSettings":{"ts":"4.7.3"}},{"path":["4-7","New TS Features"],"title":"Instantiation Expressions","name":"Instantiation Expressions.ts","lang":"en","id":"instantiation-expressions","sortIndex":1,"hash":"c903f481ace67710247bb28266567ab8","compilerSettings":{"ts":"4.7.3"}},{"path":["JavaScript","External APIs"],"title":"TypeScript with Deno","name":"TypeScript with Deno.ts","lang":"zh","id":"typescript-with-deno","sortIndex":3,"hash":"cf1be3553fcc2ebbe355b004ed9b6377"},{"path":["JavaScript","External APIs"],"title":"TypeScript with Node","name":"TypeScript with Node.js","lang":"zh","id":"typescript-with-node","sortIndex":3,"hash":"6ca81732e9a9f1647f4d321f7cfa2768"},{"path":["JavaScript","External APIs"],"title":"TypeScript with React","name":"TypeScript with React.tsx","lang":"zh","id":"typescript-with-react","sortIndex":2,"hash":"2bd3389fddfa772e3e45fdfdc0d8a855","compilerSettings":{"jsx":2,"esModuleInterop":true}},{"path":["JavaScript","External APIs"],"title":"TypeScript with Web","name":"TypeScript with Web.js","lang":"zh","id":"typescript-with-web","sortIndex":1,"hash":"c00d2e973aa902a0d4d6ae6332cfa74f"},{"path":["JavaScript","External APIs"],"title":"TypeScript with WebGL","name":"TypeScript with WebGL.js","lang":"zh","id":"typescript-with-webgl","sortIndex":5,"hash":"35fef308d9e901758c0e51bb68e30ff4"},{"path":["JavaScript","Functions with JavaScript"],"title":"Function Chaining","name":"Function Chaining.ts","lang":"zh","id":"function-chaining","sortIndex":2,"hash":"ac5461d508e31a2959e437e4bdb7a8a7","compilerSettings":{"esModuleInterop":true}},{"path":["JavaScript","Functions with JavaScript"],"title":"Generic Functions","name":"Generic Functions.ts","lang":"zh","id":"generic-functions","sortIndex":1,"hash":"f52f6ca1c8701c2fb7f50ed012e824fd","compilerSettings":{}},{"path":["JavaScript","Functions with JavaScript"],"title":"Typing Functions","name":"Typing Functions.ts","lang":"zh","id":"typing-functions","sortIndex":1,"hash":"82f5de90611c8f31179a5ebc64c33019","compilerSettings":{}},{"path":["JavaScript","Helping with JavaScript"],"title":"Errors","name":"Errors.ts","lang":"zh","id":"errors","sortIndex":3,"hash":"c035c194ebeb9bad4dbdb4afb7d97509"},{"path":["JavaScript","Helping with JavaScript"],"title":"Quick Fixes","name":"Quick Fixes.ts","lang":"zh","id":"quick-fixes","sortIndex":1,"hash":"c16883de9eb356fce8a140fc74d05b55","compilerSettings":{}},{"path":["JavaScript","JavaScript Essentials"],"title":"Code Flow","name":"Code Flow.ts","lang":"zh","id":"code-flow","sortIndex":3,"hash":"4f861eaf241545f22de77816dccb7960","compilerSettings":{"strictNullChecks":true}},{"path":["JavaScript","JavaScript Essentials"],"title":"Functions","name":"Functions.ts","lang":"zh","id":"functions","sortIndex":2,"hash":"3223cb7c0d624f31d7fb6a512815c20c","compilerSettings":{"noImplicitAny":false}},{"path":["JavaScript","JavaScript Essentials"],"title":"Hello World","name":"Hello World.ts","lang":"zh","id":"hello-world","sortIndex":1,"hash":"0d252e5dd842b5df44ddc06fbfd5a82d","compilerSettings":{"target":1}},{"path":["JavaScript","JavaScript Essentials"],"title":"Objects and Arrays","name":"Objects and Arrays.ts","lang":"zh","id":"objects-and-arrays","sortIndex":1,"hash":"f3c13d084dbff3771489edaecf0487a7","compilerSettings":{"strict":false}},{"path":["JavaScript","Modern JavaScript"],"title":"Async Await","name":"Async Await.ts","lang":"zh","id":"async-await","sortIndex":1,"hash":"8c16aed6348f1978043ed6ac564cec08"},{"path":["JavaScript","Modern JavaScript"],"title":"Immutability","name":"Immutability.ts","lang":"zh","id":"immutability","sortIndex":1,"hash":"189b058dc3dc2e59fe8811f22b7b268b","compilerSettings":{}},{"path":["JavaScript","Modern JavaScript"],"title":"Import Export","name":"Import Export.ts","lang":"zh","id":"import-export","sortIndex":1,"hash":"e53ea16355166b5b9442d94ddd26f34c"},{"path":["JavaScript","Modern JavaScript"],"title":"JSDoc Support","name":"JSDoc Support.js","lang":"zh","id":"jsdoc-support","sortIndex":3,"hash":"90c201bf9e4d464e40542ca59be24749"},{"path":["JavaScript","Working With Classes"],"title":"Classes 101","name":"Classes 101.ts","lang":"zh","id":"classes-101","sortIndex":1,"hash":"ac86ad60317166e7b74aa4d37088463d"},{"path":["JavaScript","Working With Classes"],"title":"Generic Classes","name":"Generic Classes.ts","lang":"zh","id":"generic-classes","sortIndex":3,"hash":"f3a3718df9606d73c481cb92bf5202be"},{"path":["JavaScript","Working With Classes"],"title":"Mixins","name":"Mixins.ts","lang":"zh","id":"mixins","sortIndex":4,"hash":"bdcc9ed0f6d90241fa3da64238c93e8a"},{"path":["JavaScript","Working With Classes"],"title":"This","name":"This.ts","lang":"zh","id":"this","sortIndex":2,"hash":"bafd45761c695902db664ac2b386af14"},{"path":["Playground","Config"],"title":"JavaScript Playgrounds","name":"JavaScript Playgrounds.js","lang":"zh","id":"javascript-playgrounds","sortIndex":3,"hash":"5e34d5d371c29329f816ebb302695b21"},{"path":["Playground","Config"],"title":"New Compiler Defaults","name":"New Compiler Defaults.ts","lang":"zh","id":"new-compiler-defaults","sortIndex":1,"hash":"464bae792b3c40dcdda5d38b7d38549f"},{"path":["Playground","Language"],"title":"Automatic Type Acquisition","name":"Automatic Type Acquisition.ts","lang":"zh","id":"automatic-type-acquisition","sortIndex":1,"hash":"c147ba3aa57d351466e6f35e9e256921","compilerSettings":{}},{"path":["Playground","Language"],"title":"Fixits","name":"Fixits.ts","lang":"zh","id":"fixits","sortIndex":1,"hash":"f2a1d1f8e61126c57a83ebd56cf46698","compilerSettings":{}},{"path":["Playground","Tooling"],"title":"Mobile Support","name":"Mobile Support.ts","lang":"zh","id":"mobile-support","sortIndex":99,"hash":"8121d1fa5011005cb1048954de43bc9f"},{"path":["Playground","Tooling"],"title":"Sharable URLs","name":"Sharable URLs.ts","lang":"zh","id":"sharable-urls","sortIndex":1,"hash":"0b09b6b02ab700f68596da229003c837"},{"path":["Playground","Tooling"],"title":"TypeScript Versions","name":"TypeScript Versions.ts","lang":"zh","id":"typescript-versions","sortIndex":1,"hash":"0ef13318d16f29282cce5c525772fbf6","compilerSettings":{}},{"path":["TypeScript","Language"],"title":"Soundness","name":"Soundness.ts","lang":"zh","id":"soundness","sortIndex":1,"hash":"573cbc8d95e3a7bb3b117b24bb6107ff","compilerSettings":{"strictFunctionTypes":false}},{"path":["TypeScript","Language"],"title":"Structural Typing","name":"Structural Typing.ts","lang":"zh","id":"structural-typing","sortIndex":1,"hash":"c810151cdd3d51e3ade5d0e4dd5ce179","compilerSettings":{}},{"path":["TypeScript","Language"],"title":"Type Guards","name":"Type Guards.ts","lang":"zh","id":"type-guards","sortIndex":1,"hash":"e0d52c21ad253425d51e71525879af63","compilerSettings":{}},{"path":["TypeScript","Language"],"title":"Type Widening and Narrowing","name":"Type Widening and Narrowing.ts","lang":"zh","id":"type-widening-and-narrowing","sortIndex":1,"hash":"2054cca2bd9f147f0858aaf758ff625a","compilerSettings":{}},{"path":["TypeScript","Language Extensions"],"title":"Enums","name":"Enums.ts","lang":"zh","id":"enums","sortIndex":1,"hash":"c484a87b13d088e505af603531eabc3c","compilerSettings":{}},{"path":["TypeScript","Language Extensions"],"title":"Nominal Typing","name":"Nominal Typing.ts","lang":"zh","id":"nominal-typing","sortIndex":1,"hash":"92a692eed1fbac03c0089fe67fe1f96b","compilerSettings":{}},{"path":["TypeScript","Language Extensions"],"title":"Types vs Interfaces","name":"Types vs Interfaces.ts","lang":"zh","id":"types-vs-interfaces","sortIndex":1,"hash":"d3f7a877e0dfcc8ad932a6bcd4bf6735","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Conditional Types","name":"Conditional Types.ts","lang":"zh","id":"conditional-types","sortIndex":1,"hash":"ecbb517e2941fada453bcdc13046b84b","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Discriminate Types","name":"Discriminate Types.ts","lang":"zh","id":"discriminate-types","sortIndex":1,"hash":"1496a49d215991ab6a21a0d21a209409","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Indexed Types","name":"Indexed Types.ts","lang":"zh","id":"indexed-types","sortIndex":1,"hash":"05068234335e2645d33a26c24d4545a5","compilerSettings":{}},{"path":["TypeScript","Meta-Types"],"title":"Mapped Types","name":"Mapped Types.ts","lang":"zh","id":"mapped-types","sortIndex":1,"hash":"ae4d6f7b2025fc0b108bcd35494c6115","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Any","name":"Any.ts","lang":"zh","id":"any","sortIndex":1,"hash":"efb5118a3f84d6f41ead925286a9e98c","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Literals","name":"Literals.ts","lang":"zh","id":"literals","sortIndex":1,"hash":"d1c3f1b40d916f97c2bf0dd47127dab9","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Union and Intersection Types","name":"Union and Intersection Types.ts","lang":"zh","id":"union-and-intersection-types","sortIndex":1,"hash":"df00e8a0481298f0ace2a8699ddfa233","compilerSettings":{}},{"path":["TypeScript","Primitives"],"title":"Unknown and Never","name":"Unknown and Never.ts","lang":"zh","id":"unknown-and-never","sortIndex":1,"hash":"c0e3cd9db8c260a5c0975af5dc141d71","compilerSettings":{}},{"path":["TypeScript","Type Primitives"],"title":"Built-in Utility Types","name":"Built-in Utility Types.ts","lang":"zh","id":"built-in-utility-types","sortIndex":3,"hash":"7b49466a2610b51f6069de626f56a402","compilerSettings":{"strictNullChecks":true}},{"path":["TypeScript","Type Primitives"],"title":"Nullable Types","name":"Nullable Types.ts","lang":"zh","id":"nullable-types","sortIndex":3,"hash":"26ebb8b5df6e8c40352f143634370278","compilerSettings":{"strictNullChecks":false}},{"path":["TypeScript","Type Primitives"],"title":"Tuples","name":"Tuples.ts","lang":"zh","id":"tuples","sortIndex":1,"hash":"bf96feb9c383b2e2ddbfc30ee4f5aae4","compilerSettings":{}}]},"optionsSummary":[{"id":"files","display":"Files","oneliner":"<p>Include a list of files. This does not support glob patterns, as opposed to <a href=\"#include\"><code>include</code></a>.</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"extends","display":"Extends","oneliner":"<p>Specify one or more path or node module references to base configuration files from which settings are inherited.</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"include","display":"Include","oneliner":"<p>Specify a list of glob patterns that match files to be included in compilation.</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"exclude","display":"Exclude","oneliner":"<p>Filters results from the <a href=\"#include\"><code>include</code></a> option.</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"references","display":"References","oneliner":"<p>Specify an array of objects that specify paths for projects. Used in project references.</p>\n","categoryID":"Top Level","categoryDisplay":"Top Level"},{"id":"allowUnreachableCode","display":"Allow Unreachable Code","oneliner":"<p>Disable error reporting for unreachable code.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"allowUnusedLabels","display":"Allow Unused Labels","oneliner":"<p>Disable error reporting for unused labels.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"alwaysStrict","display":"Always Strict","oneliner":"<p>Ensure 'use strict' is always emitted.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"exactOptionalPropertyTypes","display":"Exact Optional Property Types","oneliner":"<p>Interpret optional property types as written, rather than adding <code>undefined</code>.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noFallthroughCasesInSwitch","display":"No Fallthrough Cases In Switch","oneliner":"<p>Enable error reporting for fallthrough cases in switch statements.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitAny","display":"No Implicit Any","oneliner":"<p>Enable error reporting for expressions and declarations with an implied <code>any</code> type.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitOverride","display":"No Implicit Override","oneliner":"<p>Ensure overriding members in derived classes are marked with an override modifier.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitReturns","display":"No Implicit Returns","oneliner":"<p>Enable error reporting for codepaths that do not explicitly return in a function.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noImplicitThis","display":"No Implicit This","oneliner":"<p>Enable error reporting when <code>this</code> is given the type <code>any</code>.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noPropertyAccessFromIndexSignature","display":"No Property Access From Index Signature","oneliner":"<p>Enforces using indexed accessors for keys declared using an indexed type.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noUncheckedIndexedAccess","display":"No Unchecked Indexed Access","oneliner":"<p>Add <code>undefined</code> to a type when accessed using an index.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noUnusedLocals","display":"No Unused Locals","oneliner":"<p>Enable error reporting when local variables aren't read.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"noUnusedParameters","display":"No Unused Parameters","oneliner":"<p>Raise an error when a function parameter isn't read.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strict","display":"Strict","oneliner":"<p>Enable all strict type-checking options.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictBindCallApply","display":"Strict Bind Call Apply","oneliner":"<p>Check that the arguments for <code>bind</code>, <code>call</code>, and <code>apply</code> methods match the original function.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictFunctionTypes","display":"Strict Function Types","oneliner":"<p>When assigning functions, check to ensure parameters and the return values are subtype-compatible.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictNullChecks","display":"Strict Null Checks","oneliner":"<p>When type checking, take into account <code>null</code> and <code>undefined</code>.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"strictPropertyInitialization","display":"Strict Property Initialization","oneliner":"<p>Check for class properties that are declared but not set in the constructor.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"useUnknownInCatchVariables","display":"Use Unknown In Catch Variables","oneliner":"<p>Default catch clause variables as <code>unknown</code> instead of <code>any</code>.</p>\n","categoryID":"Type_Checking_6248","categoryDisplay":"Type Checking"},{"id":"allowArbitraryExtensions","display":"Allow Arbitrary Extensions","oneliner":"<p>Enable importing files with any extension, provided a declaration file is present.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"allowImportingTsExtensions","display":"Allow Importing TS Extensions","oneliner":"<p>Allow imports to include TypeScript file extensions.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"allowUmdGlobalAccess","display":"允许 Umd 全局访问","oneliner":"<p>假设 UMD 的导入是全局可用的</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"baseUrl","display":"基准目录","oneliner":"<p>为相对路径的模块名设置基准目录</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"customConditions","display":"Custom Conditions","oneliner":"<p>Conditions to set in addition to the resolver-specific defaults when resolving imports.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"module","display":"模块","oneliner":"<p>模块代码生成。</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"moduleResolution","display":"模块解析","oneliner":"<p>允许 TypeScript 1.6 的模块解析策略</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"moduleSuffixes","display":"Module Suffixes","oneliner":"<p>List of file name suffixes to search when resolving a module.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"noResolve","display":"No Resolve","oneliner":"<p>Disallow <code>import</code>s, <code>require</code>s or <code>&#x3C;reference></code>s from expanding the number of files TypeScript should add to a project.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"paths","display":"路径设置","oneliner":"<p>一组用于寻找模块导入的路径</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"resolveJsonModule","display":"Resolve JSON Module","oneliner":"<p>Enable importing .json files.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"resolvePackageJsonExports","display":"Resolve package.json Exports","oneliner":"<p>Use the package.json 'exports' field when resolving package imports.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"resolvePackageJsonImports","display":"Resolve package.json Imports","oneliner":"<p>Use the package.json 'imports' field when resolving imports.</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"rootDir","display":"根目录","oneliner":"<p>设置你源码的根目录。</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"rootDirs","display":"根目录","oneliner":"<p>设置多个根目录</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"typeRoots","display":"类型根路径","oneliner":"<p>TypeScript 应该去哪些路径寻找类型定义</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"types","display":"类型","oneliner":"<p>用于创建一个允许包含在编译过程中的类型列表</p>\n","categoryID":"Modules_6244","categoryDisplay":"Modules"},{"id":"declaration","display":"声明","oneliner":"<p>为你工程中的 TypeScript 以及 JavaScript 文件生成 .d.ts 文件。</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"declarationDir","display":"Declaration Dir","oneliner":"<p>Specify the output directory for generated declaration files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"declarationMap","display":"Declaration Map","oneliner":"<p>Create sourcemaps for d.ts files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"downlevelIteration","display":"迭代器降级","oneliner":"<p>为迭代器对象生成更符合要求但更复杂的 JavaScript。</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"emitBOM","display":"Emit BOM","oneliner":"<p>Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"emitDeclarationOnly","display":"Emit Declaration Only","oneliner":"<p>Only output d.ts files and not JavaScript files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"importHelpers","display":"导入辅助","oneliner":"<p>允许每个项目从 tslib 中导入一次辅助函数，而不是在每个文件中都包含他们。</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"importsNotUsedAsValues","display":"Imports Not Used As Values","oneliner":"<p>Specify emit/checking behavior for imports that are only used for types.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"inlineSourceMap","display":"Inline Source Map","oneliner":"<p>Include sourcemap files inside the emitted JavaScript.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"inlineSources","display":"Inline Sources","oneliner":"<p>Include source code in the sourcemaps inside the emitted JavaScript.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"mapRoot","display":"Map Root","oneliner":"<p>Specify the location where debugger should locate map files instead of generated locations.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"newLine","display":"New Line","oneliner":"<p>Set the newline character for emitting files.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"noEmit","display":"禁止生成","oneliner":"<p>不在编译中生产文件。</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"noEmitHelpers","display":"No Emit Helpers","oneliner":"<p>Disable generating custom helper functions like <code>__extends</code> in compiled output.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"noEmitOnError","display":"No Emit On Error","oneliner":"<p>Disable emitting files if any type checking errors are reported.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"outDir","display":"输出目录","oneliner":"<p>为所有生成的文件设置一个输出目录。</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"outFile","display":"输出文件","oneliner":"<p>将所有输出打包到一个 .js 文件中。如果 <code>declaration</code> 为 true 还可以指定一个 .d.ts 文件。</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"preserveConstEnums","display":"Preserve Const Enums","oneliner":"<p>Disable erasing <code>const enum</code> declarations in generated code.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"preserveValueImports","display":"Preserve Value Imports","oneliner":"<p>Preserve unused imported values in the JavaScript output that would otherwise be removed.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"removeComments","display":"移除注释","oneliner":"<p>不生成注释。</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"sourceMap","display":"Source Map","oneliner":"<p>为生成的 JavaScript 文件生成 source map 文件。</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"sourceRoot","display":"Source Root","oneliner":"<p>Specify the root path for debuggers to find the reference source code.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"stripInternal","display":"Strip Internal","oneliner":"<p>Disable emitting declarations that have <code>@internal</code> in their JSDoc comments.</p>\n","categoryID":"Emit_6246","categoryDisplay":"Emit"},{"id":"allowJs","display":"允许 JS","oneliner":"<p>允许你的程序包含 JS 文件。使用 checkJS 来检查在这些文件中的错误。</p>\n","categoryID":"JavaScript_Support_6247","categoryDisplay":"JavaScript Support"},{"id":"checkJs","display":"检查 JS","oneliner":"<p>在经过类型检查的 JavaScript 中报告错误。</p>\n","categoryID":"JavaScript_Support_6247","categoryDisplay":"JavaScript Support"},{"id":"maxNodeModuleJsDepth","display":"Max Node Module JS Depth","oneliner":"<p>Specify the maximum folder depth used for checking JavaScript files from <code>node_modules</code>. Only applicable with <a href=\"#allowJs\"><code>allowJs</code></a>.</p>\n","categoryID":"JavaScript_Support_6247","categoryDisplay":"JavaScript Support"},{"id":"disableSizeLimit","display":"Disable Size Limit","oneliner":"<p>Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server.</p>\n","categoryID":"Editor_Support_6249","categoryDisplay":"Editor Support"},{"id":"plugins","display":"插件","oneliner":"<p>要包含的语言服务插件列表</p>\n","categoryID":"Editor_Support_6249","categoryDisplay":"Editor Support"},{"id":"allowSyntheticDefaultImports","display":"允许合成默认导入","oneliner":"<p>当模块没有默认导入时，允许 'import x from y'</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"esModuleInterop","display":"ES 模块互操作性","oneliner":"<p>为了便于支持导入 commonjs 模块生成额外的 JS</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"forceConsistentCasingInFileNames","display":"Force Consistent Casing In File Names","oneliner":"<p>Ensure that casing is correct in imports.</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"isolatedModules","display":"孤立模块","oneliner":"<p>确保每个文件都可以不依赖于其他导入而被安全转译。</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"preserveSymlinks","display":"保留符号链接","oneliner":"<p>不解析符号链接路径</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"verbatimModuleSyntax","display":"Verbatim Module Syntax","oneliner":"<p>Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting.</p>\n","categoryID":"Interop_Constraints_6252","categoryDisplay":"Interop Constraints"},{"id":"charset","display":"Charset","oneliner":"<p>No longer supported. In early versions, manually set the text encoding for reading files.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"keyofStringsOnly","display":"Keyof Strings Only","oneliner":"<p>Make keyof only return strings instead of string, numbers or symbols. Legacy option.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"noImplicitUseStrict","display":"No Implicit Use Strict","oneliner":"<p>Disable adding 'use strict' directives in emitted JavaScript files.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"noStrictGenericChecks","display":"No Strict Generic Checks","oneliner":"<p>Disable strict checking of generic signatures in function types.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"out","display":"Out","oneliner":"<p>Deprecated setting. Use <a href=\"#outFile\"><code>outFile</code></a> instead.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"suppressExcessPropertyErrors","display":"Suppress Excess Property Errors","oneliner":"<p>Disable reporting of excess property errors during the creation of object literals.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"suppressImplicitAnyIndexErrors","display":"Suppress Implicit Any Index Errors","oneliner":"<p>Suppress <a href=\"#noImplicitAny\"><code>noImplicitAny</code></a> errors when indexing objects that lack index signatures.</p>\n","categoryID":"Backwards_Compatibility_6253","categoryDisplay":"Backwards Compatibility"},{"id":"emitDecoratorMetadata","display":"Emit Decorator Metadata","oneliner":"<p>Emit design-type metadata for decorated declarations in source files.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"experimentalDecorators","display":"Experimental Decorators","oneliner":"<p>Enable experimental support for TC39 stage 2 draft decorators.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsx","display":"JSX","oneliner":"<p>JSX 代码生成</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsxFactory","display":"JSX Factory","oneliner":"<p>Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsxFragmentFactory","display":"JSX Fragment Factory","oneliner":"<p>Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"jsxImportSource","display":"JSX Import Source","oneliner":"<p>Specify module specifier used to import the JSX factory functions when using <code>jsx: react-jsx*</code>.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"lib","display":"库","oneliner":"<p>描述目标运行时环境的声明文件列表。</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"moduleDetection","display":"Module Detection","oneliner":"<p>Specify what method is used to detect whether a file is a script or a module.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"noLib","display":"No Lib","oneliner":"<p>Disable including any library files, including the default lib.d.ts.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"reactNamespace","display":"React Namespace","oneliner":"<p>Specify the object invoked for <code>createElement</code>. This only applies when targeting <code>react</code> JSX emit.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"target","display":"编译目标","oneliner":"<p>设置生成的 JavaScript 语言的版本，并且会包含兼容的库（环境）的定义。</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"useDefineForClassFields","display":"Use Define For Class Fields","oneliner":"<p>Emit ECMAScript-standard-compliant class fields.</p>\n","categoryID":"Language_and_Environment_6254","categoryDisplay":"Language and Environment"},{"id":"diagnostics","display":"Diagnostics","oneliner":"<p>Output compiler performance information after building.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"explainFiles","display":"Explain Files","oneliner":"<p>Print files read during the compilation including why it was included.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"extendedDiagnostics","display":"Extended Diagnostics","oneliner":"<p>Output more detailed compiler performance information after building.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"generateCpuProfile","display":"Generate CPU Profile","oneliner":"<p>Emit a v8 CPU profile of the compiler run for debugging.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"listEmittedFiles","display":"List Emitted Files","oneliner":"<p>Print the names of emitted files after a compilation.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"listFiles","display":"List Files","oneliner":"<p>Print all of the files read during the compilation.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"traceResolution","display":"Trace Resolution","oneliner":"<p>Log paths used during the <a href=\"#moduleResolution\"><code>moduleResolution</code></a> process.</p>\n","categoryID":"Compiler_Diagnostics_6251","categoryDisplay":"Compiler Diagnostics"},{"id":"composite","display":"组合","oneliner":"<p>启用约束以使工程可以引用其他工程来用于构建。</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"disableReferencedProjectLoad","display":"Disable Referenced Project Load","oneliner":"<p>Reduce the number of projects loaded automatically by TypeScript.</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"disableSolutionSearching","display":"Disable Solution Searching","oneliner":"<p>Opt a project out of multi-project reference checking when editing.</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"disableSourceOfProjectReferenceRedirect","display":"Disable Source Project Reference Redirect","oneliner":"<p>Disable preferring source files instead of declaration files when referencing composite projects.</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"incremental","display":"增量","oneliner":"<p>为支持增量编译工程，保存 .tsbuildinfo 文件</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"tsBuildInfoFile","display":"TS 构建信息文件","oneliner":"<p>为 .tsbuildinfo 增量编译信息指定目录。</p>\n","categoryID":"Projects_6255","categoryDisplay":"Projects"},{"id":"noErrorTruncation","display":"No Error Truncation","oneliner":"<p>Disable truncating types in error messages.</p>\n","categoryID":"Output_Formatting_6256","categoryDisplay":"Output Formatting"},{"id":"preserveWatchOutput","display":"Preserve Watch Output","oneliner":"<p>Disable wiping the console in watch mode.</p>\n","categoryID":"Output_Formatting_6256","categoryDisplay":"Output Formatting"},{"id":"pretty","display":"Pretty","oneliner":"<p>Enable color and formatting in TypeScript's output to make compiler errors easier to read.</p>\n","categoryID":"Output_Formatting_6256","categoryDisplay":"Output Formatting"},{"id":"skipDefaultLibCheck","display":"Skip Default Lib Check","oneliner":"<p>Skip type checking .d.ts files that are included with TypeScript.</p>\n","categoryID":"Completeness_6257","categoryDisplay":"Completeness"},{"id":"skipLibCheck","display":"Skip Lib Check","oneliner":"<p>Skip type checking all .d.ts files.</p>\n","categoryID":"Completeness_6257","categoryDisplay":"Completeness"},{"id":"assumeChangesOnlyAffectDirectDependencies","display":"Assume Changes Only Affect Direct Dependencies","oneliner":"<p>Have recompiles in projects that use <a href=\"#incremental\"><code>incremental</code></a> and <code>watch</code> mode assume that changes within a file will only affect files directly depending on it.</p>\n","categoryID":"Watch_and_Build_Modes_6250","categoryDisplay":"监听选项"},{"id":"watchFile","display":"Watch File","oneliner":"<p>Specify how the TypeScript watch mode works.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"watchDirectory","display":"Watch Directory","oneliner":"<p>Specify how directories are watched on systems that lack recursive file-watching functionality.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"fallbackPolling","display":"Fallback Polling","oneliner":"<p>Specify what approach the watcher should use if the system runs out of native file watchers.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"synchronousWatchDirectory","display":"Synchronous Watch Directory","oneliner":"<p>Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"excludeDirectories","display":"Exclude Directories","oneliner":"<p>Remove a list of directories from the watch process.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"excludeFiles","display":"Exclude Files","oneliner":"<p>Remove a list of files from the watch mode's processing.</p>\n","categoryID":"watchOptions","categoryDisplay":"watchOptions"},{"id":"enable","display":"Enable","oneliner":"<p>Disable the type acquisition for JavaScript projects.</p>\n","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"},{"id":"include","display":"Include","oneliner":"<p>Specify a list of modules which to acquire types for.</p>\n","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"},{"id":"exclude","display":"Exclude","oneliner":"<p>Specify a list of modules which to exclude from type acquisition.</p>\n","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"},{"id":"disableFilenameBasedTypeAcquisition","display":"Disable Filename Based Type Acquisition","oneliner":"<p>Disables inference for type acquisition by looking at filenames in a project.</p>\n","categoryID":"typeAcquisition","categoryDisplay":"typeAcquisition"}],"playgroundHandbookTOC":{"docs":[{"type":"href","title":"Compiler Settings","href":"/_playground-handbook/compiler-settings.html"},{"type":"href","title":"Examples","href":"/_playground-handbook/examples.html"},{"type":"href","title":"JS + DTS sidebars","href":"/_playground-handbook/js---dts-sidebars.html"},{"type":"href","title":"Running Code","href":"/_playground-handbook/running-code.html"},{"type":"href","title":"Type Acquisition","href":"/_playground-handbook/type-acquisition.html"},{"type":"href","title":"Settings Panel","href":"/_playground-handbook/settings-panel.html"},{"type":"href","title":"Writing JavaScript","href":"/_playground-handbook/writing-javascript.html"},{"type":"href","title":"Writing DTS Files","href":"/_playground-handbook/writing-dts-files.html"},{"type":"href","title":"TypeScript Versions","href":"/_playground-handbook/typescript-versions.html"},{"type":"href","title":"URL Structure","href":"/_playground-handbook/url-structure.html"},{"type":"href","title":"Exporting Your Code","href":"/_playground-handbook/exporting-your-code.html"},{"type":"href","title":"Twoslash Annotations","href":"/_playground-handbook/twoslash-annotations.html"}]}}},"staticQueryHashes":[]}