{"componentChunkName":"component---src-templates-documentation-tsx","path":"/ja/docs/handbook/declaration-files/dts-from-js.html","result":{"data":{"markdownRemark":{"id":"a9d8163a-6d8a-5501-9879-937572ecd4f7","excerpt":"TypeScript 3.7では、\nTypeScriptに、JSDoc構文を使ったJavaScriptから.d.tsファイルを生成するためのサポートが導入されました。 この仕組みは、プロジェクトをTypeScriptに移行することなく、TypeScript…","html":"<p><a href=\"/docs/handbook/release-notes/typescript-3-7.html#--declaration-and---allowjs\">TypeScript 3.7</a>では、\nTypeScriptに、JSDoc構文を使ったJavaScriptから.d.tsファイルを生成するためのサポートが導入されました。</p>\n<p>この仕組みは、プロジェクトをTypeScriptに移行することなく、TypeScriptが備わったエディタの体験を自分のものにできるということを意味します。\nTypeScriptはほとんどのJSDocタグをサポートしています。リファレンスは<a href=\"/docs/handbook/type-checking-javascript-files.html#supported-jsdoc\">こちら</a>。</p>\n<h2 id=\"dtsファイルを出力するようにプロジェクトを設定する\" style=\"position:relative;\"><a href=\"#dts%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\" aria-label=\"dtsファイルを出力するようにプロジェクトを設定する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.d.tsファイルを出力するようにプロジェクトを設定する</h2>\n<p>プロジェクトに.d.tsファイルの作成を追加するように設定するには、最大4つのステップを実行する必要があります:</p>\n<ul>\n<li>dev dependenciesにTypeScriptを追加する</li>\n<li>TypeScriptを設定するための<code>tsconfig.json</code>を追加する</li>\n<li>TypeScriptコンパイラを実行して、JSファイルに対応するd.tsファイルを生成する</li>\n<li>(任意) package.jsonを編集して型を参照できるようにする</li>\n</ul>\n<h3 id=\"typescriptを追加する\" style=\"position:relative;\"><a href=\"#typescript%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B\" aria-label=\"typescriptを追加する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScriptを追加する</h3>\n<p>こちらは、<a href=\"/download\">インストールページ</a>を参照してください。</p>\n<h3 id=\"tsconfig\" style=\"position:relative;\"><a href=\"#tsconfig\" aria-label=\"tsconfig permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TSConfig</h3>\n<p>TSConfigはコンパイラのフラグを設定し、対象のファイルを宣言するためのjsoncファイルです。\n今回のケースでは、次のようなファイルが必要になるでしょう:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">json</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #008000\">// プロジェクトに合わせて変更してください</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #CD3131\">include</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"src/**/*\"</span><span style=\"color: #000000\">],</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #CD3131\">compilerOptions</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// JSファイルは通常、ソースファイルとして無視されますが、</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// ここではJSファイルを読み込むようにTypeScriptに指示します</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #CD3131\">allowJs</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// d.tsファイルを生成します</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #CD3131\">declaration</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// コンパイラを実行すると</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// d.tsファイルのみ出力されます</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #CD3131\">emitDeclarationOnly</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// 型はこのディレクトリに出力されます</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// このオプションを削除すると</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #008000\">// .jsファイルの隣に.d.tsファイルが置かれます</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #CD3131\">outDir</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"dist\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">  },</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>オプションについては、<a href=\"/reference\">tsconfigリファレンス</a>で詳しく知ることができます。\nTSConfigファイルを使用する代替手段としてCLIがあります。次は上記のTSConfigファイルの設定と同じふるまいをするCLIコマンドです。</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npx typescript src/**/*.js --declaration --allowJs --emitDeclarationOnly --outDir types</span></div></code></div></pre>\n<h2 id=\"コンパイラを実行する\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B\" aria-label=\"コンパイラを実行する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コンパイラを実行する</h2>\n<p>実行方法については<a href=\"/download\">インストールページ</a>を参照してください。\nプロジェクトの<code>.gitignore</code>にファイルが指定してある場合は、これらのファイルがパッケージに含まれていることを確認しましょう。</p>\n<h2 id=\"packagejsonを編集する\" style=\"position:relative;\"><a href=\"#packagejson%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%99%E3%82%8B\" aria-label=\"packagejsonを編集する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.jsonを編集する</h2>\n<p>TypeScriptは、.d.tsファイルを見つけるためのステップを追加し、<code>package.json</code>の中でNodeのモジュール解決を再現します。\n大まかには、モジュール解決は任意のフィールドである<code>\"types\"</code>フィールドをチェックし、次に<code>\"main\"</code>フィールド、そして最後にルートの<code>index.d.ts</code>を試します。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Package.json</th>\n<th align=\"left\">デフォルトの.d.tsの場所</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">“types”フィールドがない</td>\n<td align=\"left\">“main”をチェックし、次にindex.d.ts</td>\n</tr>\n<tr>\n<td align=\"left\">“types”: “main.d.ts”</td>\n<td align=\"left\">main.d.ts</td>\n</tr>\n<tr>\n<td align=\"left\">“types”: “./dist/main.js”</td>\n<td align=\"left\">./main/main.d.ts</td>\n</tr>\n</tbody>\n</table>\n<p>もし存在しなければ、次は”main”が使用されます</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Package.json</th>\n<th align=\"left\">デフォルトの.d.tsの場所</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">“main”フィールドがない</td>\n<td align=\"left\">index.d.ts</td>\n</tr>\n<tr>\n<td align=\"left\">“main”:“index.js”</td>\n<td align=\"left\">index.d.ts</td>\n</tr>\n<tr>\n<td align=\"left\">“main”:“./dist/index.js”</td>\n<td align=\"left\">./dist/index.d.ts</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"tips\" style=\"position:relative;\"><a href=\"#tips\" aria-label=\"tips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tips</h2>\n<p>.d.tsファイルにテストを記述したいなら、<a href=\"https://github.com/SamVerschueren/tsd\">tsd</a>を試してみてください。</p>","headings":[{"value":".d.tsファイルを出力するようにプロジェクトを設定する","depth":2},{"value":"TypeScriptを追加する","depth":3},{"value":"TSConfig","depth":3},{"value":"コンパイラを実行する","depth":2},{"value":"package.jsonを編集する","depth":2},{"value":"Tips","depth":2}],"frontmatter":{"permalink":"/ja/docs/handbook/declaration-files/dts-from-js.html","title":".jsファイルから.d.tsファイルを生成する","disable_toc":null,"handbook":null,"oneline":"JavaScriptプロジェクトでd.tsファイルを生成する方法","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":{"childMarkdownRemark":{"frontmatter":{"title":"JSDocリファレンス","oneline":"TypeScriptを備えたJavaScriptはどのようなJSDocをサポートしているか","permalink":"/ja/docs/handbook/jsdoc-supported-types.html"}}},"next":null},"pageContext":{"id":"7-.jsファイルから.d.tsファイルを生成する","slug":"/ja/docs/handbook/declaration-files/dts-from-js.html","repoPath":"/packages/documentation/copy/ja/javascript/Creating DTS files From JS.md","previousID":"c2138dae-cfe1-5e03-9460-9e3c5470d5e8","lang":"ja","modifiedTime":"2024-10-21T12:35:09.553Z"}},"staticQueryHashes":[]}