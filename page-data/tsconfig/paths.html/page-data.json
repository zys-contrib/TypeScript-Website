{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/paths.html","result":{"pageContext":{"title":"paths","lang":"en","html":"<p>A series of entries which re-map imports to lookup locations relative to the <a href=\"#baseUrl\"><code>baseUrl</code></a> if set, or to the tsconfig file itself otherwise. There is a larger coverage of <code>paths</code> in <a href=\"/docs/handbook/modules/reference.html#paths\">the <code>moduleResolution</code> reference page</a>.</p>\n<p><code>paths</code> lets you declare how TypeScript should resolve an import in your <code>require</code>/<code>import</code>s.</p>\n<pre class=\"shiki light-plus tsconfig lsp\" style=\"background-color: #FFFFFF; color: #000000\" tsconfig=\"true\"><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#compilerOptions'><data-lsp lsp=\"The set of compiler options for your project\">compilerOptions</data-lsp></a>\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#paths'><data-lsp lsp=\"Specify a set of entries that re-map imports to additional lookup locations.\">paths</data-lsp></a>\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"jquery\"</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"./vendor/jquery/dist/jquery\"</span><span style=\"color: #000000\">]</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">  }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>This would allow you to be able to write <code>import \"jquery\"</code>, and get all of the correct typing locally.</p>\n<pre class=\"shiki light-plus tsconfig lsp\" style=\"background-color: #FFFFFF; color: #000000\" tsconfig=\"true\"><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#compilerOptions'><data-lsp lsp=\"The set of compiler options for your project\">compilerOptions</data-lsp></a>\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#paths'><data-lsp lsp=\"Specify a set of entries that re-map imports to additional lookup locations.\">paths</data-lsp></a>\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"app/*\"</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"./src/app/*\"</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"config/*\"</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"./src/app/_config/*\"</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"environment/*\"</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"./src/environments/*\"</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"shared/*\"</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"./src/app/_shared/*\"</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"helpers/*\"</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"./src/helpers/*\"</span><span style=\"color: #000000\">],</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0451A5\">\"tests/*\"</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"./src/tests/*\"</span><span style=\"color: #000000\">]</span></div><div class='line'><span style=\"color: #000000\">    },</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>In this case, you can tell the TypeScript file resolver to support a number of custom prefixes to find code.</p>\n<p>Note that this feature does not change how import paths are emitted by <code>tsc</code>, so <code>paths</code> should only be used to inform TypeScript that another tool has this mapping and will use it at runtime or when bundling.</p>","redirectHref":"/tsconfig#paths"}},"staticQueryHashes":[]}