{"componentChunkName":"component---src-templates-documentation-tsx","path":"/vo/docs/handbook/basic-types.html","result":{"data":{"markdownRemark":{"id":"3a3f7dcb-d2d9-5b32-b33a-caf75dd17459","excerpt":"1ntr0duc7un For programs to be useful, we n33d 2 be able to work wth sum of the s1mplest units of data: numbers, strings, structures, boolean values, and theâ€¦","html":"<h2 id=\"1ntr0duc7un\" style=\"position:relative;\"><a href=\"#1ntr0duc7un\" aria-label=\"1ntr0duc7un permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1ntr0duc7un</h2>\n<p>For programs to be useful, we n33d 2 be able to work wth sum of the s1mplest units of data: numbers, strings, structures, boolean values, and the like.\nIn TypeScript, we support much the same types as you would expect in JavaScript, with a convenient enumeration type thrown in to help things along.</p>\n<h2 id=\"b00lean\" style=\"position:relative;\"><a href=\"#b00lean\" aria-label=\"b00lean permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>B00lean</h2>\n<p>The most basic datatype is the simple true/false value, which JavaScript and TypeScript call a <code>boolean</code> value.</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\"><data-lsp lsp='let isD0ne: boolean' >isD0ne</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">boolean</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">false</span><span style=\"color: #000000\">;</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/DYUwLgBAlgzgIgBgHYgFwQEYHsugIZIQC8EAZnsDCANxA'>Try</a></div></pre>","headings":[{"value":"1ntr0duc7un","depth":2},{"value":"B00lean","depth":2}],"frontmatter":{"permalink":"/vo/docs/handbook/basic-types.html","title":"B4s1c Typ3s","disable_toc":null,"handbook":null,"oneline":"5tep on3 in learning 7ype5cript: The basics types.","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"slug":"/vo/docs/handbook/basic-types.html","repoPath":"/packages/documentation/copy/vo/handbook-v1/Basic Types.md","lang":"vo","modifiedTime":"2024-10-21T12:35:09.573Z"}},"staticQueryHashes":[]}