{"componentChunkName":"component---src-templates-documentation-tsx","path":"/pt/docs/handbook/intro-to-js-ts.html","result":{"data":{"markdownRemark":{"id":"4665b326-6ea3-5a4e-b1dd-d3c4d3199ba3","excerpt":"O sistema de tipos no TypeScript tem diferentes níveis de rigidez ao trabalhar com uma base de código: Um sistema de tipo baseado apenas em inferência com…","html":"<p>O sistema de tipos no TypeScript tem diferentes níveis de rigidez ao trabalhar com uma base de código:</p>\n<ul>\n<li>Um sistema de tipo baseado apenas em inferência com código JavaScript</li>\n<li>Tipagem incremental em JavaScript <a href=\"/docs/handbook/jsdoc-supported-types.html\">via JSDoc</a></li>\n<li>Usando <code>// @ts-check</code> em um arquivo JavaScript</li>\n<li>Código TypeScript</li>\n<li>TypeScript com <a href=\"/tsconfig#strict\"><code>strict</code></a> habilitado</li>\n</ul>\n<p>Cada etapa representa um movimento em direção a um sistema de tipo mais seguro, mas nem todo projeto precisa desse nível de verificação.</p>\n<h2 id=\"typescript-com-javascript\" style=\"position:relative;\"><a href=\"#typescript-com-javascript\" aria-label=\"typescript com javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript com JavaScript</h2>\n<p>Isso ocorre quando você usa um editor que usa TypeScript para fornecer ferramentas como autocompletar, pular para o símbolo e ferramentas de refatoração como renomear.\nA <a href=\"/\">página inicial</a> possui uma lista de editores que possuem plugins TypeScript.</p>\n<h2 id=\"fornecimento-de-dicas-de-tipo-em-js-via-jsdoc\" style=\"position:relative;\"><a href=\"#fornecimento-de-dicas-de-tipo-em-js-via-jsdoc\" aria-label=\"fornecimento de dicas de tipo em js via jsdoc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fornecimento de dicas de tipo em JS via JSDoc</h2>\n<p>Em um arquivo <code>.js</code>, os tipos geralmente podem ser inferidos. Quando os tipos não podem ser inferidos, eles podem ser especificados usando a sintaxe JSDoc.</p>\n<p>As anotações JSDoc vêm antes de uma declaração ser usada para definir o tipo dessa declaração. Por exemplo:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">/** </span><span style=\"color: #0000FF\">@type</span><span style=\"color: #008000\"> </span><span style=\"color: #1C6277\">{number}</span><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\"><data-lsp lsp='var x: number' >x</data-lsp></span><span style=\"color: #000000\">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #001080\"><data-lsp lsp='var x: number' >x</data-lsp></span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// OK</span></div><div class='line'><span style=\"color: #001080\"><data-lsp lsp='var x: number' >x</data-lsp></span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">false</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// OK?!</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PQKhAIAEBcE8AcCm4DeA7ArgWwEaIE4C+4IwAUAG4CG+4AHgNxll3gC84ADA+MMOAHkA0i3bgAZlQA2AZ0Q8+goQH4AhEA'>Try</a></div></pre>\n<p>Você pode encontrar a lista completa de padrões JSDoc suportados <a href=\"/docs/handbook/jsdoc-supported-types.html\">em tipos suportados de JSDoc</a>.</p>\n<h2 id=\"ts-check\" style=\"position:relative;\"><a href=\"#ts-check\" aria-label=\"ts check permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>@ts-check</code></h2>\n<p>A última linha do exemplo de código anterior geraria um erro no TypeScript, mas não o faz por padrão em um projeto JS.\nPara habilitar erros em seus arquivos JavaScript, adicione: <code>// @ts-check</code> à primeira linha em seus arquivos <code>.js</code> para que o TypeScript o indique como um erro.</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">// @ts-check</span></div><div class='line'><span style=\"color: #008000\">/** </span><span style=\"color: #0000FF\">@type</span><span style=\"color: #008000\"> </span><span style=\"color: #1C6277\">{number}</span><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\"><data-lsp lsp='var x: number' >x</data-lsp></span><span style=\"color: #000000\">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #001080\"><data-lsp lsp='var x: number' >x</data-lsp></span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// OK</span></div><div class='line'><span style=\"color: #001080\"><data-err><data-lsp lsp='var x: number' >x</data-lsp></data-err></span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">false</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// Not OK</span></div><span class=\"error\"><span>Type 'boolean' is not assignable to type 'number'.</span><span class=\"code\">2322</span></span><span class=\"error-behind\">Type 'boolean' is not assignable to type 'number'.</span></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEBcGcFoGMAWBTeBrAUCCyBOuB7XaALlACYBmc8rAKjokgE8AHZUAbwDsBXAWwBGeAL6g6wDADcAhrlAAPANwYMC0AF5QABiWhsAeQDSazaABmMgDbRke7ADkCkUMaA'>Try</a></div></pre>\n<p>Se você tem muitos arquivos JavaScript aos quais deseja adicionar erros, pode passar a usar um <a href=\"/docs/handbook/tsconfig-json.html\"><code>jsconfig.json</code></a>.\nVocê pode pular a verificação de alguns arquivos adicionando um comentário <code>// @ts-nocheck</code> aos arquivos.</p>\n<p>O TypeScript pode oferecer erros dos quais você discorda; nesses casos, você pode ignorar os erros em linhas específicas adicionando <code>// @ts-ignore</code> ou<code>// @ts-expect-error</code> na linha anterior.</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">// @ts-check</span></div><div class='line'><span style=\"color: #008000\">/** </span><span style=\"color: #0000FF\">@type</span><span style=\"color: #008000\"> </span><span style=\"color: #1C6277\">{number}</span><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\"><data-lsp lsp='var x: number' >x</data-lsp></span><span style=\"color: #000000\">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #001080\"><data-lsp lsp='var x: number' >x</data-lsp></span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// OK</span></div><div class='line'><span style=\"color: #008000\">// @ts-expect-error</span></div><div class='line'><span style=\"color: #001080\"><data-lsp lsp='var x: number' >x</data-lsp></span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">false</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// Not OK</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEBcGcFoGMAWBTeBrAUMAVNikBPAB2VAG8A7AVwFsAjZAJwF9RtgMA3AQ0dAA8A3Bgz9QAXlAAGQaBCgA8gGksYKHGT8S8SLCaMA9o1ETQAM24AbaMlnyAcgciKlQA'>Try</a></div></pre>\n<p>Para saber mais sobre como o JavaScript é interpretado pelo TypeScript, leia <a href=\"/docs/handbook/type-checking-javascript-files.html\">Como TS Checa tipos de JS</a></p>","headings":[{"value":"TypeScript com JavaScript","depth":2},{"value":"Fornecimento de dicas de tipo em JS via JSDoc","depth":2},{"value":"@ts-check","depth":2}],"frontmatter":{"permalink":"/pt/docs/handbook/intro-to-js-ts.html","title":"Projetos JS utilizando TypeScript","disable_toc":null,"handbook":null,"oneline":"Como adicionar verificação de tipo a arquivos JavaScript usando TypeScript","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":{"childMarkdownRemark":{"frontmatter":{"title":"Checando tipos de arquivos JavaScript","oneline":"Como adicionar checagem de tipos a arquivos JavaScript usando Typescript","permalink":"/pt/docs/handbook/type-checking-javascript-files.html"}}}},"pageContext":{"id":"7-projetos-js-utilizando-typescript","slug":"/pt/docs/handbook/intro-to-js-ts.html","repoPath":"/packages/documentation/copy/pt/javascript/Intro to JS with TS.md","nextID":"ef1f43c1-d5cc-58b2-a621-03641103bce0","lang":"pt","modifiedTime":"2024-10-21T12:35:09.569Z"}},"staticQueryHashes":[]}