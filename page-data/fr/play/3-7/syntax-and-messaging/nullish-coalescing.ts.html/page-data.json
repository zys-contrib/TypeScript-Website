{"componentChunkName":"component---src-templates-play-example-tsx","path":"/fr/play/3-7/syntax-and-messaging/nullish-coalescing.ts.html","result":{"pageContext":{"name":"Nullish Coalescing","title":"Nullish Coalescing","lang":"fr","html":"\n L'opérateur de coalescence des nuls (nullish coalescing operator) est une\n alternative à || qui retourne l'expression de droite si celle de gauche\n est nulle ou non-définie.\n\n En revanche, || vérifie si la valeur est de type fausse (falsy), ce qui veut dire\n qu'une chaîne de caractères, ou le nombre 0, seraient considérés faux.\n\n Un bon example est la gestion des objets partiellement\n définis, pour lesquels il est possible d'avoir des valeurs par défaut\n quand une clef est manquante.\n\n<code><pre>\ninterface AppConfiguration {\n  // Défaut: \"(no name)\"; une chaîne de caractère vide est une valeur valide\n  name: string;\n\n  // Défaut: -1; 0 est une valeur valide\n  items: number;\n\n  // Défaut: true\n  active: boolean;\n}\n\nfunction updateApp(config: Partial<AppConfiguration>) {\n  // Avec l'opérateur de coalescence des nuls\n  config.name = config.name ?? \"(no name)\";\n  config.items = config.items ?? -1;\n  config.active = config.active ?? true;\n\n  // Sans l'opérateur de coalescence des nuls\n  config.name = typeof config.name === \"string\" ? config.name : \"(no name)\";\n  config.items = typeof config.items === \"number\" ? config.items : -1;\n  config.active = typeof config.active === \"boolean\" ? config.active : true;\n\n  // L'opérateur || pourrait retourner des valeurs incorrectes\n  config.name = config.name || \"(no name)\"; // empêche de passer \"\" comme valeur\n  config.items = config.items || -1; // empêche de passer 0 comme valeur\n  config.active = config.active || true; // incorrect, sera toujours true\n}\n\n</pre></code>\n// Plus de détails sur l'opérateur de coalescence des nuls dans la version 3.7\n sur le blog:\n\n https://devblogs.microsoft.com/typescript/announcing-typescript-3-7/\n","redirectHref":"fr/play/?#example/nullish-coalescing"}},"staticQueryHashes":[]}