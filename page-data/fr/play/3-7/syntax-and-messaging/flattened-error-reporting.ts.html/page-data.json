{"componentChunkName":"component---src-templates-play-example-tsx","path":"/fr/play/3-7/syntax-and-messaging/flattened-error-reporting.ts.html","result":{"pageContext":{"name":"Flattened Error Reporting","title":"Flattened Error Reporting","lang":"fr","html":"\n Les messages d'erreur TypeScript peuvent être un peu verbeux...\n Avec la version 3.7, nous avons corrigé quelques cas qui\n généraient des messages d'erreurs très longs.\n\n Propriétés imbriquées\n\n<code><pre>\nlet a = { b: { c: { d: { e: \"string\" } } } };\nlet b = { b: { c: { d: { e: 12 } } } };\n\na = b;\n\n</pre></code>\n// Auparavant, c'était deux lignes de code par propriété imbriquée, ce qui\n a rapidement amené les gens à lire\n uniquement la première et dernière ligne des messages d'erreur.\n\n Maintenant elles sont en ligne. :tada:\n\n Auparavant avec la version 3.6:\n\n Type '{ b: { c: { d: { e: number; }; }; }; }' is not assignable to type '{ b: { c: { d: { e: string; }; }; }; }'.\n   Types of property 'b' are incompatible.\n     Type '{ c: { d: { e: number; }; }; }' is not assignable to type '{ c: { d: { e: string; }; }; }'.\n       Types of property 'c' are incompatible.\n         Type '{ d: { e: number; }; }' is not assignable to type '{ d: { e: string; }; }'.\n           Types of property 'd' are incompatible.\n             Type '{ e: number; }' is not assignable to type '{ e: string; }'.\n               Types of property 'e' are incompatible.\n                 Type 'number' is not assignable to type 'string'\n\n Ça peut aussi marcher avec des objets de types différents\n et toujours donner un message d'erreur utile et concis.\n\n<code><pre>\nclass ExampleClass {\n  state = \"ok\";\n}\n\nclass OtherClass {\n  state = 12;\n}\n\nlet x = { a: { b: { c: { d: { e: { f: ExampleClass } } } } } };\nlet y = { a: { b: { c: { d: { e: { f: OtherClass } } } } } };\nx = y;\n\n</pre></code>\n// Auparavant avec la version 3.6:\n\n Type '{ a: { b: { c: { d: { e: { f: typeof OtherClass; }; }; }; }; }; }' is not assignable to type '{ a: { b: { c: { d: { e: { f: typeof ExampleClass; }; }; }; }; }; }'.\n   Types of property 'a' are incompatible.\n     Type '{ b: { c: { d: { e: { f: typeof OtherClass; }; }; }; }; }' is not assignable to type '{ b: { c: { d: { e: { f: typeof ExampleClass; }; }; }; }; }'.\n       Types of property 'b' are incompatible.\n         Type '{ c: { d: { e: { f: typeof OtherClass; }; }; }; }' is not assignable to type '{ c: { d: { e: { f: typeof ExampleClass; }; }; }; }'.\n           Types of property 'c' are incompatible.\n             Type '{ d: { e: { f: typeof OtherClass; }; }; }' is not assignable to type '{ d: { e: { f: typeof ExampleClass; }; }; }'.\n               Types of property 'd' are incompatible.\n                 Type '{ e: { f: typeof OtherClass; }; }' is not assignable to type '{ e: { f: typeof ExampleClass; }; }'.\n                   Types of property 'e' are incompatible.\n                     Type '{ f: typeof OtherClass; }' is not assignable to type '{ f: typeof ExampleClass; }'.\n                       Types of property 'f' are incompatible.\n                         Type 'typeof OtherClass' is not assignable to type 'typeof ExampleClass'.\n                           Type 'OtherClass' is not assignable to type 'ExampleClass'.\n                             Types of property 'state' are incompatible.\n                               Type 'number' is not assignable to type 'string'\n","redirectHref":"fr/play/?#example/flattened-error-reporting"}},"staticQueryHashes":[]}