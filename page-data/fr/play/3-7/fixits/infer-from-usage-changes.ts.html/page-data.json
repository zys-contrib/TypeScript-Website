{"componentChunkName":"component---src-templates-play-example-tsx","path":"/fr/play/3-7/fixits/infer-from-usage-changes.ts.html","result":{"pageContext":{"name":"Infer From Usage Changes","title":"Infer From Usage Changes","lang":"fr","html":"\n Avec TypeScript 3.7 la correction automatique 'infer from usage'\n s'améliore. Elle utilisera désormais une liste de types importants\n  (string, number, array, Promise)\n et déduira si l'usage du type correspond a l'API de ces objets\n\n Au sein des examples suivants, sélectionnez les paramètres des fonctions,\n cliquez sur l'icône en forme d'ampoule et choisissez\n \"Infer Parameter types...\"\n\n Déduire une liste de nombres:\n\n<code><pre>\nfunction pushNumber(arr) {\n  arr.push(12);\n}\n\n// Déduire une promesse:\n\nfunction awaitPromise(promise) {\n  promise.then((value) => console.log(value));\n}\n\n// Déduire le type d'une fonction et son type de retour\n\nfunction inferAny(app) {\n  const result = app.use(\"hi\");\n  return result;\n}\n\n</pre></code>\n// Déduire une liste de chaines de caractères, car une chaîne de caractères a été\n ajoutée a cette liste:\n\n<code><pre>\nfunction insertString(names) {\n  names[1] = \"hello\";\n}\n","redirectHref":"fr/play/?noImplicitAny=false#example/infer-from-usage-changes"}},"staticQueryHashes":[]}