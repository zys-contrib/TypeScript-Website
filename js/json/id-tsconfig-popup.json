{"files":"<p>Sertakan daftar berkas, tidak mendukung globs</p>\n","extends":"<p>Mewarisi opsi untuk TSConfig</p>\n","include":"<p>Specify a list of modules which to acquire types for.</p>\n","exclude":"<p>Specify a list of modules which to exclude from type acquisition.</p>\n","references":"<p>Menyediakan struktur untuk proyek komposit</p>\n","allowUnreachableCode":"<p>Galat ketika kode tidak akan pernah dipanggil</p>\n","allowUnusedLabels":"<p>Galat saat tidak sengaja membuat label</p>\n","alwaysStrict":"<p>Pastikan 'use strict' selalu dikeluarkan</p>\n","exactOptionalPropertyTypes":"<p>Interpret optional property types as written, rather than adding <code>undefined</code>.</p>\n","noFallthroughCasesInSwitch":"<p>Enable error reporting for fallthrough cases in switch statements.</p>\n","noImplicitAny":"<p>Mencegah memperkenalkan <code>any</code> didalam basis kode milikmu saat sebuah tipe bisa di tentukan</p>\n","noImplicitOverride":"<p>Ensure overriding members in derived classes are marked with an override modifier.</p>\n","noImplicitReturns":"<p>Memastikan semua jalur kode mengembalikan nilai di suatu fungsi</p>\n","noImplicitThis":"<p>Menimbulkan kesalahan-kesalahan saat 'this' menjadi bertipe any</p>\n","noPropertyAccessFromIndexSignature":"<p>Enforces using indexed accessors for keys declared using an indexed type.</p>\n","noUncheckedIndexedAccess":"<p>Add <code>undefined</code> to a type when accessed using an index.</p>\n","noUnusedLocals":"<p>Enable error reporting when local variables aren't read.</p>\n","noUnusedParameters":"<p>Raise an error when a function parameter isn't read.</p>\n","strict":"<p>Enable all strict type-checking options.</p>\n","strictBindCallApply":"<p>Check that the arguments for <code>bind</code>, <code>call</code>, and <code>apply</code> methods match the original function.</p>\n","strictFunctionTypes":"<p>When assigning functions, check to ensure parameters and the return values are subtype-compatible.</p>\n","strictNullChecks":"<p>When type checking, take into account <code>null</code> and <code>undefined</code>.</p>\n","strictPropertyInitialization":"<p>Check for class properties that are declared but not set in the constructor.</p>\n","useUnknownInCatchVariables":"<p>Default catch clause variables as <code>unknown</code> instead of <code>any</code>.</p>\n","allowArbitraryExtensions":"<p>Enable importing files with any extension, provided a declaration file is present.</p>\n","allowImportingTsExtensions":"<p>Allow imports to include TypeScript file extensions.</p>\n","allowUmdGlobalAccess":"<p>Asumsikan impor UMD tersedia secara global</p>\n","baseUrl":"<p>Tetapkan baseurl untuk nama modul relatif</p>\n","customConditions":"<p>Conditions to set in addition to the resolver-specific defaults when resolving imports.</p>\n","module":"<p>Specify what module code is generated.</p>\n","moduleResolution":"<p>Specify how TypeScript looks up a file from a given module specifier.</p>\n","moduleSuffixes":"<p>List of file name suffixes to search when resolving a module.</p>\n","noResolve":"<p>Disallow <code>import</code>s, <code>require</code>s or <code>&#x3C;reference></code>s from expanding the number of files TypeScript should add to a project.</p>\n","paths":"<p>Specify a set of entries that re-map imports to additional lookup locations.</p>\n","resolveJsonModule":"<p>Memperbolehkan mengimpor berkas .json</p>\n","resolvePackageJsonExports":"<p>Use the package.json 'exports' field when resolving package imports.</p>\n","resolvePackageJsonImports":"<p>Use the package.json 'imports' field when resolving imports.</p>\n","rootDir":"<p>Menyetel direktori root di dalam berkas sumber Anda</p>\n","rootDirs":"<p>Mengatur banyak direktori root</p>\n","typeRoots":"<p>Specify multiple folders that act like <code>./node_modules/@types</code>.</p>\n","types":"<p>Digunakan untuk membuat sebuah daftar kumpulan tipe yang diizinkan untuk diikutsertakan pada kompilasi</p>\n","declaration":"<p>Emit berkas d.ts untuk berkas referensi dalam proyek</p>\n","declarationDir":"<p>Atur direktori <em>root</em> untuk berkas d.ts yang akan dituju</p>\n","declarationMap":"<p>Buat peta sumber untuk berkas d.ts</p>\n","downlevelIteration":"<p>Menghasilkan JavaScript yang lebih sesuai, tetapi sangat rumit untuk objek iterasi</p>\n","emitBOM":"<p>Sertakan tanda urutan byte ke berkas keluaran</p>\n","emitDeclarationOnly":"<p>Hanya mengeluarkan berkas d.ts dan bukan berkas .js</p>\n","importHelpers":"<p>Izinkan mengimpor fungsi penunjang satu kali per proyek, termasuk menyertakan per-berkas</p>\n","importsNotUsedAsValues":"<p>Mengontrol sintaks yang Anda gunakan untuk mengimpor kata</p>\n","inlineSourceMap":"<p>Sertakan berkas peta sumber di dalam JavaScript</p>\n","inlineSources":"<p>Sertakan berkas peta sumber di dalam JavaScript yang tampilkan</p>\n","mapRoot":"<p>Specify the location where debugger should locate map files instead of generated locations.</p>\n","newLine":"<p>Set the newline character for emitting files.</p>\n","noEmit":"<p>Disable emitting files from a compilation.</p>\n","noEmitHelpers":"<p>Disable generating custom helper functions like <code>__extends</code> in compiled output.</p>\n","noEmitOnError":"<p>Disable emitting files if any type checking errors are reported.</p>\n","outDir":"<p>Mengatur direktori keluaran untuk semua berkas yang disertakan</p>\n","outFile":"<p>Mengeluarkan satu berkas dari semua berkas JS yang di gabungkan</p>\n","preserveConstEnums":"<p>Disable erasing <code>const enum</code> declarations in generated code.</p>\n","preserveValueImports":"<p>Preserve unused imported values in the JavaScript output that would otherwise be removed.</p>\n","removeComments":"<p>Menghapus Komentar di TypeScript sehingga tidak muncul di Javascript</p>\n","sourceMap":"<p>Create source map files for emitted JavaScript files.</p>\n","sourceRoot":"<p>Specify the root path for debuggers to find the reference source code.</p>\n","stripInternal":"<p>Disable emitting declarations that have <code>@internal</code> in their JSDoc comments.</p>\n","allowJs":"<p>Izinkan TS menyertakan berkas .JS di impor</p>\n","checkJs":"<p>Jalankan tulisan checker pada .js berkas dalam proyek Anda</p>\n","maxNodeModuleJsDepth":"<p>Specify the maximum folder depth used for checking JavaScript files from <code>node_modules</code>. Only applicable with <a href=\"#allowJs\"><code>allowJs</code></a>.</p>\n","disableSizeLimit":"<p>Menghapus batasan memori pada server bahasa TypeScript</p>\n","plugins":"<p>Specify a list of language service plugins to include.</p>\n","allowSyntheticDefaultImports":"<p>Izinkan 'impor x dari y' jika modul tidak memiliki setelan standar ekspor</p>\n","esModuleInterop":"<p>Menghasilkan JS tambahan untuk memudahkan dukungan untuk mengimpor modul commonjs</p>\n","forceConsistentCasingInFileNames":"<p>Pastikan jenis huruf sudah benar dalam impor</p>\n","isolatedModules":"<p>Pastikan setiap berkas dapat dilihat dengan aman tanpa bergantung pada impor lain</p>\n","preserveSymlinks":"<p>Disable resolving symlinks to their realpath. This correlates to the same flag in node.</p>\n","verbatimModuleSyntax":"<p>Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting.</p>\n","charset":"<p>Atur pengkodean teks secara manual untuk membaca berkas</p>\n","keyofStringsOnly":"<p>Make keyof only return strings instead of string, numbers or symbols. Legacy option.</p>\n","noImplicitUseStrict":"<p>Menonaktifkan 'use strict' dalam mengeluarkan JS</p>\n","noStrictGenericChecks":"<p>Disable strict checking of generic signatures in function types.</p>\n","out":"<p>Jangan menggunakan ini</p>\n","suppressExcessPropertyErrors":"<p>Disable reporting of excess property errors during the creation of object literals.</p>\n","suppressImplicitAnyIndexErrors":"<p>Suppress <a href=\"#noImplicitAny\"><code>noImplicitAny</code></a> errors when indexing objects that lack index signatures.</p>\n","emitDecoratorMetadata":"<p>Menambahkan metadata jenis tambahan ke dekorator dalam kode yang dihasilkan</p>\n","experimentalDecorators":"<p>Menyalakan dukungan eksperimental untuk decorator TC39 Tahap 2</p>\n","jsx":"<p>Mengatur bagaimana JSX dihasilkan</p>\n","jsxFactory":"<p>Mengatur fungsi yang dihasilkan oleh JSX</p>\n","jsxFragmentFactory":"<p>Menentukan pengidentifikasi fragmen JSX akan diubah seperti apa</p>\n","jsxImportSource":"<p>Specify module specifier used to import the JSX factory functions when using <code>jsx: react-jsx*</code>.</p>\n","lib":"<p>Specify a set of bundled library declaration files that describe the target runtime environment.</p>\n","moduleDetection":"<p>Specify what method is used to detect whether a file is a script or a module.</p>\n","noLib":"<p>Disable including any library files, including the default lib.d.ts.</p>\n","reactNamespace":"<p>Menentukan objek yang dipanggil oleh 'createElement' di JSX</p>\n","target":"<p>Menyetel versi bahasa JavaScript untuk JavaScript yang dideklarasikan dan menyertakan deklarasi pustaka yang kompatibel.</p>\n","useDefineForClassFields":"<p>Emit ECMAScript-standard-compliant class fields.</p>\n","diagnostics":"<p>Mengeluarkan informasi tambahan setelah kompilasi</p>\n","explainFiles":"<p>Print files read during the compilation including why it was included.</p>\n","extendedDiagnostics":"<p>Menyertakan banyak diagnosa informasi setelah kompilasi</p>\n","generateCpuProfile":"<p>Keluarkan profil CPU v8 dari penyusun yang dijalankan untuk di analisa</p>\n","listEmittedFiles":"<p>Print the names of emitted files after a compilation.</p>\n","listFiles":"<p>Print all of the files read during the compilation.</p>\n","traceResolution":"<p>Log paths used during the <a href=\"#moduleResolution\"><code>moduleResolution</code></a> process.</p>\n","composite":"<p>Digunakan untuk membuat banyak proyek pembangunan</p>\n","disableReferencedProjectLoad":"<p>Mengurangi jumlah proyek yang dimuat secara otomatis oleh TypeScript</p>\n","disableSolutionSearching":"<p>Memilih proyek dari pemeriksaan referensi multi-proyek</p>\n","disableSourceOfProjectReferenceRedirect":"<p>Gunakan berkas d.ts sebagai sumber kebenaran untuk perkakas antara batasan proyek gabungan</p>\n","incremental":"<p>Simpan berkas .tsbuildinfo untuk kompilasi proyek secara bertahap</p>\n","tsBuildInfoFile":"<p>The file to store <code>.tsbuildinfo</code> incremental build information in.</p>\n","noErrorTruncation":"<p>Disable truncating types in error messages.</p>\n","preserveWatchOutput":"<p>Disable wiping the console in watch mode.</p>\n","pretty":"<p>Enable color and formatting in TypeScript's output to make compiler errors easier to read.</p>\n","skipDefaultLibCheck":"<p>Gunakan SkipLibCheck sebagai gantinya</p>\n","skipLibCheck":"<p>Melewati pengecekan jenis berkas deklarasi</p>\n","assumeChangesOnlyAffectDirectDependencies":"<p>Opsi mode yang lebih cepat secara drastis, tetapi terkadang tidak akurat.</p>\n","watchFile":"<p>Teknik apa yang harus digunakan oleh pengamat</p>\n","watchDirectory":"<p>Menentukan bagaimana direktori-direktori diperhatikan</p>\n","fallbackPolling":"<p>Apa yang harus digunakan pengawas jika sistem kehabisan pengamat berkas asli</p>\n","synchronousWatchDirectory":"<p>Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively.</p>\n","excludeDirectories":"<p>Remove a list of directories from the watch process.</p>\n","excludeFiles":"<p>Remove a list of files from the watch mode's processing.</p>\n","enable":"<p>Disable the type acquisition for JavaScript projects.</p>\n","disableFilenameBasedTypeAcquisition":"<p>Disables inference for type acquisition by looking at filenames in a project.</p>\n"}