{"files":"<p>Inclui uma lista de arquivos, não suporta globs</p>\n","extends":"<p>Permite herança das opções de outro arquivo TSConfig</p>\n","include":"<p>Specify a list of modules which to acquire types for.</p>\n","exclude":"<p>Specify a list of modules which to exclude from type acquisition.</p>\n","references":"<p>Prover uma estrutura para projetos compostos</p>\n","allowUnreachableCode":"<p>Exibe um erro quando o código nunca será executado</p>\n","allowUnusedLabels":"<p>Exibe um erro quando uma label é criada acidentalmente</p>\n","alwaysStrict":"<p>Garante que 'use strict' é sempre emitido no início do arquivo</p>\n","exactOptionalPropertyTypes":"<p>Interpret optional property types as written, rather than adding <code>undefined</code>.</p>\n","noFallthroughCasesInSwitch":"<p>Relate erros para casos de falha nas instruções switch.</p>\n","noImplicitAny":"<p>Evita introduzir 'anys' dentro de sua base de código quando um tipo puder ser especificado</p>\n","noImplicitOverride":"<p>Ensure overriding members in derived classes are marked with an override modifier.</p>\n","noImplicitReturns":"<p>Garante que todos os caminhos de código de uma função tenham retorno</p>\n","noImplicitThis":"<p>Emite erro nas expressões 'this' com tipo 'any' implícito</p>\n","noPropertyAccessFromIndexSignature":"<p>Força o uso de acessadores indexados para chaves declaradas usando um tipo indexado</p>\n","noUncheckedIndexedAccess":"<p>Usa undefined para um tipo quando acessado através de um índice</p>\n","noUnusedLocals":"<p>Emite erro quando uma váriavel local não é lida</p>\n","noUnusedParameters":"<p>Emite erro quando um parâmetro não é utilizado</p>\n","strict":"<p>Ativa as regras de verificação de tipo mais detalhadas do TypeScript</p>\n","strictBindCallApply":"<p>Garante que 'call', 'bind' e 'apply' tenham os argumentos corretos</p>\n","strictFunctionTypes":"<p>Garante que os parâmetros da função são consistentes</p>\n","strictNullChecks":"<p>Certifique-se de que a nulidade é respeitada ao se verificar os tipos</p>\n","strictPropertyInitialization":"<p>Garante que todas as propriedades da classe correspondam aos seus tipos depois que o construtor finalizar</p>\n","useUnknownInCatchVariables":"<p>Default catch clause variables as <code>unknown</code> instead of <code>any</code>.</p>\n","allowArbitraryExtensions":"<p>Enable importing files with any extension, provided a declaration file is present.</p>\n","allowImportingTsExtensions":"<p>Allow imports to include TypeScript file extensions.</p>\n","allowUmdGlobalAccess":"<p>Assume que todos os imports UMD estão disponíveis globalmente</p>\n","baseUrl":"<p>Configura uma URL base para os nomes relativos de módulos</p>\n","customConditions":"<p>Conditions to set in addition to the resolver-specific defaults when resolving imports.</p>\n","module":"<p>Define o sistema de módulo esperado para o seu tempo de execução</p>\n","moduleResolution":"<p>Permite a especificação de estratégias de resolução de módulos TypeScript 1.6</p>\n","moduleSuffixes":"<p>List of file name suffixes to search when resolving a module.</p>\n","noResolve":"<p>Pula a verificação antecipada para arquivos de 'import' e '&#x3C;reference'</p>\n","paths":"<p>Um conjunto de locais para buscar importações</p>\n","resolveJsonModule":"<p>Permite importar arquivos .json.</p>\n","resolvePackageJsonExports":"<p>Use the package.json 'exports' field when resolving package imports.</p>\n","resolvePackageJsonImports":"<p>Use the package.json 'imports' field when resolving imports.</p>\n","rootDir":"<p>Define o diretório raiz dos seus arquivos fonte</p>\n","rootDirs":"<p>Define múltiplos diretórios raiz</p>\n","typeRoots":"<p>Locais onde o TypeScript deve buscar por definições de tipo</p>\n","types":"<p>Utilizada para criar uma lista de tipos permitidos, a serem incluídos na compilação</p>\n","declaration":"<p>Emite arquivos d.ts para os arquivos referenciados no projeto</p>\n","declarationDir":"<p>Define o diretório raiz para os arquivos .d.ts</p>\n","declarationMap":"<p>Cria arquivos sourcemap para os arquivos .d.ts</p>\n","downlevelIteration":"<p>Emite JavaScript mais compatível, porém mais verboso, para objetos iterativos</p>\n","emitBOM":"<p>Inclui um byte order mark nos arquivos de saída</p>\n","emitDeclarationOnly":"<p>Somente emitir arquivos .d.ts e não emitir arquivos .js</p>\n","importHelpers":"<p>Permite importar funções auxiliares por projeto, ao invés de incluir em arquivos individuais.</p>\n","importsNotUsedAsValues":"<p>Controla qual a sintaxe você utiliza para importar tipos</p>\n","inlineSourceMap":"<p>Incluir arquivos de mapa de origem dentro do JavaScript emitido</p>\n","inlineSources":"<p>Incluir arquivos de mapa de origem dentro do JavaScript emitido</p>\n","mapRoot":"<p>Defina uma raiz externa para mapas de origem</p>\n","newLine":"<p>Defina o caractere de nova linha</p>\n","noEmit":"<p>Não emita arquivos de uma compilação</p>\n","noEmitHelpers":"<p>Suponha que auxiliares estejam disponíveis no tempo de execução global</p>\n","noEmitOnError":"<p>Só emite arquivos em uma compilação bem-sucedida</p>\n","outDir":"<p>Defina uma pasta de saída para todos os arquivos emitidos</p>\n","outFile":"<p>Produza um único arquivo de todos os arquivos JS concatenados</p>\n","preserveConstEnums":"<p>Não apaga as declarações <code>const enum</code> no código gerado</p>\n","preserveValueImports":"<p>Preserve unused imported values in the JavaScript output that would otherwise be removed.</p>\n","removeComments":"<p>Remove comentários do TypeScript para não aparecer no JavaScript</p>\n","sourceMap":"<p>Cria mapas de código para os arquivos JavaScript emitidos</p>\n","sourceRoot":"<p>Configura o caminho da raiz para depuradores acharem o código-fonte referenciado</p>\n","stripInternal":"<p>Remove as declarações que têm '@internal' em seus comentários JSDoc</p>\n","allowJs":"<p>Permite que o TS inclua arquivos .JS nos imports</p>\n","checkJs":"<p>Executa o verificador de tipos em arquivos .js do seu projeto</p>\n","maxNodeModuleJsDepth":"<p>Quão profundo o TypeScript deve executar a verificação de tipo em node_modules</p>\n","disableSizeLimit":"<p>Remove a limitação de memória no servidor de linguagem do TypeScript</p>\n","plugins":"<p>Uma lista de plugins de linguagem a serem incluídos</p>\n","allowSyntheticDefaultImports":"<p>Permite 'import x from y' quando um módulo não tem um export padrão</p>\n","esModuleInterop":"<p>Emite JS adicional para dar suporte ao importar módulos commonjs</p>\n","forceConsistentCasingInFileNames":"<p>Verifica se as letras maiúsculas e minúsculas estão corretas nas importações</p>\n","isolatedModules":"<p>Certifique-se de que cada arquivo pode ser transpilado com segurança, sem depender de outras importações</p>\n","preserveSymlinks":"<p>Não resolva caminhos de links simbólicos</p>\n","verbatimModuleSyntax":"<p>Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting.</p>\n","charset":"<p>Seta manualmente o encoding do texto para leitura de arquivos</p>\n","keyofStringsOnly":"<p>Faça com que keyof retorne apenas strings em vez de strings ou números</p>\n","noImplicitUseStrict":"<p>Desabilita 'use strict' na emissão JS</p>\n","noStrictGenericChecks":"<p>Desativa a verificação estrita de assinaturas genéricas em funções.</p>\n","out":"<p>Evite usar esta opção</p>\n","suppressExcessPropertyErrors":"<p>Permitir que propriedades adicionais sejam definidas durante a criação de tipos</p>\n","suppressImplicitAnyIndexErrors":"<p>Remove o aviso ao usar índices de string para acessar propriedades desconhecidas</p>\n","emitDecoratorMetadata":"<p>Adiciona metadados de tipo adicionais a decorators no código emitido</p>\n","experimentalDecorators":"<p>Habilita suporte aos decorators do TC39 stage 2</p>\n","jsx":"<p>Controla como o JSX é emitido</p>\n","jsxFactory":"<p>Controle a função emitida pelo JSX</p>\n","jsxFragmentFactory":"<p>Faz alguma coisa</p>\n","jsxImportSource":"<p>O especificador de módulo para importar as funções factory jsx</p>\n","lib":"<p>Inclua definições de tipo que você sabe que estão disponíveis em seu tempo de execução de JavaScript</p>\n","moduleDetection":"<p>Specify what method is used to detect whether a file is a script or a module.</p>\n","noLib":"<p>Ignora opções de biblioteca</p>\n","reactNamespace":"<p>Especificar o objeto em que 'createElement' é chamado no JSX</p>\n","target":"<p>Defina o runtime suportado da linguagem JavaScript para ser transpilado</p>\n","useDefineForClassFields":"<p>Usar características do define para propriedades de classes</p>\n","diagnostics":"<p>Gera mais informações de diagnóstico após a compilação</p>\n","explainFiles":"<p>Imprime os arquivos lidos durante a compilação juntamente com o motivo de sua inclusão.</p>\n","extendedDiagnostics":"<p>Inclui diversas informações de diagnóstico depois de uma compilação.</p>\n","generateCpuProfile":"<p>Emite um perfil de CPU do compilador para depuração</p>\n","listEmittedFiles":"<p>Imprime os nomes dos arquivos emitidos após uma compilação</p>\n","listFiles":"<p>Imprime todos os arquivos lidos durante a compilação</p>\n","traceResolution":"<p>Fazer log de caminhos ao resolver todos os módulos</p>\n","composite":"<p>Usado para criar múltiplos projetos de build</p>\n","disableReferencedProjectLoad":"<p>Reduz o número de projetos carregados automaticamente pelo TypeScript</p>\n","disableSolutionSearching":"<p>Remove um projeto da checagem de referências multi-projeto</p>\n","disableSourceOfProjectReferenceRedirect":"<p>Usar arquivos .d.ts como a fonte de verdade para todas as ferramentas dentro do escopo de projetos compostos</p>\n","incremental":"<p>Salve arquivos .tsbuildinfo para permitir a compilação incremental de projetos</p>\n","tsBuildInfoFile":"<p>Conjunto de pastas para os arquivos .tsbuildinfo</p>\n","noErrorTruncation":"<p>Não truncar mensagens de erro</p>\n","preserveWatchOutput":"<p>Não limpar o console no modo de observação</p>\n","pretty":"<p>Usa cores e formatos para tornar os erros de compilação mais fáceis de ler</p>\n","skipDefaultLibCheck":"<p>Utilize o SkipLibCheck ao invés dessa</p>\n","skipLibCheck":"<p>Pula a verificação dos arquivos de declaração</p>\n","assumeChangesOnlyAffectDirectDependencies":"<p>Uma opção do modo watch que é drasticamente mais rápida, mas ocasionalmente imprecisa.</p>\n","watchFile":"<p>Qual técnica o observador de arquivos deve usar</p>\n","watchDirectory":"<p>Determina como os diretórios são observados</p>\n","fallbackPolling":"<p>O que o observador deve fazer se o sistema ficar sem observadores de arquivos nativos.</p>\n","synchronousWatchDirectory":"<p>Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively.</p>\n","excludeDirectories":"<p>Remove a list of directories from the watch process.</p>\n","excludeFiles":"<p>Remove a list of files from the watch mode's processing.</p>\n","enable":"<p>Disable the type acquisition for JavaScript projects.</p>\n","disableFilenameBasedTypeAcquisition":"<p>Disables inference for type acquisition by looking at filenames in a project.</p>\n"}